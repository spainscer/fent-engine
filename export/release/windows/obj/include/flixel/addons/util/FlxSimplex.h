// Generated by Haxe 4.1.5
#ifndef INCLUDED_flixel_addons_util_FlxSimplex
#define INCLUDED_flixel_addons_util_FlxSimplex

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,addons,util,FlxSimplex)

namespace flixel{
namespace addons{
namespace util{


class HXCPP_CLASS_ATTRIBUTES FlxSimplex_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef FlxSimplex_obj OBJ_;
		FlxSimplex_obj();

	public:
		enum { _hx_ClassId = 0x5e39a0e5 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="flixel.addons.util.FlxSimplex")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"flixel.addons.util.FlxSimplex"); }

		inline static ::hx::ObjectPtr< FlxSimplex_obj > __new() {
			::hx::ObjectPtr< FlxSimplex_obj > __this = new FlxSimplex_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< FlxSimplex_obj > __alloc(::hx::Ctx *_hx_ctx) {
			FlxSimplex_obj *__this = (FlxSimplex_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FlxSimplex_obj), false, "flixel.addons.util.FlxSimplex"));
			*(void **)__this = FlxSimplex_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FlxSimplex_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FlxSimplex",d4,61,d0,e5); }

		static void __boot();
		static Float SKEW;
		static Float UNSKEW;
		static Float SKEW_4D;
		static Float UNSKEW_4D;
		static ::Array< int > p;
		static ::Array< ::Dynamic> cells4D;
		static int i;
		static int j;
		static int k;
		static int l;
		static Float x0;
		static Float y0;
		static Float z0;
		static Float w0;
		static ::Array< int > A2;
		static Float simplexTiles(Float x,Float y,Float baseX,Float baseY,Float seed,::hx::Null< Float >  scale,::hx::Null< Float >  persistence,::hx::Null< int >  octaves);
		static ::Dynamic simplexTiles_dyn();

		static Float simplexOctaves(Float x,Float y,::hx::Null< Float >  scale,::hx::Null< Float >  persistence,::hx::Null< int >  octaves);
		static ::Dynamic simplexOctaves_dyn();

		static Float simplex(Float x,Float y);
		static ::Dynamic simplex_dyn();

		static Float getCornerNoise(int a);
		static ::Dynamic getCornerNoise_dyn();

		static Float simplex4D(Float x,Float y,Float z,Float w);
		static ::Dynamic simplex4D_dyn();

		static Float getCornerNoise4D(int a);
		static ::Dynamic getCornerNoise4D_dyn();

};

} // end namespace flixel
} // end namespace addons
} // end namespace util

#endif /* INCLUDED_flixel_addons_util_FlxSimplex */ 
