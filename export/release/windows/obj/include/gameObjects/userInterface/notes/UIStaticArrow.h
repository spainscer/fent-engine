// Generated by Haxe 4.1.5
#ifndef INCLUDED_gameObjects_userInterface_notes_UIStaticArrow
#define INCLUDED_gameObjects_userInterface_notes_UIStaticArrow

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS3(gameObjects,userInterface,notes,UIStaticArrow)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)

namespace gameObjects{
namespace userInterface{
namespace notes{


class HXCPP_CLASS_ATTRIBUTES UIStaticArrow_obj : public  ::flixel::FlxSprite_obj
{
	public:
		typedef  ::flixel::FlxSprite_obj super;
		typedef UIStaticArrow_obj OBJ_;
		UIStaticArrow_obj();

	public:
		enum { _hx_ClassId = 0x4467c352 };

		void __construct(Float x,Float y, ::Dynamic __o_babyArrowType);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="gameObjects.userInterface.notes.UIStaticArrow")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"gameObjects.userInterface.notes.UIStaticArrow"); }
		static ::hx::ObjectPtr< UIStaticArrow_obj > __new(Float x,Float y, ::Dynamic __o_babyArrowType);
		static ::hx::ObjectPtr< UIStaticArrow_obj > __alloc(::hx::Ctx *_hx_ctx,Float x,Float y, ::Dynamic __o_babyArrowType);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~UIStaticArrow_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("UIStaticArrow",47,dc,0e,07); }

		static ::String getArrowFromNumber(int numb);
		static ::Dynamic getArrowFromNumber_dyn();

		static ::String getColorFromNumber(int numb);
		static ::Dynamic getColorFromNumber_dyn();

		 ::haxe::ds::StringMap animOffsets;
		int babyArrowType;
		bool canFinishAnimation;
		int initialX;
		int initialY;
		Float xTo;
		Float yTo;
		Float angleTo;
		Float setAlpha;
		void playAnim(::String AnimName,::hx::Null< bool >  Force,::hx::Null< bool >  Reversed,::hx::Null< int >  Frame);
		::Dynamic playAnim_dyn();

		void addOffset(::String name,::hx::Null< Float >  x,::hx::Null< Float >  y);
		::Dynamic addOffset_dyn();

};

} // end namespace gameObjects
} // end namespace userInterface
} // end namespace notes

#endif /* INCLUDED_gameObjects_userInterface_notes_UIStaticArrow */ 
