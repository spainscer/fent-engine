// Generated by Haxe 4.1.5
#ifndef INCLUDED_ForeverTools
#define INCLUDED_ForeverTools

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(ForeverTools)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS2(flixel,_hx_system,FlxSound)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES ForeverTools_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ForeverTools_obj OBJ_;
		ForeverTools_obj();

	public:
		enum { _hx_ClassId = 0x03ea039c };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="ForeverTools")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"ForeverTools"); }

		inline static ::hx::ObjectPtr< ForeverTools_obj > __new() {
			::hx::ObjectPtr< ForeverTools_obj > __this = new ForeverTools_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< ForeverTools_obj > __alloc(::hx::Ctx *_hx_ctx) {
			ForeverTools_obj *__this = (ForeverTools_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ForeverTools_obj), false, "ForeverTools"));
			*(void **)__this = ForeverTools_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ForeverTools_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ForeverTools",14,e2,73,b6); }

		static void resetMenuMusic(::hx::Null< bool >  resetVolume);
		static ::Dynamic resetMenuMusic_dyn();

		static ::String returnSkinAsset(::String asset,::String assetModifier,::String changeableSkin,::String baseLibrary,::String defaultChangeableSkin,::String defaultBaseAsset);
		static ::Dynamic returnSkinAsset_dyn();

		static void killMusic(::Array< ::Dynamic> songsArray);
		static ::Dynamic killMusic_dyn();

};


#endif /* INCLUDED_ForeverTools */ 
