// Generated by Haxe 4.1.5
#ifndef INCLUDED_ForeverAssets
#define INCLUDED_ForeverAssets

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(ForeverAssets)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS3(gameObjects,userInterface,menu,Checkmark)
HX_DECLARE_CLASS3(gameObjects,userInterface,notes,Note)
HX_DECLARE_CLASS3(gameObjects,userInterface,notes,NoteSplash)
HX_DECLARE_CLASS3(gameObjects,userInterface,notes,UIStaticArrow)
HX_DECLARE_CLASS3(meta,data,dependency,FNFSprite)



class HXCPP_CLASS_ATTRIBUTES ForeverAssets_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ForeverAssets_obj OBJ_;
		ForeverAssets_obj();

	public:
		enum { _hx_ClassId = 0x517b17c6 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="ForeverAssets")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"ForeverAssets"); }

		inline static ::hx::ObjectPtr< ForeverAssets_obj > __new() {
			::hx::ObjectPtr< ForeverAssets_obj > __this = new ForeverAssets_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< ForeverAssets_obj > __alloc(::hx::Ctx *_hx_ctx) {
			ForeverAssets_obj *__this = (ForeverAssets_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ForeverAssets_obj), false, "ForeverAssets"));
			*(void **)__this = ForeverAssets_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ForeverAssets_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ForeverAssets",6a,f2,63,a6); }

		static  ::flixel::FlxSprite generateCombo(::String asset,::String number,bool allSicks,::String assetModifier,::String changeableSkin,::String baseLibrary,bool negative,int createdColor,int scoreInt);
		static ::Dynamic generateCombo_dyn();

		static  ::flixel::FlxSprite generateRating(::String asset,bool perfectSick,::String timing,::String assetModifier,::String changeableSkin,::String baseLibrary);
		static ::Dynamic generateRating_dyn();

		static  ::gameObjects::userInterface::notes::NoteSplash generateNoteSplashes(::String asset,::String assetModifier,::String baseLibrary,int noteData);
		static ::Dynamic generateNoteSplashes_dyn();

		static  ::gameObjects::userInterface::notes::UIStaticArrow generateUIArrows(Float x,Float y, ::Dynamic staticArrowType,::String assetModifier);
		static ::Dynamic generateUIArrows_dyn();

		static  ::gameObjects::userInterface::notes::Note generateArrow(::String assetModifier,Float strumTime,int noteData,int noteType,Float noteAlt, ::Dynamic isSustainNote, ::gameObjects::userInterface::notes::Note prevNote);
		static ::Dynamic generateArrow_dyn();

		static  ::gameObjects::userInterface::menu::Checkmark generateCheckmark(Float x,Float y,::String asset,::String assetModifier,::String changeableSkin,::String baseLibrary);
		static ::Dynamic generateCheckmark_dyn();

};


#endif /* INCLUDED_ForeverAssets */ 
