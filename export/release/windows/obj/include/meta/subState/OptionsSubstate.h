// Generated by Haxe 4.1.5
#ifndef INCLUDED_meta_subState_OptionsSubstate
#define INCLUDED_meta_subState_OptionsSubstate

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_meta_MusicBeatSubState
#include <meta/MusicBeatSubState.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS1(flixel,FlxSubState)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(meta,MusicBeatSubState)
HX_DECLARE_CLASS2(meta,subState,OptionsSubstate)

namespace meta{
namespace subState{


class HXCPP_CLASS_ATTRIBUTES OptionsSubstate_obj : public  ::meta::MusicBeatSubState_obj
{
	public:
		typedef  ::meta::MusicBeatSubState_obj super;
		typedef OptionsSubstate_obj OBJ_;
		OptionsSubstate_obj();

	public:
		enum { _hx_ClassId = 0x74873d79 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="meta.subState.OptionsSubstate")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"meta.subState.OptionsSubstate"); }
		static ::hx::ObjectPtr< OptionsSubstate_obj > __new();
		static ::hx::ObjectPtr< OptionsSubstate_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~OptionsSubstate_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("OptionsSubstate",ef,e1,c8,3a); }

		int curSelection;
		 ::flixel::group::FlxTypedGroup submenuGroup;
		 ::flixel::group::FlxTypedGroup submenuoffsetGroup;
		Float offsetTemp;
		void create();

		 ::flixel::group::FlxTypedGroup keyOptions;
		 ::flixel::group::FlxTypedGroup otherKeys;
		 ::flixel::group::FlxTypedGroup generateOptions();
		::Dynamic generateOptions_dyn();

		void generateExtra(::Array< ::String > arrayTemp);
		::Dynamic generateExtra_dyn();

		::String getStringKey( ::Dynamic arrayThingy);
		::Dynamic getStringKey_dyn();

		void updateSelection(::hx::Null< int >  equal);
		::Dynamic updateSelection_dyn();

		int curHorizontalSelection;
		void updateHorizontalSelection();
		::Dynamic updateHorizontalSelection_dyn();

		bool submenuOpen;
		void update(Float elapsed);

		void close();

		 ::flixel::FlxSprite submenu;
		void openSubmenu();
		::Dynamic openSubmenu_dyn();

		void closeSubmenu();
		::Dynamic closeSubmenu_dyn();

		void subMenuControl();
		::Dynamic subMenuControl_dyn();

};

} // end namespace meta
} // end namespace subState

#endif /* INCLUDED_meta_subState_OptionsSubstate */ 
