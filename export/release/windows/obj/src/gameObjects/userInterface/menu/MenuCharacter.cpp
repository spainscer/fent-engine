// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Paths
#include <Paths.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_gameObjects_userInterface_menu_MenuCharacter
#include <gameObjects/userInterface/menu/MenuCharacter.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_958c79e9022f9479_6_new,"gameObjects.userInterface.menu.MenuCharacter","new",0x133688b9,"gameObjects.userInterface.menu.MenuCharacter.new","gameObjects/userInterface/menu/MenuCharacter.hx",6,0x0606dfd6)
HX_LOCAL_STACK_FRAME(_hx_pos_958c79e9022f9479_40_createCharacter,"gameObjects.userInterface.menu.MenuCharacter","createCharacter",0x5ac8eee6,"gameObjects.userInterface.menu.MenuCharacter.createCharacter","gameObjects/userInterface/menu/MenuCharacter.hx",40,0x0606dfd6)
namespace gameObjects{
namespace userInterface{
namespace menu{

void MenuCharacter_obj::__construct(Float x,::String __o_newCharacter){
            		::String newCharacter = __o_newCharacter;
            		if (::hx::IsNull(__o_newCharacter)) newCharacter = HX_("bf",c4,55,00,00);
            	HX_GC_STACKFRAME(&_hx_pos_958c79e9022f9479_6_new)
HXLINE(  25)		this->baseY = ((Float)0);
HXLINE(  24)		this->baseX = ((Float)0);
HXLINE(  10)		 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  10)		_g->set(HX_("bf",c4,55,00,00),::cpp::VirtualArray_obj::__new(6)->init(0,HX_("BF idle dance white",cc,b4,ad,68))->init(1,24)->init(2,true)->init(3,((Float)0.9))->init(4,100)->init(5,100));
HXDLIN(  10)		_g->set(HX_("bfConfirm",9c,6f,0e,68),::cpp::VirtualArray_obj::__new(6)->init(0,HX_("BF HEY!!",40,93,04,8c))->init(1,24)->init(2,false)->init(3,((Float)0.9))->init(4,100)->init(5,100));
HXDLIN(  10)		_g->set(HX_("gf",1f,5a,00,00),::cpp::VirtualArray_obj::__new(6)->init(0,HX_("GF Dancing Beat WHITE",f0,84,9e,e1))->init(1,24)->init(2,true)->init(3,1)->init(4,100)->init(5,100));
HXDLIN(  10)		_g->set(HX_("dad",47,36,4c,00),::cpp::VirtualArray_obj::__new(6)->init(0,HX_("Dad idle dance BLACK LINE",b5,ef,e0,8b))->init(1,24)->init(2,true)->init(3,((Float)0.5))->init(4,0)->init(5,0));
HXDLIN(  10)		_g->set(HX_("spooky",eb,bd,9e,c1),::cpp::VirtualArray_obj::__new(6)->init(0,HX_("spooky dance idle BLACK LINES",b4,84,b1,60))->init(1,24)->init(2,true)->init(3,((Float)0.5))->init(4,0)->init(5,90));
HXDLIN(  10)		_g->set(HX_("pico",e5,e8,57,4a),::cpp::VirtualArray_obj::__new(6)->init(0,HX_("Pico Idle Dance",62,48,dd,f6))->init(1,24)->init(2,true)->init(3,((Float)0.5))->init(4,0)->init(5,100));
HXDLIN(  10)		_g->set(HX_("mom",cb,16,53,00),::cpp::VirtualArray_obj::__new(6)->init(0,HX_("Mom Idle BLACK LINES",c7,f6,14,d1))->init(1,24)->init(2,true)->init(3,((Float)0.5))->init(4,0)->init(5,-20));
HXDLIN(  10)		_g->set(HX_("parents-christmas",fe,94,c5,32),::cpp::VirtualArray_obj::__new(6)->init(0,HX_("Parent Christmas Idle",c8,04,64,10))->init(1,24)->init(2,true)->init(3,((Float)0.8))->init(4,-100)->init(5,50));
HXDLIN(  10)		_g->set(HX_("senpai",3c,df,8d,6b),::cpp::VirtualArray_obj::__new(6)->init(0,HX_("SENPAI idle Black Lines",f6,9a,63,5d))->init(1,24)->init(2,true)->init(3,((Float)0.7))->init(4,-50)->init(5,100));
HXDLIN(  10)		this->curCharacterMap = _g;
HXLINE(   8)		this->character = HX_("",00,00,00,00);
HXLINE(  29)		super::__construct(x,null(),null());
HXLINE(  30)		{
HXLINE(  30)			 ::gameObjects::userInterface::menu::MenuCharacter _g1 = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN(  30)			_g1->set_y((_g1->y + 70));
            		}
HXLINE(  32)		this->baseX = x;
HXLINE(  33)		this->baseY = this->y;
HXLINE(  35)		this->createCharacter(newCharacter,null());
HXLINE(  36)		this->updateHitbox();
            	}

Dynamic MenuCharacter_obj::__CreateEmpty() { return new MenuCharacter_obj; }

void *MenuCharacter_obj::_hx_vtable = 0;

Dynamic MenuCharacter_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< MenuCharacter_obj > _hx_result = new MenuCharacter_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool MenuCharacter_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x69a05737) {
		if (inClassId<=(int)0x2c01639b) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x2c01639b;
		} else {
			return inClassId==(int)0x69a05737;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}

void MenuCharacter_obj::createCharacter(::String newCharacter,::hx::Null< bool >  __o_canChange){
            		bool canChange = __o_canChange.Default(false);
            	HX_STACKFRAME(&_hx_pos_958c79e9022f9479_40_createCharacter)
HXLINE(  41)		::String library = null();
HXDLIN(  41)		::String tex = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("menus/base/storymenu/campaign_menu_UI_characters",26,45,86,b0)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN(  41)		 ::flixel::graphics::frames::FlxAtlasFrames tex1 = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("menus/base/storymenu/campaign_menu_UI_characters",26,45,86,b0)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE(  42)		this->set_frames(tex1);
HXLINE(  43)		::cpp::VirtualArray assortedValues = ( (::cpp::VirtualArray)(this->curCharacterMap->get(newCharacter)) );
HXLINE(  44)		if (::hx::IsNotNull( assortedValues )) {
HXLINE(  46)			if (!(this->visible)) {
HXLINE(  47)				this->set_visible(true);
            			}
HXLINE(  50)			this->animation->addByPrefix(newCharacter,( (::String)(assortedValues->__get(0)) ),assortedValues->__get(1),assortedValues->__get(2),null(),null());
HXLINE(  52)			this->animation->play(newCharacter,null(),null(),null());
HXLINE(  54)			if (canChange) {
HXLINE(  57)				Float _hx_tmp = this->get_width();
HXDLIN(  57)				this->setGraphicSize(::Std_obj::_hx_int((_hx_tmp * ( (Float)(assortedValues->__get(3)) ))),null());
HXLINE(  58)				this->updateHitbox();
HXLINE(  59)				this->setPosition((this->baseX + assortedValues->__get(4)),(this->baseY + assortedValues->__get(5)));
HXLINE(  61)				if ((newCharacter == HX_("pico",e5,e8,57,4a))) {
HXLINE(  62)					this->set_flipX(true);
            				}
            				else {
HXLINE(  64)					this->set_flipX(false);
            				}
            			}
            		}
            		else {
HXLINE(  68)			this->set_visible(false);
            		}
HXLINE(  70)		this->character = newCharacter;
            	}


HX_DEFINE_DYNAMIC_FUNC2(MenuCharacter_obj,createCharacter,(void))


::hx::ObjectPtr< MenuCharacter_obj > MenuCharacter_obj::__new(Float x,::String __o_newCharacter) {
	::hx::ObjectPtr< MenuCharacter_obj > __this = new MenuCharacter_obj();
	__this->__construct(x,__o_newCharacter);
	return __this;
}

::hx::ObjectPtr< MenuCharacter_obj > MenuCharacter_obj::__alloc(::hx::Ctx *_hx_ctx,Float x,::String __o_newCharacter) {
	MenuCharacter_obj *__this = (MenuCharacter_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(MenuCharacter_obj), true, "gameObjects.userInterface.menu.MenuCharacter"));
	*(void **)__this = MenuCharacter_obj::_hx_vtable;
	__this->__construct(x,__o_newCharacter);
	return __this;
}

MenuCharacter_obj::MenuCharacter_obj()
{
}

void MenuCharacter_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MenuCharacter);
	HX_MARK_MEMBER_NAME(character,"character");
	HX_MARK_MEMBER_NAME(curCharacterMap,"curCharacterMap");
	HX_MARK_MEMBER_NAME(baseX,"baseX");
	HX_MARK_MEMBER_NAME(baseY,"baseY");
	 ::flixel::FlxSprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void MenuCharacter_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(character,"character");
	HX_VISIT_MEMBER_NAME(curCharacterMap,"curCharacterMap");
	HX_VISIT_MEMBER_NAME(baseX,"baseX");
	HX_VISIT_MEMBER_NAME(baseY,"baseY");
	 ::flixel::FlxSprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val MenuCharacter_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"baseX") ) { return ::hx::Val( baseX ); }
		if (HX_FIELD_EQ(inName,"baseY") ) { return ::hx::Val( baseY ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"character") ) { return ::hx::Val( character ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"curCharacterMap") ) { return ::hx::Val( curCharacterMap ); }
		if (HX_FIELD_EQ(inName,"createCharacter") ) { return ::hx::Val( createCharacter_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val MenuCharacter_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"baseX") ) { baseX=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"baseY") ) { baseY=inValue.Cast< Float >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"character") ) { character=inValue.Cast< ::String >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"curCharacterMap") ) { curCharacterMap=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void MenuCharacter_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("character",a9,db,d1,41));
	outFields->push(HX_("curCharacterMap",13,e8,c8,96));
	outFields->push(HX_("baseX",27,27,ba,ad));
	outFields->push(HX_("baseY",28,27,ba,ad));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo MenuCharacter_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(MenuCharacter_obj,character),HX_("character",a9,db,d1,41)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(MenuCharacter_obj,curCharacterMap),HX_("curCharacterMap",13,e8,c8,96)},
	{::hx::fsFloat,(int)offsetof(MenuCharacter_obj,baseX),HX_("baseX",27,27,ba,ad)},
	{::hx::fsFloat,(int)offsetof(MenuCharacter_obj,baseY),HX_("baseY",28,27,ba,ad)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *MenuCharacter_obj_sStaticStorageInfo = 0;
#endif

static ::String MenuCharacter_obj_sMemberFields[] = {
	HX_("character",a9,db,d1,41),
	HX_("curCharacterMap",13,e8,c8,96),
	HX_("baseX",27,27,ba,ad),
	HX_("baseY",28,27,ba,ad),
	HX_("createCharacter",0d,95,c6,e2),
	::String(null()) };

::hx::Class MenuCharacter_obj::__mClass;

void MenuCharacter_obj::__register()
{
	MenuCharacter_obj _hx_dummy;
	MenuCharacter_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("gameObjects.userInterface.menu.MenuCharacter",47,b8,cb,96);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(MenuCharacter_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< MenuCharacter_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MenuCharacter_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MenuCharacter_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace gameObjects
} // end namespace userInterface
} // end namespace menu
