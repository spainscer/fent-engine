// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Paths
#include <Paths.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_FlxTransitionableState
#include <flixel/addons/transition/FlxTransitionableState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIState
#include <flixel/addons/ui/FlxUIState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIState
#include <flixel/addons/ui/interfaces/IFlxUIState.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimation
#include <flixel/animation/FlxAnimation.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxBaseAnimation
#include <flixel/animation/FlxBaseAnimation.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_gameObjects_Character
#include <gameObjects/Character.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_meta_CoolUtil
#include <meta/CoolUtil.h>
#endif
#ifndef INCLUDED_meta_MusicBeatState
#include <meta/MusicBeatState.h>
#endif
#ifndef INCLUDED_meta_data_Conductor
#include <meta/data/Conductor.h>
#endif
#ifndef INCLUDED_meta_data_dependency_FNFSprite
#include <meta/data/dependency/FNFSprite.h>
#endif
#ifndef INCLUDED_meta_data_dependency_FNFUIState
#include <meta/data/dependency/FNFUIState.h>
#endif
#ifndef INCLUDED_meta_state_PlayState
#include <meta/state/PlayState.h>
#endif
#ifndef INCLUDED_openfl_utils_Assets
#include <openfl/utils/Assets.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d07ef0c135db2bf5_20_new,"gameObjects.Character","new",0x8fc9ae8f,"gameObjects.Character.new","gameObjects/Character.hx",20,0x19a01542)
HX_LOCAL_STACK_FRAME(_hx_pos_d07ef0c135db2bf5_42_setCharacter,"gameObjects.Character","setCharacter",0xa1abff98,"gameObjects.Character.setCharacter","gameObjects/Character.hx",42,0x19a01542)
static const int _hx_array_data_7175bb1d_5[] = {
	(int)8,(int)9,(int)10,(int)11,(int)12,(int)13,(int)14,
};
static const int _hx_array_data_7175bb1d_6[] = {
	(int)0,(int)1,(int)2,(int)3,(int)4,(int)5,(int)6,(int)7,(int)8,(int)9,(int)10,(int)11,(int)12,
};
static const int _hx_array_data_7175bb1d_7[] = {
	(int)30,(int)0,(int)1,(int)2,(int)3,(int)4,(int)5,(int)6,(int)7,(int)8,(int)9,(int)10,(int)11,(int)12,(int)13,(int)14,
};
static const int _hx_array_data_7175bb1d_8[] = {
	(int)15,(int)16,(int)17,(int)18,(int)19,(int)20,(int)21,(int)22,(int)23,(int)24,(int)25,(int)26,(int)27,(int)28,(int)29,
};
static const int _hx_array_data_7175bb1d_9[] = {
	(int)0,(int)1,(int)2,(int)3,
};
static const int _hx_array_data_7175bb1d_10[] = {
	(int)0,(int)1,(int)2,(int)3,(int)4,(int)5,(int)6,(int)7,(int)8,(int)9,(int)10,(int)11,
};
static const int _hx_array_data_7175bb1d_11[] = {
	(int)0,
};
static const int _hx_array_data_7175bb1d_12[] = {
	(int)30,(int)0,(int)1,(int)2,(int)3,(int)4,(int)5,(int)6,(int)7,(int)8,(int)9,(int)10,(int)11,(int)12,(int)13,(int)14,
};
static const int _hx_array_data_7175bb1d_13[] = {
	(int)15,(int)16,(int)17,(int)18,(int)19,(int)20,(int)21,(int)22,(int)23,(int)24,(int)25,(int)26,(int)27,(int)28,(int)29,
};
static const int _hx_array_data_7175bb1d_14[] = {
	(int)0,(int)1,(int)2,(int)3,(int)4,(int)5,(int)6,(int)7,(int)8,(int)9,(int)10,(int)11,(int)12,
};
static const int _hx_array_data_7175bb1d_15[] = {
	(int)30,(int)0,(int)1,(int)2,(int)3,(int)4,(int)5,(int)6,(int)7,(int)8,(int)9,(int)10,(int)11,(int)12,(int)13,(int)14,
};
static const int _hx_array_data_7175bb1d_16[] = {
	(int)15,(int)16,(int)17,(int)18,(int)19,(int)20,(int)21,(int)22,(int)23,(int)24,(int)25,(int)26,(int)27,(int)28,(int)29,
};
static const int _hx_array_data_7175bb1d_17[] = {
	(int)0,(int)1,(int)2,(int)3,
};
static const int _hx_array_data_7175bb1d_18[] = {
	(int)0,(int)1,(int)2,(int)3,(int)4,(int)5,(int)6,(int)7,(int)8,(int)9,(int)10,(int)11,
};
static const int _hx_array_data_7175bb1d_19[] = {
	(int)2,
};
static const int _hx_array_data_7175bb1d_20[] = {
	(int)30,(int)0,(int)1,(int)2,(int)3,(int)4,(int)5,(int)6,(int)7,(int)8,(int)9,(int)10,(int)11,(int)12,(int)13,(int)14,
};
static const int _hx_array_data_7175bb1d_21[] = {
	(int)15,(int)16,(int)17,(int)18,(int)19,(int)20,(int)21,(int)22,(int)23,(int)24,(int)25,(int)26,(int)27,(int)28,(int)29,
};
static const int _hx_array_data_7175bb1d_22[] = {
	(int)0,(int)1,(int)2,(int)3,(int)4,(int)5,(int)6,(int)7,(int)8,(int)9,(int)10,(int)11,(int)12,
};
static const int _hx_array_data_7175bb1d_23[] = {
	(int)30,(int)0,(int)1,(int)2,(int)3,(int)4,(int)5,(int)6,(int)7,(int)8,(int)9,(int)10,(int)11,(int)12,(int)13,(int)14,
};
static const int _hx_array_data_7175bb1d_24[] = {
	(int)15,(int)16,(int)17,(int)18,(int)19,(int)20,(int)21,(int)22,(int)23,(int)24,(int)25,(int)26,(int)27,(int)28,(int)29,
};
static const int _hx_array_data_7175bb1d_25[] = {
	(int)10,(int)11,(int)12,(int)13,
};
static const int _hx_array_data_7175bb1d_26[] = {
	(int)0,(int)2,(int)6,
};
static const int _hx_array_data_7175bb1d_27[] = {
	(int)8,(int)10,(int)12,(int)14,
};
HX_LOCAL_STACK_FRAME(_hx_pos_d07ef0c135db2bf5_520_flipLeftRight,"gameObjects.Character","flipLeftRight",0x00e698d7,"gameObjects.Character.flipLeftRight","gameObjects/Character.hx",520,0x19a01542)
HX_LOCAL_STACK_FRAME(_hx_pos_d07ef0c135db2bf5_541_update,"gameObjects.Character","update",0x2b1f6f3a,"gameObjects.Character.update","gameObjects/Character.hx",541,0x19a01542)
HX_LOCAL_STACK_FRAME(_hx_pos_d07ef0c135db2bf5_586_dance,"gameObjects.Character","dance",0x93d08b22,"gameObjects.Character.dance","gameObjects/Character.hx",586,0x19a01542)
HX_LOCAL_STACK_FRAME(_hx_pos_d07ef0c135db2bf5_613_playAnim,"gameObjects.Character","playAnim",0x7dd04196,"gameObjects.Character.playAnim","gameObjects/Character.hx",613,0x19a01542)
HX_LOCAL_STACK_FRAME(_hx_pos_d07ef0c135db2bf5_630_simplifyCharacter,"gameObjects.Character","simplifyCharacter",0x065f6dcf,"gameObjects.Character.simplifyCharacter","gameObjects/Character.hx",630,0x19a01542)
namespace gameObjects{

void Character_obj::__construct(Float x,Float y,::String __o_character, ::Dynamic __o_isPlayer){
            		::String character = __o_character;
            		if (::hx::IsNull(__o_character)) character = HX_("bf",c4,55,00,00);
            		 ::Dynamic isPlayer = __o_isPlayer;
            		if (::hx::IsNull(__o_isPlayer)) isPlayer = false;
            	HX_STACKFRAME(&_hx_pos_d07ef0c135db2bf5_20_new)
HXLINE( 579)		this->danced = false;
HXLINE(  31)		this->holdTimer = ((Float)0);
HXLINE(  29)		this->curCharacter = HX_("bf",c4,55,00,00);
HXLINE(  28)		this->isPlayer = false;
HXLINE(  26)		this->debugMode = false;
HXLINE(  24)		this->quickDancer = false;
HXLINE(  35)		super::__construct(x,y);
HXLINE(  36)		this->isPlayer = ( (bool)(isPlayer) );
HXLINE(  38)		this->setCharacter(x,y,character);
            	}

Dynamic Character_obj::__CreateEmpty() { return new Character_obj; }

void *Character_obj::_hx_vtable = 0;

Dynamic Character_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Character_obj > _hx_result = new Character_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool Character_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x78a693e9) {
		if (inClassId<=(int)0x2c01639b) {
			if (inClassId<=(int)0x194bcfc7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x194bcfc7;
			} else {
				return inClassId==(int)0x2c01639b;
			}
		} else {
			return inClassId==(int)0x78a693e9;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}

void Character_obj::setCharacter(Float x,Float y,::String character){
            	HX_STACKFRAME(&_hx_pos_d07ef0c135db2bf5_42_setCharacter)
HXLINE(  43)		this->curCharacter = character;
HXLINE(  44)		 ::flixel::graphics::frames::FlxAtlasFrames tex;
HXLINE(  45)		this->set_antialiasing(true);
HXLINE(  47)		::String _hx_switch_0 = this->curCharacter;
            		if (  (_hx_switch_0==HX_("bf",c4,55,00,00)) ){
HXLINE( 227)			::String library = null();
HXDLIN( 227)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/BOYFRIEND",65,2c,9c,1b)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 227)			this->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/BOYFRIEND",65,2c,9c,1b)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library))));
HXLINE( 229)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("BF idle dance",03,fa,cc,7f),24,false,null(),null());
HXLINE( 230)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("BF NOTE UP0",23,e8,67,d4),24,false,null(),null());
HXLINE( 231)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("BF NOTE LEFT0",77,e0,7c,76),24,false,null(),null());
HXLINE( 232)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("BF NOTE RIGHT0",06,3f,26,eb),24,false,null(),null());
HXLINE( 233)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("BF NOTE DOWN0",bc,3f,f1,e1),24,false,null(),null());
HXLINE( 234)			this->animation->addByPrefix(HX_("singUPmiss",66,22,08,8a),HX_("BF NOTE UP MISS",8f,08,36,ae),24,false,null(),null());
HXLINE( 235)			this->animation->addByPrefix(HX_("singLEFTmiss",d2,2f,9c,b6),HX_("BF NOTE LEFT MISS",e3,ba,cf,a7),24,false,null(),null());
HXLINE( 236)			this->animation->addByPrefix(HX_("singRIGHTmiss",89,cc,65,e3),HX_("BF NOTE RIGHT MISS",f2,0c,cd,25),24,false,null(),null());
HXLINE( 237)			this->animation->addByPrefix(HX_("singDOWNmiss",ad,e9,88,e4),HX_("BF NOTE DOWN MISS",a8,a0,05,a9),24,false,null(),null());
HXLINE( 238)			this->animation->addByPrefix(HX_("hey",dc,42,4f,00),HX_("BF HEY",60,1e,f8,c6),24,false,null(),null());
HXLINE( 239)			this->animation->addByPrefix(HX_("scared",20,78,2a,3c),HX_("BF idle shaking",53,d0,da,8d),24,null(),null(),null());
HXLINE( 241)			this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 243)			this->set_flipX(true);
HXLINE( 226)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("bf-car",cb,95,e2,07)) ){
HXLINE( 323)			::String library = null();
HXDLIN( 323)			::String tex = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/bfCar",4b,f2,0a,1e)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 323)			 ::flixel::graphics::frames::FlxAtlasFrames tex1 = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/bfCar",4b,f2,0a,1e)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE( 324)			this->set_frames(tex1);
HXLINE( 325)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("BF idle dance",03,fa,cc,7f),24,false,null(),null());
HXLINE( 326)			this->animation->addByIndices(HX_("idlePost",94,71,4c,3f),HX_("BF idle dance",03,fa,cc,7f),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_5,7),HX_("",00,00,00,00),24,true,null(),null());
HXLINE( 327)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("BF NOTE UP0",23,e8,67,d4),24,false,null(),null());
HXLINE( 328)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("BF NOTE LEFT0",77,e0,7c,76),24,false,null(),null());
HXLINE( 329)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("BF NOTE RIGHT0",06,3f,26,eb),24,false,null(),null());
HXLINE( 330)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("BF NOTE DOWN0",bc,3f,f1,e1),24,false,null(),null());
HXLINE( 331)			this->animation->addByPrefix(HX_("singUPmiss",66,22,08,8a),HX_("BF NOTE UP MISS",8f,08,36,ae),24,false,null(),null());
HXLINE( 332)			this->animation->addByPrefix(HX_("singLEFTmiss",d2,2f,9c,b6),HX_("BF NOTE LEFT MISS",e3,ba,cf,a7),24,false,null(),null());
HXLINE( 333)			this->animation->addByPrefix(HX_("singRIGHTmiss",89,cc,65,e3),HX_("BF NOTE RIGHT MISS",f2,0c,cd,25),24,false,null(),null());
HXLINE( 334)			this->animation->addByPrefix(HX_("singDOWNmiss",ad,e9,88,e4),HX_("BF NOTE DOWN MISS",a8,a0,05,a9),24,false,null(),null());
HXLINE( 336)			this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 338)			this->set_flipX(true);
HXLINE( 322)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("bf-christmas",79,02,f4,24)) ){
HXLINE( 306)			::String library = null();
HXDLIN( 306)			::String tex = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/bfChristmas",f9,be,84,ca)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 306)			 ::flixel::graphics::frames::FlxAtlasFrames tex1 = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/bfChristmas",f9,be,84,ca)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE( 307)			this->set_frames(tex1);
HXLINE( 308)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("BF idle dance",03,fa,cc,7f),24,false,null(),null());
HXLINE( 309)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("BF NOTE UP0",23,e8,67,d4),24,false,null(),null());
HXLINE( 310)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("BF NOTE LEFT0",77,e0,7c,76),24,false,null(),null());
HXLINE( 311)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("BF NOTE RIGHT0",06,3f,26,eb),24,false,null(),null());
HXLINE( 312)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("BF NOTE DOWN0",bc,3f,f1,e1),24,false,null(),null());
HXLINE( 313)			this->animation->addByPrefix(HX_("singUPmiss",66,22,08,8a),HX_("BF NOTE UP MISS",8f,08,36,ae),24,false,null(),null());
HXLINE( 314)			this->animation->addByPrefix(HX_("singLEFTmiss",d2,2f,9c,b6),HX_("BF NOTE LEFT MISS",e3,ba,cf,a7),24,false,null(),null());
HXLINE( 315)			this->animation->addByPrefix(HX_("singRIGHTmiss",89,cc,65,e3),HX_("BF NOTE RIGHT MISS",f2,0c,cd,25),24,false,null(),null());
HXLINE( 316)			this->animation->addByPrefix(HX_("singDOWNmiss",ad,e9,88,e4),HX_("BF NOTE DOWN MISS",a8,a0,05,a9),24,false,null(),null());
HXLINE( 317)			this->animation->addByPrefix(HX_("hey",dc,42,4f,00),HX_("BF HEY",60,1e,f8,c6),24,false,null(),null());
HXLINE( 319)			this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 321)			this->set_flipX(true);
HXLINE( 305)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("bf-dead",0d,ad,0c,df)) ){
HXLINE( 269)			::String library = null();
HXDLIN( 269)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/BF_DEATH",5e,7c,40,f4)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 269)			this->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/BF_DEATH",5e,7c,40,f4)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library))));
HXLINE( 271)			this->animation->addByPrefix(HX_("firstDeath",e4,d8,fc,14),HX_("BF dies",0f,cb,bf,64),24,false,null(),null());
HXLINE( 272)			this->animation->addByPrefix(HX_("deathLoop",b8,0b,79,2e),HX_("BF Dead Loop",04,f4,36,2f),24,true,null(),null());
HXLINE( 273)			this->animation->addByPrefix(HX_("deathConfirm",2c,44,2b,12),HX_("BF Dead confirm",80,6b,f9,23),24,false,null(),null());
HXLINE( 275)			this->playAnim(HX_("firstDeath",e4,d8,fc,14),null(),null(),null());
HXLINE( 277)			this->set_flipX(true);
HXLINE( 268)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("bf-holding-gf",92,81,6a,17)) ){
HXLINE( 280)			::String library = null();
HXDLIN( 280)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/bfAndGF",ad,96,24,ce)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 280)			this->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/bfAndGF",ad,96,24,ce)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library))));
HXLINE( 282)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("BF idle dance w gf",65,71,8e,e3),24,false,null(),null());
HXLINE( 283)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("BF NOTE UP0",23,e8,67,d4),24,false,null(),null());
HXLINE( 284)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("BF NOTE LEFT0",77,e0,7c,76),24,false,null(),null());
HXLINE( 285)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("BF NOTE RIGHT0",06,3f,26,eb),24,false,null(),null());
HXLINE( 286)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("BF NOTE DOWN0",bc,3f,f1,e1),24,false,null(),null());
HXLINE( 287)			this->animation->addByPrefix(HX_("singUPmiss",66,22,08,8a),HX_("BF NOTE UP MISS",8f,08,36,ae),24,false,null(),null());
HXLINE( 288)			this->animation->addByPrefix(HX_("singLEFTmiss",d2,2f,9c,b6),HX_("BF NOTE LEFT MISS",e3,ba,cf,a7),24,false,null(),null());
HXLINE( 289)			this->animation->addByPrefix(HX_("singRIGHTmiss",89,cc,65,e3),HX_("BF NOTE RIGHT MISS",f2,0c,cd,25),24,false,null(),null());
HXLINE( 290)			this->animation->addByPrefix(HX_("singDOWNmiss",ad,e9,88,e4),HX_("BF NOTE DOWN MISS",a8,a0,05,a9),24,false,null(),null());
HXLINE( 292)			this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 294)			this->set_flipX(true);
HXLINE( 279)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("bf-holding-gf-dead",7f,f6,6a,5d)) ){
HXLINE( 297)			::String library = null();
HXDLIN( 297)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/bfHoldingGF-DEAD",58,d3,6a,ae)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 297)			this->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/bfHoldingGF-DEAD",58,d3,6a,ae)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library))));
HXLINE( 299)			this->animation->addByPrefix(HX_("firstDeath",e4,d8,fc,14),HX_("BF Dies with GF",08,9a,cd,d3),24,false,null(),null());
HXLINE( 300)			this->animation->addByPrefix(HX_("deathLoop",b8,0b,79,2e),HX_("BF Dead with GF Loop",8b,65,0b,34),24,true,null(),null());
HXLINE( 301)			this->animation->addByPrefix(HX_("deathConfirm",2c,44,2b,12),HX_("RETRY confirm holding gf",14,e2,27,ab),24,false,null(),null());
HXLINE( 303)			this->playAnim(HX_("firstDeath",e4,d8,fc,14),null(),null(),null());
HXLINE( 296)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("bf-pixel",fd,03,90,37)) ){
HXLINE( 340)			::String library = null();
HXDLIN( 340)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/bfPixel",7d,80,e8,6d)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 340)			this->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/bfPixel",7d,80,e8,6d)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library))));
HXLINE( 341)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("BF IDLE",f0,de,ca,52),24,false,null(),null());
HXLINE( 342)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("BF UP NOTE",7b,9d,4e,d3),24,false,null(),null());
HXLINE( 343)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("BF LEFT NOTE",4f,b9,34,d9),24,false,null(),null());
HXLINE( 344)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("BF RIGHT NOTE",b2,df,15,96),24,false,null(),null());
HXLINE( 345)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("BF DOWN NOTE",14,9f,6a,da),24,false,null(),null());
HXLINE( 346)			this->animation->addByPrefix(HX_("singUPmiss",66,22,08,8a),HX_("BF UP MISS",85,d8,a0,d2),24,false,null(),null());
HXLINE( 347)			this->animation->addByPrefix(HX_("singLEFTmiss",d2,2f,9c,b6),HX_("BF LEFT MISS",59,f4,86,d8),24,false,null(),null());
HXLINE( 348)			this->animation->addByPrefix(HX_("singRIGHTmiss",89,cc,65,e3),HX_("BF RIGHT MISS",bc,1a,68,95),24,false,null(),null());
HXLINE( 349)			this->animation->addByPrefix(HX_("singDOWNmiss",ad,e9,88,e4),HX_("BF DOWN MISS",1e,da,bc,d9),24,false,null(),null());
HXLINE( 351)			this->setGraphicSize(::Std_obj::_hx_int((this->get_width() * ( (Float)(6) ))),null());
HXLINE( 352)			this->updateHitbox();
HXLINE( 354)			this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 356)			{
HXLINE( 356)				 ::gameObjects::Character _g = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 356)				_g->set_width((_g->get_width() - ( (Float)(100) )));
            			}
HXLINE( 357)			{
HXLINE( 357)				 ::gameObjects::Character _g1 = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 357)				_g1->set_height((_g1->get_height() - ( (Float)(100) )));
            			}
HXLINE( 359)			this->set_antialiasing(false);
HXLINE( 361)			this->set_flipX(true);
HXLINE( 339)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("bf-pixel-dead",34,d0,3d,c4)) ){
HXLINE( 363)			::String library = null();
HXDLIN( 363)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/bfPixelsDEAD",fa,66,1f,36)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 363)			this->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/bfPixelsDEAD",fa,66,1f,36)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library))));
HXLINE( 364)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("BF Dies pixel",d5,56,ac,77),24,false,null(),null());
HXLINE( 365)			this->animation->addByPrefix(HX_("firstDeath",e4,d8,fc,14),HX_("BF Dies pixel",d5,56,ac,77),24,false,null(),null());
HXLINE( 366)			this->animation->addByPrefix(HX_("deathLoop",b8,0b,79,2e),HX_("Retry Loop",5c,76,15,41),24,true,null(),null());
HXLINE( 367)			this->animation->addByPrefix(HX_("deathConfirm",2c,44,2b,12),HX_("RETRY CONFIRM",08,8c,5f,fd),24,false,null(),null());
HXLINE( 368)			this->animation->play(HX_("firstDeath",e4,d8,fc,14),null(),null(),null());
HXLINE( 371)			this->setGraphicSize(::Std_obj::_hx_int((this->get_width() * ( (Float)(6) ))),null());
HXLINE( 372)			this->updateHitbox();
HXLINE( 373)			this->set_antialiasing(false);
HXLINE( 374)			this->set_flipX(true);
HXLINE( 362)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("dad",47,36,4c,00)) ){
HXLINE( 124)			::String library = null();
HXDLIN( 124)			::String tex1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/DADDY_DEAREST",4c,60,28,2b)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 124)			tex = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex1,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/DADDY_DEAREST",4c,60,28,2b)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE( 125)			this->set_frames(tex);
HXLINE( 126)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("Dad idle dance",80,2a,95,5c),24,false,null(),null());
HXLINE( 127)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("Dad Sing Note UP",91,e8,1d,0c),24,null(),null(),null());
HXLINE( 128)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("Dad Sing Note RIGHT",46,eb,bc,9e),24,null(),null(),null());
HXLINE( 129)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("Dad Sing Note DOWN",18,d8,98,b2),24,null(),null(),null());
HXLINE( 130)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("Dad Sing Note LEFT",bd,e7,da,b7),24,null(),null(),null());
HXLINE( 132)			this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 122)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("gf",1f,5a,00,00)) ){
HXLINE(  51)			::String library = null();
HXDLIN(  51)			::String tex1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/GF_assets",fe,40,c5,18)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN(  51)			tex = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex1,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/GF_assets",fe,40,c5,18)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE(  52)			this->set_frames(tex);
HXLINE(  53)			this->animation->addByPrefix(HX_("cheer",8d,9a,b6,45),HX_("GF Cheer",ac,b5,2b,e0),24,false,null(),null());
HXLINE(  54)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("GF left note",6a,dd,c6,b9),24,false,null(),null());
HXLINE(  55)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("GF Right Note",57,7f,86,75),24,false,null(),null());
HXLINE(  56)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("GF Up Note",d6,e4,46,60),24,false,null(),null());
HXLINE(  57)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("GF Down Note",2f,cf,a8,47),24,false,null(),null());
HXLINE(  58)			this->animation->addByIndices(HX_("sad",16,98,57,00),HX_("gf sad",95,c1,1f,ff),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_6,13),HX_("",00,00,00,00),24,false,null(),null());
HXLINE(  59)			this->animation->addByIndices(HX_("danceLeft",da,cc,f9,df),HX_("GF Dancing Beat",47,47,24,df),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_7,16),HX_("",00,00,00,00),24,false,null(),null());
HXLINE(  60)			this->animation->addByIndices(HX_("danceRight",a9,7f,a6,91),HX_("GF Dancing Beat",47,47,24,df),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_8,15),HX_("",00,00,00,00),24,false,null(),null());
HXLINE(  61)			this->animation->addByIndices(HX_("hairBlow",b4,c9,39,c9),HX_("GF Dancing Beat Hair blowing",4b,14,4a,db),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_9,4),HX_("",00,00,00,00),24,null(),null(),null());
HXLINE(  62)			this->animation->addByIndices(HX_("hairFall",bd,48,d6,cb),HX_("GF Dancing Beat Hair Landing",52,45,8f,42),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_10,12),HX_("",00,00,00,00),24,false,null(),null());
HXLINE(  63)			this->animation->addByPrefix(HX_("scared",20,78,2a,3c),HX_("GF FEAR",91,45,bb,20),24,null(),null(),null());
HXLINE(  65)			this->playAnim(HX_("danceRight",a9,7f,a6,91),null(),null(),null());
HXLINE(  49)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("gf-car",a6,63,ab,07)) ){
HXLINE(  85)			::String library = null();
HXDLIN(  85)			::String tex1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/gfCar",d0,d8,0b,ff)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN(  85)			tex = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex1,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/gfCar",d0,d8,0b,ff)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE(  86)			this->set_frames(tex);
HXLINE(  87)			this->animation->addByIndices(HX_("singUP",6a,52,21,b9),HX_("GF Dancing Beat Hair blowing CAR",9f,79,4b,90),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_11,1),HX_("",00,00,00,00),24,false,null(),null());
HXLINE(  88)			this->animation->addByIndices(HX_("danceLeft",da,cc,f9,df),HX_("GF Dancing Beat Hair blowing CAR",9f,79,4b,90),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_12,16),HX_("",00,00,00,00),24,false,null(),null());
HXLINE(  89)			this->animation->addByIndices(HX_("danceRight",a9,7f,a6,91),HX_("GF Dancing Beat Hair blowing CAR",9f,79,4b,90),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_13,15),HX_("",00,00,00,00),24,false,null(),null());
HXLINE(  92)			this->addOffset(HX_("danceLeft",da,cc,f9,df),0,null());
HXLINE(  93)			this->addOffset(HX_("danceRight",a9,7f,a6,91),0,null());
HXLINE(  95)			this->playAnim(HX_("danceRight",a9,7f,a6,91),null(),null(),null());
HXLINE(  84)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("gf-christmas",94,26,b1,6d)) ){
HXLINE(  68)			::String library = null();
HXDLIN(  68)			::String tex1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/gfChristmas",3e,d7,dc,4e)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN(  68)			tex = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex1,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/gfChristmas",3e,d7,dc,4e)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE(  69)			this->set_frames(tex);
HXLINE(  70)			this->animation->addByPrefix(HX_("cheer",8d,9a,b6,45),HX_("GF Cheer",ac,b5,2b,e0),24,false,null(),null());
HXLINE(  71)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("GF left note",6a,dd,c6,b9),24,false,null(),null());
HXLINE(  72)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("GF Right Note",57,7f,86,75),24,false,null(),null());
HXLINE(  73)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("GF Up Note",d6,e4,46,60),24,false,null(),null());
HXLINE(  74)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("GF Down Note",2f,cf,a8,47),24,false,null(),null());
HXLINE(  75)			this->animation->addByIndices(HX_("sad",16,98,57,00),HX_("gf sad",95,c1,1f,ff),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_14,13),HX_("",00,00,00,00),24,false,null(),null());
HXLINE(  76)			this->animation->addByIndices(HX_("danceLeft",da,cc,f9,df),HX_("GF Dancing Beat",47,47,24,df),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_15,16),HX_("",00,00,00,00),24,false,null(),null());
HXLINE(  77)			this->animation->addByIndices(HX_("danceRight",a9,7f,a6,91),HX_("GF Dancing Beat",47,47,24,df),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_16,15),HX_("",00,00,00,00),24,false,null(),null());
HXLINE(  78)			this->animation->addByIndices(HX_("hairBlow",b4,c9,39,c9),HX_("GF Dancing Beat Hair blowing",4b,14,4a,db),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_17,4),HX_("",00,00,00,00),24,null(),null(),null());
HXLINE(  79)			this->animation->addByIndices(HX_("hairFall",bd,48,d6,cb),HX_("GF Dancing Beat Hair Landing",52,45,8f,42),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_18,12),HX_("",00,00,00,00),24,false,null(),null());
HXLINE(  80)			this->animation->addByPrefix(HX_("scared",20,78,2a,3c),HX_("GF FEAR",91,45,bb,20),24,null(),null(),null());
HXLINE(  82)			this->playAnim(HX_("danceRight",a9,7f,a6,91),null(),null(),null());
HXLINE(  67)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("gf-pixel",98,3e,8c,55)) ){
HXLINE(  98)			::String library = null();
HXDLIN(  98)			::String tex1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/gfPixel",42,d2,d3,3d)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN(  98)			tex = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex1,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/gfPixel",42,d2,d3,3d)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE(  99)			this->set_frames(tex);
HXLINE( 100)			this->animation->addByIndices(HX_("singUP",6a,52,21,b9),HX_("GF IDLE",b5,30,b6,22),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_19,1),HX_("",00,00,00,00),24,false,null(),null());
HXLINE( 101)			this->animation->addByIndices(HX_("danceLeft",da,cc,f9,df),HX_("GF IDLE",b5,30,b6,22),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_20,16),HX_("",00,00,00,00),24,false,null(),null());
HXLINE( 102)			this->animation->addByIndices(HX_("danceRight",a9,7f,a6,91),HX_("GF IDLE",b5,30,b6,22),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_21,15),HX_("",00,00,00,00),24,false,null(),null());
HXLINE( 104)			this->addOffset(HX_("danceLeft",da,cc,f9,df),0,null());
HXLINE( 105)			this->addOffset(HX_("danceRight",a9,7f,a6,91),0,null());
HXLINE( 107)			this->playAnim(HX_("danceRight",a9,7f,a6,91),null(),null(),null());
HXLINE( 109)			Float _hx_tmp = this->get_width();
HXDLIN( 109)			this->setGraphicSize(::Std_obj::_hx_int((_hx_tmp * ::meta::state::PlayState_obj::daPixelZoom)),null());
HXLINE( 110)			this->updateHitbox();
HXLINE( 111)			this->set_antialiasing(false);
HXLINE(  97)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("gf-tankmen",fe,a1,7c,b5)) ){
HXLINE( 114)			::String library = null();
HXDLIN( 114)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/gfTankmen",28,f4,8f,ed)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 114)			this->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/gfTankmen",28,f4,8f,ed)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library))));
HXLINE( 116)			this->animation->addByIndices(HX_("sad",16,98,57,00),HX_("GF Crying at Gunpoint",56,64,8e,ac),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_22,13),HX_("",00,00,00,00),24,false,null(),null());
HXLINE( 117)			this->animation->addByIndices(HX_("danceLeft",da,cc,f9,df),HX_("GF Dancing at Gunpoint",2c,35,43,ed),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_23,16),HX_("",00,00,00,00),24,false,null(),null());
HXLINE( 118)			this->animation->addByIndices(HX_("danceRight",a9,7f,a6,91),HX_("GF Dancing at Gunpoint",2c,35,43,ed),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_24,15),HX_("",00,00,00,00),24,false,null(),null());
HXLINE( 120)			this->playAnim(HX_("danceRight",a9,7f,a6,91),null(),null(),null());
HXLINE( 113)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("mom",cb,16,53,00)) ){
HXLINE( 147)			::String library = null();
HXDLIN( 147)			::String tex1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/Mom_Assets",7c,1f,31,b7)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 147)			tex = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex1,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/Mom_Assets",7c,1f,31,b7)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE( 148)			this->set_frames(tex);
HXLINE( 150)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("Mom Idle",c9,88,40,6e),24,false,null(),null());
HXLINE( 151)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("Mom Up Pose",c1,4d,e9,52),24,false,null(),null());
HXLINE( 152)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("MOM DOWN POSE",1a,4b,70,b3),24,false,null(),null());
HXLINE( 153)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("Mom Left Pose",55,8d,76,2a),24,false,null(),null());
HXLINE( 159)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("Mom Pose Left",81,c8,c4,cc),24,false,null(),null());
HXLINE( 161)			this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 146)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("mom-car",52,e6,f7,f6)) ){
HXLINE( 164)			::String library = null();
HXDLIN( 164)			::String tex1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/momCar",0e,64,bd,db)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 164)			tex = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex1,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/momCar",0e,64,bd,db)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE( 165)			this->set_frames(tex);
HXLINE( 167)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("Mom Idle",c9,88,40,6e),24,false,null(),null());
HXLINE( 168)			this->animation->addByIndices(HX_("idlePost",94,71,4c,3f),HX_("Mom Idle",c9,88,40,6e),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_25,4),HX_("",00,00,00,00),24,true,null(),null());
HXLINE( 169)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("Mom Up Pose",c1,4d,e9,52),24,false,null(),null());
HXLINE( 170)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("MOM DOWN POSE",1a,4b,70,b3),24,false,null(),null());
HXLINE( 171)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("Mom Left Pose",55,8d,76,2a),24,false,null(),null());
HXLINE( 174)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("Mom Pose Left",81,c8,c4,cc),24,false,null(),null());
HXLINE( 176)			this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 163)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("monster",1a,54,b0,b8)) ){
HXLINE( 178)			::String library = null();
HXDLIN( 178)			::String tex1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/Monster_Assets",8d,70,88,43)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 178)			tex = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex1,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/Monster_Assets",8d,70,88,43)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE( 179)			this->set_frames(tex);
HXLINE( 180)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("monster idle",da,c4,6c,db),24,false,null(),null());
HXLINE( 181)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("monster up note",d1,99,1b,31),24,false,null(),null());
HXLINE( 182)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("monster down",28,16,27,d8),24,false,null(),null());
HXLINE( 183)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("Monster Right note",3c,fd,2d,0e),24,false,null(),null());
HXLINE( 184)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("Monster left note",05,1b,dc,68),24,false,null(),null());
HXLINE( 186)			this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 177)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("monster-christmas",4f,88,85,27)) ){
HXLINE( 188)			::String library = null();
HXDLIN( 188)			::String tex1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/monsterChristmas",4d,4c,ad,fb)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 188)			tex = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex1,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/monsterChristmas",4d,4c,ad,fb)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE( 189)			this->set_frames(tex);
HXLINE( 190)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("monster idle",da,c4,6c,db),24,false,null(),null());
HXLINE( 191)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("monster up note",d1,99,1b,31),24,false,null(),null());
HXLINE( 192)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("monster down",28,16,27,d8),24,false,null(),null());
HXLINE( 193)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("Monster left note",05,1b,dc,68),24,false,null(),null());
HXLINE( 194)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("Monster Right note",3c,fd,2d,0e),24,false,null(),null());
HXLINE( 196)			this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 187)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("parents-christmas",fe,94,c5,32)) ){
HXLINE( 419)			::String library = null();
HXDLIN( 419)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/mom_dad_christmas_assets",91,39,44,07)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 419)			this->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/mom_dad_christmas_assets",91,39,44,07)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library))));
HXLINE( 420)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("Parent Christmas Idle",c8,04,64,10),24,false,null(),null());
HXLINE( 421)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("Parent Up Note Dad",88,99,f7,ad),24,false,null(),null());
HXLINE( 422)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("Parent Down Note Dad",21,a5,93,34),24,false,null(),null());
HXLINE( 423)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("Parent Left Note Dad",dc,f8,16,c4),24,false,null(),null());
HXLINE( 424)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("Parent Right Note Dad",13,46,28,52),24,false,null(),null());
HXLINE( 426)			this->animation->addByPrefix(HX_("singUP-alt",86,62,b4,5f),HX_("Parent Up Note Mom",0c,7a,fe,ad),24,false,null(),null());
HXLINE( 428)			this->animation->addByPrefix(HX_("singDOWN-alt",cd,29,35,ba),HX_("Parent Down Note Mom",a5,85,9a,34),24,false,null(),null());
HXLINE( 429)			this->animation->addByPrefix(HX_("singLEFT-alt",f2,6f,48,8c),HX_("Parent Left Note Mom",60,d9,1d,c4),24,false,null(),null());
HXLINE( 430)			this->animation->addByPrefix(HX_("singRIGHT-alt",a9,0c,12,b9),HX_("Parent Right Note Mom",97,26,2f,52),24,false,null(),null());
HXLINE( 432)			this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 418)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("pico",e5,e8,57,4a)) ){
HXLINE( 198)			::String library = null();
HXDLIN( 198)			::String tex1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/Pico_FNF_assetss",da,a0,90,17)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 198)			tex = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex1,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/Pico_FNF_assetss",da,a0,90,17)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE( 199)			this->set_frames(tex);
HXLINE( 200)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("Pico Idle Dance",62,48,dd,f6),24,false,null(),null());
HXLINE( 201)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("pico Up note0",34,b3,8f,aa),24,false,null(),null());
HXLINE( 202)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("Pico Down Note0",fb,e0,7b,fc),24,false,null(),null());
HXLINE( 203)			if (this->isPlayer) {
HXLINE( 205)				this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("Pico NOTE LEFT0",d6,ba,ae,63),24,false,null(),null());
HXLINE( 206)				this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("Pico Note Right0",a7,9f,6f,99),24,false,null(),null());
HXLINE( 207)				this->animation->addByPrefix(HX_("singRIGHTmiss",89,cc,65,e3),HX_("Pico Note Right Miss",33,36,e2,57),24,false,null(),null());
HXLINE( 208)				this->animation->addByPrefix(HX_("singLEFTmiss",d2,2f,9c,b6),HX_("Pico NOTE LEFT miss",c2,e8,46,a4),24,false,null(),null());
            			}
            			else {
HXLINE( 213)				this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("Pico Note Right0",a7,9f,6f,99),24,false,null(),null());
HXLINE( 214)				this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("Pico NOTE LEFT0",d6,ba,ae,63),24,false,null(),null());
HXLINE( 215)				this->animation->addByPrefix(HX_("singRIGHTmiss",89,cc,65,e3),HX_("Pico NOTE LEFT miss",c2,e8,46,a4),24,false,null(),null());
HXLINE( 216)				this->animation->addByPrefix(HX_("singLEFTmiss",d2,2f,9c,b6),HX_("Pico Note Right Miss",33,36,e2,57),24,false,null(),null());
            			}
HXLINE( 219)			this->animation->addByPrefix(HX_("singUPmiss",66,22,08,8a),HX_("pico Up note miss",20,68,ae,5a),24,null(),null(),null());
HXLINE( 220)			this->animation->addByPrefix(HX_("singDOWNmiss",ad,e9,88,e4),HX_("Pico Down Note MISS",67,4d,33,9a),24,null(),null(),null());
HXLINE( 222)			this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 224)			this->set_flipX(true);
HXLINE( 197)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("pico-speaker",57,7a,55,5e)) ){
HXLINE( 449)			::String library = null();
HXDLIN( 449)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/picoSpeaker",75,ba,55,ad)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 449)			this->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/picoSpeaker",75,ba,55,ad)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library))));
HXLINE( 451)			this->animation->addByPrefix(HX_("shoot1",72,21,6a,26),HX_("Pico shoot 1",95,79,46,d7),24,false,null(),null());
HXLINE( 452)			this->animation->addByPrefix(HX_("shoot2",73,21,6a,26),HX_("Pico shoot 2",96,79,46,d7),24,false,null(),null());
HXLINE( 453)			this->animation->addByPrefix(HX_("shoot3",74,21,6a,26),HX_("Pico shoot 3",97,79,46,d7),24,false,null(),null());
HXLINE( 454)			this->animation->addByPrefix(HX_("shoot4",75,21,6a,26),HX_("Pico shoot 4",98,79,46,d7),24,false,null(),null());
HXLINE( 456)			this->playAnim(HX_("shoot1",72,21,6a,26),null(),null(),null());
HXLINE( 448)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("senpai",3c,df,8d,6b)) ){
HXLINE( 377)			::String library = null();
HXDLIN( 377)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/senpai",41,1d,ab,80)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 377)			this->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/senpai",41,1d,ab,80)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library))));
HXLINE( 378)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("Senpai Idle",78,62,c5,a9),24,false,null(),null());
HXLINE( 379)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("SENPAI UP NOTE",f3,26,c1,c4),24,false,null(),null());
HXLINE( 380)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("SENPAI LEFT NOTE",c7,90,76,f3),24,false,null(),null());
HXLINE( 381)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("SENPAI RIGHT NOTE",3a,91,70,75),24,false,null(),null());
HXLINE( 382)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("SENPAI DOWN NOTE",8c,76,ac,f4),24,false,null(),null());
HXLINE( 384)			this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 386)			this->setGraphicSize(::Std_obj::_hx_int((this->get_width() * ( (Float)(6) ))),null());
HXLINE( 387)			this->updateHitbox();
HXLINE( 389)			this->set_antialiasing(false);
HXLINE( 376)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("senpai-angry",10,7a,b8,25)) ){
HXLINE( 391)			::String library = null();
HXDLIN( 391)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/senpai",41,1d,ab,80)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 391)			this->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/senpai",41,1d,ab,80)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library))));
HXLINE( 392)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("Angry Senpai Idle",d9,cc,b4,52),24,false,null(),null());
HXLINE( 393)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("Angry Senpai UP NOTE",52,97,34,df),24,false,null(),null());
HXLINE( 394)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("Angry Senpai LEFT NOTE",e6,16,ee,25),24,false,null(),null());
HXLINE( 395)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("Angry Senpai RIGHT NOTE",3b,66,8e,6b),24,false,null(),null());
HXLINE( 396)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("Angry Senpai DOWN NOTE",ab,fc,23,27),24,false,null(),null());
HXLINE( 398)			this->setGraphicSize(::Std_obj::_hx_int((this->get_width() * ( (Float)(6) ))),null());
HXLINE( 399)			this->updateHitbox();
HXLINE( 401)			this->set_antialiasing(false);
HXLINE( 390)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("spirit",31,bb,a9,bd)) ){
HXLINE( 404)			::String library = null();
HXDLIN( 404)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/spirit",36,f9,c6,d2)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 404)			this->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSpriteSheetPacker(_hx_tmp,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/spirit",36,f9,c6,d2)) + HX_(".txt",02,3f,c0,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE( 405)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("idle spirit_",02,2f,37,04),24,false,null(),null());
HXLINE( 406)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("up_",a4,29,59,00),24,false,null(),null());
HXLINE( 407)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("right_",03,55,26,4e),24,false,null(),null());
HXLINE( 408)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("left_",78,fe,56,72),24,false,null(),null());
HXLINE( 409)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("spirit down_",8e,9f,fa,ae),24,false,null(),null());
HXLINE( 411)			this->setGraphicSize(::Std_obj::_hx_int((this->get_width() * ( (Float)(6) ))),null());
HXLINE( 412)			this->updateHitbox();
HXLINE( 414)			this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 416)			this->set_antialiasing(false);
HXLINE( 403)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("spooky",eb,bd,9e,c1)) ){
HXLINE( 134)			::String library = null();
HXDLIN( 134)			::String tex1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/spooky_kids_assets",06,73,ba,96)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 134)			tex = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex1,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/spooky_kids_assets",06,73,ba,96)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE( 135)			this->set_frames(tex);
HXLINE( 136)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("spooky UP NOTE",a2,20,d8,ff),24,false,null(),null());
HXLINE( 137)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("spooky DOWN note",fb,b1,f7,73),24,false,null(),null());
HXLINE( 138)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("note sing left",ca,f9,5d,8a),24,false,null(),null());
HXLINE( 139)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("spooky sing right",60,bf,ae,3b),24,false,null(),null());
HXLINE( 140)			this->animation->addByIndices(HX_("danceLeft",da,cc,f9,df),HX_("spooky dance idle",36,a7,32,19),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_26,3),HX_("",00,00,00,00),12,false,null(),null());
HXLINE( 141)			this->animation->addByIndices(HX_("danceRight",a9,7f,a6,91),HX_("spooky dance idle",36,a7,32,19),::Array_obj< int >::fromData( _hx_array_data_7175bb1d_27,4),HX_("",00,00,00,00),12,false,null(),null());
HXLINE( 143)			this->quickDancer = true;
HXLINE( 145)			this->playAnim(HX_("danceRight",a9,7f,a6,91),null(),null(),null());
HXLINE( 133)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("tankman",f0,7d,78,3d)) ){
HXLINE( 434)			::String library = null();
HXDLIN( 434)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/tankmanCaptain",99,2e,62,27)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 434)			this->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/tankmanCaptain",99,2e,62,27)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library))));
HXLINE( 435)			this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("Tankman Idle Dance instance",5e,b3,f4,09),24,false,null(),null());
HXLINE( 437)			this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("Tankman UP note instance",4e,a9,f1,77),24,false,null(),null());
HXLINE( 438)			this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("Tankman Note Left instance",70,7e,5e,c1),24,false,null(),null());
HXLINE( 439)			this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("Tankman Right Note instance",af,63,97,7f),24,false,null(),null());
HXLINE( 440)			this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("Tankman DOWN note instance",95,b1,c4,54),24,false,null(),null());
HXLINE( 442)			this->animation->addByPrefix(HX_("singUP-alt",86,62,b4,5f),HX_("TANKMAN UGH instance",8f,97,b7,fe),24,false,null(),null());
HXLINE( 443)			this->animation->addByPrefix(HX_("singDOWN-alt",cd,29,35,ba),HX_("PRETTY GOOD tankman instance",1e,65,d0,1f),24,false,null(),null());
HXLINE( 445)			this->set_flipX(true);
HXLINE( 446)			this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 433)			goto _hx_goto_2;
            		}
            		/* default */{
HXLINE( 463)			::String fileNew = (this->curCharacter + HX_("Anims",22,39,11,b6));
HXLINE( 464)			::String library = null();
HXDLIN( 464)			if (::openfl::utils::Assets_obj::exists(::Paths_obj::getPath(((HX_("images/characters/",2e,e1,08,ac) + fileNew) + HX_(".txt",02,3f,c0,1e)),HX_("TEXT",ad,94,ba,37),library),null())) {
HXLINE( 466)				::String library = null();
HXDLIN( 466)				::Array< ::String > characterAnims = ::meta::CoolUtil_obj::coolTextFile(::Paths_obj::getPath(((HX_("images/characters/",2e,e1,08,ac) + fileNew) + HX_(".txt",02,3f,c0,1e)),HX_("TEXT",ad,94,ba,37),library));
HXLINE( 467)				::String characterName = ::StringTools_obj::trim(characterAnims->__get(0));
HXLINE( 468)				::String key = (HX_("characters/",45,3c,bf,be) + characterName);
HXDLIN( 468)				::String library1 = null();
HXDLIN( 468)				::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1);
HXDLIN( 468)				this->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library1))));
HXLINE( 469)				{
HXLINE( 469)					int _g = 1;
HXDLIN( 469)					int _g1 = characterAnims->length;
HXDLIN( 469)					while((_g < _g1)){
HXLINE( 469)						_g = (_g + 1);
HXDLIN( 469)						int i = (_g - 1);
HXLINE( 471)						::String library = null();
HXDLIN( 471)						::Array< ::Dynamic> getterArray = ::meta::CoolUtil_obj::getAnimsFromTxt(::Paths_obj::getPath(((HX_("images/characters/",2e,e1,08,ac) + fileNew) + HX_(".txt",02,3f,c0,1e)),HX_("TEXT",ad,94,ba,37),library));
HXLINE( 472)						 ::flixel::animation::FlxAnimationController _hx_tmp = this->animation;
HXDLIN( 472)						::String getterArray1 = getterArray->__get(i).StaticCast< ::Array< ::String > >()->__get(0);
HXDLIN( 472)						_hx_tmp->addByPrefix(getterArray1,::StringTools_obj::trim(getterArray->__get(i).StaticCast< ::Array< ::String > >()->__get(1)),24,false,null(),null());
            					}
            				}
            			}
            			else {
HXLINE( 478)				::String library = null();
HXDLIN( 478)				::String tex1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/DADDY_DEAREST",4c,60,28,2b)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 478)				tex = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex1,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("characters/DADDY_DEAREST",4c,60,28,2b)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE( 479)				this->set_frames(tex);
HXLINE( 480)				this->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("Dad idle dance",80,2a,95,5c),30,false,null(),null());
HXLINE( 481)				this->animation->addByPrefix(HX_("singUP",6a,52,21,b9),HX_("Dad Sing Note UP",91,e8,1d,0c),24,null(),null(),null());
HXLINE( 482)				this->animation->addByPrefix(HX_("singRIGHT",0d,6f,70,ac),HX_("Dad Sing Note RIGHT",46,eb,bc,9e),24,null(),null(),null());
HXLINE( 483)				this->animation->addByPrefix(HX_("singDOWN",31,2a,ad,36),HX_("Dad Sing Note DOWN",18,d8,98,b2),24,null(),null(),null());
HXLINE( 484)				this->animation->addByPrefix(HX_("singLEFT",d6,39,ef,3b),HX_("Dad Sing Note LEFT",bd,e7,da,b7),24,null(),null(),null());
HXLINE( 486)				this->playAnim(HX_("idle",14,a7,b3,45),null(),null(),null());
            			}
            		}
            		_hx_goto_2:;
HXLINE( 491)		::String library = null();
HXDLIN( 491)		if (::openfl::utils::Assets_obj::exists(::Paths_obj::getPath(((HX_("images/characters/",2e,e1,08,ac) + (this->curCharacter + HX_("Offsets",60,31,b6,a4))) + HX_(".txt",02,3f,c0,1e)),HX_("TEXT",ad,94,ba,37),library),null())) {
HXLINE( 493)			::String library = null();
HXDLIN( 493)			::Array< ::String > characterOffsets = ::meta::CoolUtil_obj::coolTextFile(::Paths_obj::getPath(((HX_("images/characters/",2e,e1,08,ac) + (this->curCharacter + HX_("Offsets",60,31,b6,a4))) + HX_(".txt",02,3f,c0,1e)),HX_("TEXT",ad,94,ba,37),library));
HXLINE( 494)			{
HXLINE( 494)				int _g = 0;
HXDLIN( 494)				int _g1 = characterOffsets->length;
HXDLIN( 494)				while((_g < _g1)){
HXLINE( 494)					_g = (_g + 1);
HXDLIN( 494)					int i = (_g - 1);
HXLINE( 496)					::String library = null();
HXDLIN( 496)					::Array< ::Dynamic> getterArray = ::meta::CoolUtil_obj::getOffsetsFromTxt(::Paths_obj::getPath(((HX_("images/characters/",2e,e1,08,ac) + (this->curCharacter + HX_("Offsets",60,31,b6,a4))) + HX_(".txt",02,3f,c0,1e)),HX_("TEXT",ad,94,ba,37),library));
HXLINE( 497)					::String getterArray1 = getterArray->__get(i).StaticCast< ::Array< ::String > >()->__get(0);
HXDLIN( 497)					 ::Dynamic _hx_tmp = ::Std_obj::parseInt(getterArray->__get(i).StaticCast< ::Array< ::String > >()->__get(1));
HXDLIN( 497)					this->addOffset(getterArray1,_hx_tmp,::Std_obj::parseInt(getterArray->__get(i).StaticCast< ::Array< ::String > >()->__get(2)));
            				}
            			}
            		}
HXLINE( 501)		this->dance(null());
HXLINE( 503)		if (this->isPlayer) {
HXLINE( 505)			this->set_flipX(!(this->flipX));
HXLINE( 508)			if (!(::StringTools_obj::startsWith(this->curCharacter,HX_("bf",c4,55,00,00)))) {
HXLINE( 509)				this->flipLeftRight();
            			}
            		}
            		else {
HXLINE( 512)			if (::StringTools_obj::startsWith(this->curCharacter,HX_("bf",c4,55,00,00))) {
HXLINE( 513)				this->flipLeftRight();
            			}
            		}
HXLINE( 515)		this->set_x(x);
HXLINE( 516)		this->set_y(y);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Character_obj,setCharacter,(void))

void Character_obj::flipLeftRight(){
            	HX_STACKFRAME(&_hx_pos_d07ef0c135db2bf5_520_flipLeftRight)
HXLINE( 522)		::Array< int > oldRight = ( ( ::flixel::animation::FlxAnimation)(this->animation->_animations->get(HX_("singRIGHT",0d,6f,70,ac))) )->frames;
HXLINE( 525)		( ( ::flixel::animation::FlxAnimation)(this->animation->_animations->get(HX_("singRIGHT",0d,6f,70,ac))) )->frames = ( ( ::flixel::animation::FlxAnimation)(this->animation->_animations->get(HX_("singLEFT",d6,39,ef,3b))) )->frames;
HXLINE( 528)		( ( ::flixel::animation::FlxAnimation)(this->animation->_animations->get(HX_("singLEFT",d6,39,ef,3b))) )->frames = oldRight;
HXLINE( 532)		if (::hx::IsNotNull( this->animation->_animations->get(HX_("singRIGHTmiss",89,cc,65,e3)) )) {
HXLINE( 534)			::Array< int > oldMiss = ( ( ::flixel::animation::FlxAnimation)(this->animation->_animations->get(HX_("singRIGHTmiss",89,cc,65,e3))) )->frames;
HXLINE( 535)			( ( ::flixel::animation::FlxAnimation)(this->animation->_animations->get(HX_("singRIGHTmiss",89,cc,65,e3))) )->frames = ( ( ::flixel::animation::FlxAnimation)(this->animation->_animations->get(HX_("singLEFTmiss",d2,2f,9c,b6))) )->frames;
HXLINE( 536)			( ( ::flixel::animation::FlxAnimation)(this->animation->_animations->get(HX_("singLEFTmiss",d2,2f,9c,b6))) )->frames = oldMiss;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Character_obj,flipLeftRight,(void))

void Character_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_d07ef0c135db2bf5_541_update)
HXLINE( 542)		if (!(::StringTools_obj::startsWith(this->curCharacter,HX_("bf",c4,55,00,00)))) {
HXLINE( 544)			if (::StringTools_obj::startsWith(this->animation->_curAnim->name,HX_("sing",4f,96,53,4c))) {
HXLINE( 546)				 ::gameObjects::Character _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 546)				_hx_tmp->holdTimer = (_hx_tmp->holdTimer + elapsed);
            			}
HXLINE( 549)			Float dadVar = ( (Float)(4) );
HXLINE( 550)			if ((this->holdTimer >= ((::meta::data::Conductor_obj::stepCrochet * dadVar) * ((Float)0.001)))) {
HXLINE( 552)				this->dance(null());
HXLINE( 553)				this->holdTimer = ( (Float)(0) );
            			}
            		}
HXLINE( 557)		::String curCharSimplified = this->simplifyCharacter();
HXLINE( 558)		if ((curCharSimplified == HX_("gf",1f,5a,00,00))) {
HXLINE( 561)			bool _hx_tmp;
HXDLIN( 561)			if ((this->animation->_curAnim->name == HX_("hairFall",bd,48,d6,cb))) {
HXLINE( 561)				_hx_tmp = this->animation->_curAnim->finished;
            			}
            			else {
HXLINE( 561)				_hx_tmp = false;
            			}
HXDLIN( 561)			if (_hx_tmp) {
HXLINE( 562)				this->playAnim(HX_("danceRight",a9,7f,a6,91),null(),null(),null());
            			}
HXLINE( 563)			bool _hx_tmp1;
HXDLIN( 563)			if (::StringTools_obj::startsWith(this->animation->_curAnim->name,HX_("sad",16,98,57,00))) {
HXLINE( 563)				_hx_tmp1 = this->animation->_curAnim->finished;
            			}
            			else {
HXLINE( 563)				_hx_tmp1 = false;
            			}
HXDLIN( 563)			if (_hx_tmp1) {
HXLINE( 564)				this->playAnim(HX_("danceLeft",da,cc,f9,df),null(),null(),null());
            			}
            		}
HXLINE( 568)		bool _hx_tmp;
HXDLIN( 568)		if (this->animation->_curAnim->finished) {
HXLINE( 568)			_hx_tmp = (this->animation->_curAnim->name == HX_("idle",14,a7,b3,45));
            		}
            		else {
HXLINE( 568)			_hx_tmp = false;
            		}
HXDLIN( 568)		if (_hx_tmp) {
HXLINE( 571)			if (::hx::IsNotNull( this->animation->_animations->get(HX_("idlePost",94,71,4c,3f)) )) {
HXLINE( 573)				this->animation->play(HX_("idlePost",94,71,4c,3f),true,false,0);
            			}
            		}
HXLINE( 576)		this->super::update(elapsed);
            	}


void Character_obj::dance( ::Dynamic __o_forced){
            		 ::Dynamic forced = __o_forced;
            		if (::hx::IsNull(__o_forced)) forced = false;
            	HX_STACKFRAME(&_hx_pos_d07ef0c135db2bf5_586_dance)
HXDLIN( 586)		if (!(this->debugMode)) {
HXLINE( 588)			::String curCharSimplified = this->simplifyCharacter();
HXLINE( 589)			if ((curCharSimplified == HX_("gf",1f,5a,00,00))) {
HXLINE( 592)				bool _hx_tmp;
HXDLIN( 592)				if (!(::StringTools_obj::startsWith(this->animation->_curAnim->name,HX_("hair",22,27,08,45)))) {
HXLINE( 592)					_hx_tmp = !(::StringTools_obj::startsWith(this->animation->_curAnim->name,HX_("sad",16,98,57,00)));
            				}
            				else {
HXLINE( 592)					_hx_tmp = false;
            				}
HXDLIN( 592)				if (_hx_tmp) {
HXLINE( 594)					this->danced = !(this->danced);
HXLINE( 596)					if (this->danced) {
HXLINE( 597)						this->playAnim(HX_("danceRight",a9,7f,a6,91),forced,null(),null());
            					}
            					else {
HXLINE( 599)						this->playAnim(HX_("danceLeft",da,cc,f9,df),forced,null(),null());
            					}
            				}
            			}
            			else {
HXLINE( 603)				bool _hx_tmp;
HXDLIN( 603)				if (::hx::IsNotNull( this->animation->_animations->get(HX_("danceLeft",da,cc,f9,df)) )) {
HXLINE( 603)					_hx_tmp = ::hx::IsNotNull( this->animation->_animations->get(HX_("danceRight",a9,7f,a6,91)) );
            				}
            				else {
HXLINE( 603)					_hx_tmp = false;
            				}
HXDLIN( 603)				if (_hx_tmp) {
HXLINE( 604)					::String _hx_tmp;
HXDLIN( 604)					if ((this->animation->_curAnim->name == HX_("danceRight",a9,7f,a6,91))) {
HXLINE( 604)						_hx_tmp = HX_("danceLeft",da,cc,f9,df);
            					}
            					else {
HXLINE( 604)						_hx_tmp = HX_("danceRight",a9,7f,a6,91);
            					}
HXDLIN( 604)					this->playAnim(_hx_tmp,forced,null(),null());
            				}
            				else {
HXLINE( 607)					this->playAnim(HX_("idle",14,a7,b3,45),forced,null(),null());
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Character_obj,dance,(void))

void Character_obj::playAnim(::String AnimName,::hx::Null< bool >  __o_Force,::hx::Null< bool >  __o_Reversed,::hx::Null< int >  __o_Frame){
            		bool Force = __o_Force.Default(false);
            		bool Reversed = __o_Reversed.Default(false);
            		int Frame = __o_Frame.Default(0);
            	HX_STACKFRAME(&_hx_pos_d07ef0c135db2bf5_613_playAnim)
HXLINE( 614)		if (::hx::IsNotNull( this->animation->_animations->get(AnimName) )) {
HXLINE( 615)			this->super::playAnim(AnimName,Force,Reversed,Frame);
            		}
HXLINE( 617)		if ((this->curCharacter == HX_("gf",1f,5a,00,00))) {
HXLINE( 619)			if ((AnimName == HX_("singLEFT",d6,39,ef,3b))) {
HXLINE( 620)				this->danced = true;
            			}
            			else {
HXLINE( 621)				if ((AnimName == HX_("singRIGHT",0d,6f,70,ac))) {
HXLINE( 622)					this->danced = false;
            				}
            			}
HXLINE( 624)			bool _hx_tmp;
HXDLIN( 624)			if ((AnimName != HX_("singUP",6a,52,21,b9))) {
HXLINE( 624)				_hx_tmp = (AnimName == HX_("singDOWN",31,2a,ad,36));
            			}
            			else {
HXLINE( 624)				_hx_tmp = true;
            			}
HXDLIN( 624)			if (_hx_tmp) {
HXLINE( 625)				this->danced = !(this->danced);
            			}
            		}
            	}


::String Character_obj::simplifyCharacter(){
            	HX_STACKFRAME(&_hx_pos_d07ef0c135db2bf5_630_simplifyCharacter)
HXLINE( 631)		::String base = this->curCharacter;
HXLINE( 633)		if ((base.indexOf(HX_("-",2d,00,00,00),null()) != -1)) {
HXLINE( 634)			base = base.substring(0,base.indexOf(HX_("-",2d,00,00,00),null()));
            		}
HXLINE( 635)		return base;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Character_obj,simplifyCharacter,return )


::hx::ObjectPtr< Character_obj > Character_obj::__new(Float x,Float y,::String __o_character, ::Dynamic __o_isPlayer) {
	::hx::ObjectPtr< Character_obj > __this = new Character_obj();
	__this->__construct(x,y,__o_character,__o_isPlayer);
	return __this;
}

::hx::ObjectPtr< Character_obj > Character_obj::__alloc(::hx::Ctx *_hx_ctx,Float x,Float y,::String __o_character, ::Dynamic __o_isPlayer) {
	Character_obj *__this = (Character_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Character_obj), true, "gameObjects.Character"));
	*(void **)__this = Character_obj::_hx_vtable;
	__this->__construct(x,y,__o_character,__o_isPlayer);
	return __this;
}

Character_obj::Character_obj()
{
}

void Character_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Character);
	HX_MARK_MEMBER_NAME(quickDancer,"quickDancer");
	HX_MARK_MEMBER_NAME(debugMode,"debugMode");
	HX_MARK_MEMBER_NAME(isPlayer,"isPlayer");
	HX_MARK_MEMBER_NAME(curCharacter,"curCharacter");
	HX_MARK_MEMBER_NAME(holdTimer,"holdTimer");
	HX_MARK_MEMBER_NAME(danced,"danced");
	 ::meta::data::dependency::FNFSprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Character_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(quickDancer,"quickDancer");
	HX_VISIT_MEMBER_NAME(debugMode,"debugMode");
	HX_VISIT_MEMBER_NAME(isPlayer,"isPlayer");
	HX_VISIT_MEMBER_NAME(curCharacter,"curCharacter");
	HX_VISIT_MEMBER_NAME(holdTimer,"holdTimer");
	HX_VISIT_MEMBER_NAME(danced,"danced");
	 ::meta::data::dependency::FNFSprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val Character_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"dance") ) { return ::hx::Val( dance_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		if (HX_FIELD_EQ(inName,"danced") ) { return ::hx::Val( danced ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"isPlayer") ) { return ::hx::Val( isPlayer ); }
		if (HX_FIELD_EQ(inName,"playAnim") ) { return ::hx::Val( playAnim_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"debugMode") ) { return ::hx::Val( debugMode ); }
		if (HX_FIELD_EQ(inName,"holdTimer") ) { return ::hx::Val( holdTimer ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"quickDancer") ) { return ::hx::Val( quickDancer ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"curCharacter") ) { return ::hx::Val( curCharacter ); }
		if (HX_FIELD_EQ(inName,"setCharacter") ) { return ::hx::Val( setCharacter_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"flipLeftRight") ) { return ::hx::Val( flipLeftRight_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"simplifyCharacter") ) { return ::hx::Val( simplifyCharacter_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Character_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"danced") ) { danced=inValue.Cast< bool >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"isPlayer") ) { isPlayer=inValue.Cast< bool >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"debugMode") ) { debugMode=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"holdTimer") ) { holdTimer=inValue.Cast< Float >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"quickDancer") ) { quickDancer=inValue.Cast< bool >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"curCharacter") ) { curCharacter=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Character_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("quickDancer",ac,b4,58,1c));
	outFields->push(HX_("debugMode",56,77,ac,2b));
	outFields->push(HX_("isPlayer",eb,86,22,90));
	outFields->push(HX_("curCharacter",09,86,7c,d7));
	outFields->push(HX_("holdTimer",06,82,13,a9));
	outFields->push(HX_("danced",d1,49,8f,1e));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Character_obj_sMemberStorageInfo[] = {
	{::hx::fsBool,(int)offsetof(Character_obj,quickDancer),HX_("quickDancer",ac,b4,58,1c)},
	{::hx::fsBool,(int)offsetof(Character_obj,debugMode),HX_("debugMode",56,77,ac,2b)},
	{::hx::fsBool,(int)offsetof(Character_obj,isPlayer),HX_("isPlayer",eb,86,22,90)},
	{::hx::fsString,(int)offsetof(Character_obj,curCharacter),HX_("curCharacter",09,86,7c,d7)},
	{::hx::fsFloat,(int)offsetof(Character_obj,holdTimer),HX_("holdTimer",06,82,13,a9)},
	{::hx::fsBool,(int)offsetof(Character_obj,danced),HX_("danced",d1,49,8f,1e)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Character_obj_sStaticStorageInfo = 0;
#endif

static ::String Character_obj_sMemberFields[] = {
	HX_("quickDancer",ac,b4,58,1c),
	HX_("debugMode",56,77,ac,2b),
	HX_("isPlayer",eb,86,22,90),
	HX_("curCharacter",09,86,7c,d7),
	HX_("holdTimer",06,82,13,a9),
	HX_("setCharacter",a7,9b,21,66),
	HX_("flipLeftRight",e8,89,59,23),
	HX_("update",09,86,05,87),
	HX_("danced",d1,49,8f,1e),
	HX_("dance",33,83,83,d4),
	HX_("playAnim",25,ea,84,30),
	HX_("simplifyCharacter",60,bb,6e,a5),
	::String(null()) };

::hx::Class Character_obj::__mClass;

void Character_obj::__register()
{
	Character_obj _hx_dummy;
	Character_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("gameObjects.Character",1d,bb,75,71);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Character_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Character_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Character_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Character_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace gameObjects
