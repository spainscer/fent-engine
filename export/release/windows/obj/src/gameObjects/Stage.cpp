// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Init
#include <Init.h>
#endif
#ifndef INCLUDED_Paths
#include <Paths.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_FlxTransitionableState
#include <flixel/addons/transition/FlxTransitionableState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIState
#include <flixel/addons/ui/FlxUIState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIState
#include <flixel/addons/ui/interfaces/IFlxUIState.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_math_FlxRandom
#include <flixel/math/FlxRandom.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSound
#include <flixel/system/FlxSound.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_SoundFrontEnd
#include <flixel/system/frontEnds/SoundFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_VarTween
#include <flixel/tweens/misc/VarTween.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_gameObjects_Boyfriend
#include <gameObjects/Boyfriend.h>
#endif
#ifndef INCLUDED_gameObjects_Character
#include <gameObjects/Character.h>
#endif
#ifndef INCLUDED_gameObjects_Stage
#include <gameObjects/Stage.h>
#endif
#ifndef INCLUDED_gameObjects_background_BackgroundDancer
#include <gameObjects/background/BackgroundDancer.h>
#endif
#ifndef INCLUDED_gameObjects_background_BackgroundGirls
#include <gameObjects/background/BackgroundGirls.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_meta_CoolUtil
#include <meta/CoolUtil.h>
#endif
#ifndef INCLUDED_meta_MusicBeatState
#include <meta/MusicBeatState.h>
#endif
#ifndef INCLUDED_meta_data_Conductor
#include <meta/data/Conductor.h>
#endif
#ifndef INCLUDED_meta_data_dependency_FNFSprite
#include <meta/data/dependency/FNFSprite.h>
#endif
#ifndef INCLUDED_meta_data_dependency_FNFUIState
#include <meta/data/dependency/FNFUIState.h>
#endif
#ifndef INCLUDED_meta_state_PlayState
#include <meta/state/PlayState.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_media_SoundChannel
#include <openfl/media/SoundChannel.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b126eb2a06196f4b_29_new,"gameObjects.Stage","new",0x138a2224,"gameObjects.Stage.new","gameObjects/Stage.hx",29,0xe68bd6cd)
static const int _hx_array_data_fa058032_3[] = {
	(int)0,(int)1,(int)2,(int)3,(int)4,(int)5,(int)6,(int)7,(int)8,(int)9,(int)10,(int)11,(int)12,(int)13,(int)14,(int)15,(int)16,(int)17,(int)18,
};
HX_LOCAL_STACK_FRAME(_hx_pos_b126eb2a06196f4b_373_returnGFtype,"gameObjects.Stage","returnGFtype",0x9d29cac5,"gameObjects.Stage.returnGFtype","gameObjects/Stage.hx",373,0xe68bd6cd)
HX_LOCAL_STACK_FRAME(_hx_pos_b126eb2a06196f4b_394_dadPosition,"gameObjects.Stage","dadPosition",0x5a5667d4,"gameObjects.Stage.dadPosition","gameObjects/Stage.hx",394,0xe68bd6cd)
HX_LOCAL_STACK_FRAME(_hx_pos_b126eb2a06196f4b_440_repositionPlayers,"gameObjects.Stage","repositionPlayers",0x23c906ba,"gameObjects.Stage.repositionPlayers","gameObjects/Stage.hx",440,0xe68bd6cd)
HX_LOCAL_STACK_FRAME(_hx_pos_b126eb2a06196f4b_488_stageUpdate,"gameObjects.Stage","stageUpdate",0x3642bd2b,"gameObjects.Stage.stageUpdate","gameObjects/Stage.hx",488,0xe68bd6cd)
HX_LOCAL_STACK_FRAME(_hx_pos_b126eb2a06196f4b_494_stageUpdate,"gameObjects.Stage","stageUpdate",0x3642bd2b,"gameObjects.Stage.stageUpdate","gameObjects/Stage.hx",494,0xe68bd6cd)
HX_LOCAL_STACK_FRAME(_hx_pos_b126eb2a06196f4b_513_stageUpdate,"gameObjects.Stage","stageUpdate",0x3642bd2b,"gameObjects.Stage.stageUpdate","gameObjects/Stage.hx",513,0xe68bd6cd)
HX_LOCAL_STACK_FRAME(_hx_pos_b126eb2a06196f4b_543_stageUpdateConstant,"gameObjects.Stage","stageUpdateConstant",0x70a3ddaf,"gameObjects.Stage.stageUpdateConstant","gameObjects/Stage.hx",543,0xe68bd6cd)
HX_LOCAL_STACK_FRAME(_hx_pos_b126eb2a06196f4b_561_trainStart,"gameObjects.Stage","trainStart",0xfe69ca36,"gameObjects.Stage.trainStart","gameObjects/Stage.hx",561,0xe68bd6cd)
HX_LOCAL_STACK_FRAME(_hx_pos_b126eb2a06196f4b_568_updateTrainPos,"gameObjects.Stage","updateTrainPos",0x00013e91,"gameObjects.Stage.updateTrainPos","gameObjects/Stage.hx",568,0xe68bd6cd)
HX_LOCAL_STACK_FRAME(_hx_pos_b126eb2a06196f4b_594_trainReset,"gameObjects.Stage","trainReset",0x61269fa3,"gameObjects.Stage.trainReset","gameObjects/Stage.hx",594,0xe68bd6cd)
HX_LOCAL_STACK_FRAME(_hx_pos_b126eb2a06196f4b_606_add,"gameObjects.Stage","add",0x138043e5,"gameObjects.Stage.add","gameObjects/Stage.hx",606,0xe68bd6cd)
namespace gameObjects{

void Stage_obj::__construct(::String curStage){
            	HX_GC_STACKFRAME(&_hx_pos_b126eb2a06196f4b_29_new)
HXLINE( 483)		this->startedMoving = false;
HXLINE( 482)		this->trainCooldown = 0;
HXLINE( 481)		this->trainFinishing = false;
HXLINE( 480)		this->trainCars = 8;
HXLINE( 478)		this->trainFrameTiming = ((Float)0);
HXLINE( 477)		this->trainMoving = false;
HXLINE( 476)		this->curLight = 0;
HXLINE(  50)		this->daPixelZoom = ::meta::state::PlayState_obj::daPixelZoom;
HXLINE(  56)		super::__construct(null());
HXLINE(  57)		this->curStage = curStage;
HXLINE(  60)		if ((::meta::state::PlayState_obj::determinedChartType == HX_("FNF",fe,61,35,00))) {
HXLINE(  64)			::String _hx_switch_0 = ::meta::CoolUtil_obj::spaceToDash(( (::String)(::meta::state::PlayState_obj::SONG->__Field(HX_("song",d5,23,58,4c),::hx::paccDynamic)) ).toLowerCase());
            			if (  (_hx_switch_0==HX_("cocoa",09,9d,55,4a)) ||  (_hx_switch_0==HX_("eggnog",61,04,ba,f4)) ){
HXLINE(  73)				curStage = HX_("mall",d4,3a,56,48);
HXDLIN(  73)				goto _hx_goto_0;
            			}
            			if (  (_hx_switch_0==HX_("monster",1a,54,b0,b8)) ||  (_hx_switch_0==HX_("south",0d,92,cc,80)) ||  (_hx_switch_0==HX_("spookeez",0c,7a,2b,75)) ){
HXLINE(  67)				curStage = HX_("spooky",eb,bd,9e,c1);
HXDLIN(  67)				goto _hx_goto_0;
            			}
            			if (  (_hx_switch_0==HX_("blammed",96,02,00,3c)) ||  (_hx_switch_0==HX_("philly-nice",22,2e,26,44)) ||  (_hx_switch_0==HX_("pico",e5,e8,57,4a)) ){
HXLINE(  69)				curStage = HX_("philly",28,77,5e,ef);
HXDLIN(  69)				goto _hx_goto_0;
            			}
            			if (  (_hx_switch_0==HX_("high",62,37,0e,45)) ||  (_hx_switch_0==HX_("milf",d6,4c,5c,48)) ||  (_hx_switch_0==HX_("satin-panties",fe,64,00,d1)) ){
HXLINE(  71)				curStage = HX_("highway",0d,b3,8f,73);
HXDLIN(  71)				goto _hx_goto_0;
            			}
            			if (  (_hx_switch_0==HX_("roses",04,6c,64,ed)) ||  (_hx_switch_0==HX_("senpai",3c,df,8d,6b)) ){
HXLINE(  77)				curStage = HX_("school",74,b8,c8,40);
HXDLIN(  77)				goto _hx_goto_0;
            			}
            			if (  (_hx_switch_0==HX_("thorns",9c,bf,c7,8c)) ){
HXLINE(  79)				curStage = HX_("schoolEvil",28,a1,f5,f7);
HXDLIN(  79)				goto _hx_goto_0;
            			}
            			if (  (_hx_switch_0==HX_("winter-horrorland",9d,39,f4,1e)) ){
HXLINE(  75)				curStage = HX_("mallEvil",88,d3,e3,a7);
HXDLIN(  75)				goto _hx_goto_0;
            			}
            			/* default */{
HXLINE(  81)				curStage = HX_("stage",be,6a,0b,84);
            			}
            			_hx_goto_0:;
HXLINE(  84)			::meta::state::PlayState_obj::curStage = curStage;
            		}
HXLINE(  88)		this->foreground =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE(  91)		::String _hx_switch_1 = curStage;
            		if (  (_hx_switch_1==HX_("highway",0d,b3,8f,73)) ){
HXLINE( 149)			curStage = HX_("highway",0d,b3,8f,73);
HXLINE( 150)			::meta::state::PlayState_obj::defaultCamZoom = ((Float)0.90);
HXLINE( 152)			 ::meta::data::dependency::FNFSprite skyBG =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-120,-50);
HXDLIN( 152)			::String library = null();
HXDLIN( 152)			 ::meta::data::dependency::FNFSprite skyBG1 = Dynamic( skyBG->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/limoSunset",04,4f,1b,86))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 153)			skyBG1->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE( 154)			this->add(skyBG1);
HXLINE( 156)			 ::meta::data::dependency::FNFSprite bgLimo =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-200,480);
HXLINE( 157)			::String key = ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/bgLimo",f3,2c,3c,52));
HXDLIN( 157)			::String library1 = null();
HXDLIN( 157)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1);
HXDLIN( 157)			bgLimo->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library1))));
HXLINE( 158)			bgLimo->animation->addByPrefix(HX_("drive",0a,69,bc,df),HX_("background limo pink",65,40,fe,9c),24,null(),null(),null());
HXLINE( 159)			bgLimo->animation->play(HX_("drive",0a,69,bc,df),null(),null(),null());
HXLINE( 160)			bgLimo->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 161)			this->add(bgLimo);
HXLINE( 163)			this->grpLimoDancers =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE( 164)			this->add(this->grpLimoDancers);
HXLINE( 166)			{
HXLINE( 167)				{
HXLINE( 168)					 ::gameObjects::background::BackgroundDancer dancer =  ::gameObjects::background::BackgroundDancer_obj::__alloc( HX_CTX ,( (Float)(130) ),(bgLimo->y - ( (Float)(400) )));
HXLINE( 169)					dancer->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 170)					this->grpLimoDancers->add(dancer).StaticCast<  ::gameObjects::background::BackgroundDancer >();
            				}
HXLINE( 167)				{
HXLINE( 168)					 ::gameObjects::background::BackgroundDancer dancer1 =  ::gameObjects::background::BackgroundDancer_obj::__alloc( HX_CTX ,( (Float)(500) ),(bgLimo->y - ( (Float)(400) )));
HXLINE( 169)					dancer1->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 170)					this->grpLimoDancers->add(dancer1).StaticCast<  ::gameObjects::background::BackgroundDancer >();
            				}
HXLINE( 167)				{
HXLINE( 168)					 ::gameObjects::background::BackgroundDancer dancer2 =  ::gameObjects::background::BackgroundDancer_obj::__alloc( HX_CTX ,( (Float)(870) ),(bgLimo->y - ( (Float)(400) )));
HXLINE( 169)					dancer2->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 170)					this->grpLimoDancers->add(dancer2).StaticCast<  ::gameObjects::background::BackgroundDancer >();
            				}
HXLINE( 167)				{
HXLINE( 168)					 ::gameObjects::background::BackgroundDancer dancer3 =  ::gameObjects::background::BackgroundDancer_obj::__alloc( HX_CTX ,( (Float)(1240) ),(bgLimo->y - ( (Float)(400) )));
HXLINE( 169)					dancer3->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 170)					this->grpLimoDancers->add(dancer3).StaticCast<  ::gameObjects::background::BackgroundDancer >();
            				}
HXLINE( 167)				{
HXLINE( 168)					 ::gameObjects::background::BackgroundDancer dancer4 =  ::gameObjects::background::BackgroundDancer_obj::__alloc( HX_CTX ,( (Float)(1610) ),(bgLimo->y - ( (Float)(400) )));
HXLINE( 169)					dancer4->scrollFactor->set(((Float)0.4),((Float)0.4));
HXLINE( 170)					this->grpLimoDancers->add(dancer4).StaticCast<  ::gameObjects::background::BackgroundDancer >();
            				}
            			}
HXLINE( 173)			 ::meta::data::dependency::FNFSprite overlayShit =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-500,-600);
HXDLIN( 173)			::String library2 = null();
HXDLIN( 173)			 ::meta::data::dependency::FNFSprite overlayShit1 = Dynamic( overlayShit->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/limoOverlay",62,26,90,62))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library2),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 174)			overlayShit1->set_alpha(((Float)0.5));
HXLINE( 183)			::String key1 = ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/limoDrive",5c,93,5f,4a));
HXDLIN( 183)			::String library3 = null();
HXDLIN( 183)			::String limoTex = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key1) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library3);
HXDLIN( 183)			 ::flixel::graphics::frames::FlxAtlasFrames limoTex1 = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(limoTex,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key1) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library3)));
HXLINE( 185)			this->limo =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-120,550);
HXLINE( 186)			this->limo->set_frames(limoTex1);
HXLINE( 187)			this->limo->animation->addByPrefix(HX_("drive",0a,69,bc,df),HX_("Limo stage",1d,b3,df,4c),24,null(),null(),null());
HXLINE( 188)			this->limo->animation->play(HX_("drive",0a,69,bc,df),null(),null(),null());
HXLINE( 189)			this->limo->set_antialiasing(true);
HXLINE( 191)			 ::meta::data::dependency::FNFSprite _hx_tmp1 =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-300,160);
HXDLIN( 191)			::String library4 = null();
HXDLIN( 191)			this->fastCar = Dynamic( _hx_tmp1->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/fastCarLol",80,21,b9,ac))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library4),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 148)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_1==HX_("mall",d4,3a,56,48)) ){
HXLINE( 194)			curStage = HX_("mall",d4,3a,56,48);
HXLINE( 195)			::meta::state::PlayState_obj::defaultCamZoom = ((Float)0.80);
HXLINE( 197)			 ::meta::data::dependency::FNFSprite bg =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-1000,-500);
HXDLIN( 197)			::String library = null();
HXDLIN( 197)			 ::meta::data::dependency::FNFSprite bg1 = Dynamic( bg->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/bgWalls",d5,0f,89,f2))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 198)			bg1->set_antialiasing(true);
HXLINE( 199)			bg1->scrollFactor->set(((Float)0.2),((Float)0.2));
HXLINE( 200)			bg1->set_active(false);
HXLINE( 201)			bg1->setGraphicSize(::Std_obj::_hx_int((bg1->get_width() * ((Float)0.8))),null());
HXLINE( 202)			bg1->updateHitbox();
HXLINE( 203)			this->add(bg1);
HXLINE( 205)			this->upperBoppers =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-240,-90);
HXLINE( 206)			 ::meta::data::dependency::FNFSprite _hx_tmp = this->upperBoppers;
HXDLIN( 206)			::String key = ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/upperBop",f0,2c,c2,4a));
HXDLIN( 206)			::String library1 = null();
HXDLIN( 206)			::String _hx_tmp1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1);
HXDLIN( 206)			_hx_tmp->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp1,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library1))));
HXLINE( 207)			this->upperBoppers->animation->addByPrefix(HX_("bop",03,be,4a,00),HX_("Upper Crowd Bob",a4,72,cf,77),24,false,null(),null());
HXLINE( 208)			this->upperBoppers->set_antialiasing(true);
HXLINE( 209)			this->upperBoppers->scrollFactor->set(((Float)0.33),((Float)0.33));
HXLINE( 210)			 ::meta::data::dependency::FNFSprite _hx_tmp2 = this->upperBoppers;
HXDLIN( 210)			_hx_tmp2->setGraphicSize(::Std_obj::_hx_int((this->upperBoppers->get_width() * ((Float)0.85))),null());
HXLINE( 211)			this->upperBoppers->updateHitbox();
HXLINE( 212)			this->add(this->upperBoppers);
HXLINE( 214)			 ::meta::data::dependency::FNFSprite bgEscalator =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-1100,-600);
HXDLIN( 214)			::String library2 = null();
HXDLIN( 214)			 ::meta::data::dependency::FNFSprite bgEscalator1 = Dynamic( bgEscalator->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/bgEscalator",e2,a6,22,9f))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library2),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 215)			bgEscalator1->set_antialiasing(true);
HXLINE( 216)			bgEscalator1->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE( 217)			bgEscalator1->set_active(false);
HXLINE( 218)			bgEscalator1->setGraphicSize(::Std_obj::_hx_int((bgEscalator1->get_width() * ((Float)0.9))),null());
HXLINE( 219)			bgEscalator1->updateHitbox();
HXLINE( 220)			this->add(bgEscalator1);
HXLINE( 222)			 ::meta::data::dependency::FNFSprite tree =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,370,-250);
HXDLIN( 222)			::String library3 = null();
HXDLIN( 222)			 ::meta::data::dependency::FNFSprite tree1 = Dynamic( tree->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/christmasTree",71,3a,1f,48))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library3),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 223)			tree1->set_antialiasing(true);
HXLINE( 224)			tree1->scrollFactor->set(((Float)0.40),((Float)0.40));
HXLINE( 225)			this->add(tree1);
HXLINE( 227)			this->bottomBoppers =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-300,140);
HXLINE( 228)			 ::meta::data::dependency::FNFSprite _hx_tmp3 = this->bottomBoppers;
HXDLIN( 228)			::String key1 = ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/bottomBop",c9,75,ce,45));
HXDLIN( 228)			::String library4 = null();
HXDLIN( 228)			::String _hx_tmp4 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key1) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library4);
HXDLIN( 228)			_hx_tmp3->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp4,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key1) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library4))));
HXLINE( 229)			this->bottomBoppers->animation->addByPrefix(HX_("bop",03,be,4a,00),HX_("Bottom Level Boppers",c8,41,25,54),24,false,null(),null());
HXLINE( 230)			this->bottomBoppers->set_antialiasing(true);
HXLINE( 231)			this->bottomBoppers->scrollFactor->set(((Float)0.9),((Float)0.9));
HXLINE( 232)			 ::meta::data::dependency::FNFSprite _hx_tmp5 = this->bottomBoppers;
HXDLIN( 232)			_hx_tmp5->setGraphicSize(::Std_obj::_hx_int(this->bottomBoppers->get_width()),null());
HXLINE( 233)			this->bottomBoppers->updateHitbox();
HXLINE( 234)			this->add(this->bottomBoppers);
HXLINE( 236)			 ::meta::data::dependency::FNFSprite fgSnow =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-600,700);
HXDLIN( 236)			::String library5 = null();
HXDLIN( 236)			 ::meta::data::dependency::FNFSprite fgSnow1 = Dynamic( fgSnow->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/fgSnow",d3,e9,4d,f0))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library5),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 237)			fgSnow1->set_active(false);
HXLINE( 238)			fgSnow1->set_antialiasing(true);
HXLINE( 239)			this->add(fgSnow1);
HXLINE( 241)			this->santa =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-840,150);
HXLINE( 242)			 ::meta::data::dependency::FNFSprite _hx_tmp6 = this->santa;
HXDLIN( 242)			::String key2 = ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/santa",fe,3a,4c,42));
HXDLIN( 242)			::String library6 = null();
HXDLIN( 242)			::String _hx_tmp7 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key2) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library6);
HXDLIN( 242)			_hx_tmp6->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp7,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key2) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library6))));
HXLINE( 243)			this->santa->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("santa idle in fear",72,07,31,fd),24,false,null(),null());
HXLINE( 244)			this->santa->set_antialiasing(true);
HXLINE( 245)			this->add(this->santa);
HXLINE( 193)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_1==HX_("mallEvil",88,d3,e3,a7)) ){
HXLINE( 247)			curStage = HX_("mallEvil",88,d3,e3,a7);
HXLINE( 248)			 ::meta::data::dependency::FNFSprite bg =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-400,-500);
HXDLIN( 248)			::String library = null();
HXDLIN( 248)			 ::meta::data::dependency::FNFSprite bg1 = Dynamic( bg->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("backgrounds/mall/evilBG",ea,5e,ed,8c)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 249)			bg1->set_antialiasing(true);
HXLINE( 250)			bg1->scrollFactor->set(((Float)0.2),((Float)0.2));
HXLINE( 251)			bg1->set_active(false);
HXLINE( 252)			bg1->setGraphicSize(::Std_obj::_hx_int((bg1->get_width() * ((Float)0.8))),null());
HXLINE( 253)			bg1->updateHitbox();
HXLINE( 254)			this->add(bg1);
HXLINE( 256)			 ::meta::data::dependency::FNFSprite evilTree =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,300,-300);
HXDLIN( 256)			::String library1 = null();
HXDLIN( 256)			 ::meta::data::dependency::FNFSprite evilTree1 = Dynamic( evilTree->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("backgrounds/mall/evilTree",e3,3d,39,b6)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 257)			evilTree1->set_antialiasing(true);
HXLINE( 258)			evilTree1->scrollFactor->set(((Float)0.2),((Float)0.2));
HXLINE( 259)			this->add(evilTree1);
HXLINE( 261)			 ::meta::data::dependency::FNFSprite evilSnow =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-200,700);
HXDLIN( 261)			::String library2 = null();
HXDLIN( 261)			 ::meta::data::dependency::FNFSprite evilSnow1 = Dynamic( evilSnow->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("backgrounds/mall/evilSnow",08,07,8d,b5)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library2),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 262)			evilSnow1->set_antialiasing(true);
HXLINE( 263)			this->add(evilSnow1);
HXLINE( 246)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_1==HX_("philly",28,77,5e,ef)) ){
HXLINE( 109)			curStage = HX_("philly",28,77,5e,ef);
HXLINE( 111)			 ::meta::data::dependency::FNFSprite bg =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-100,null());
HXDLIN( 111)			::String library = null();
HXDLIN( 111)			 ::meta::data::dependency::FNFSprite bg1 = Dynamic( bg->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/sky",12,a8,68,1f))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 112)			bg1->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE( 113)			this->add(bg1);
HXLINE( 115)			 ::meta::data::dependency::FNFSprite city =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-10,null());
HXDLIN( 115)			::String library1 = null();
HXDLIN( 115)			 ::meta::data::dependency::FNFSprite city1 = Dynamic( city->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/city",5a,75,95,51))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 116)			city1->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE( 117)			city1->setGraphicSize(::Std_obj::_hx_int((city1->get_width() * ((Float)0.85))),null());
HXLINE( 118)			city1->updateHitbox();
HXLINE( 119)			this->add(city1);
HXLINE( 121)			this->phillyCityLights =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE( 122)			this->add(this->phillyCityLights);
HXLINE( 124)			{
HXLINE( 125)				{
HXLINE( 126)					 ::meta::data::dependency::FNFSprite light =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,city1->x,null());
HXDLIN( 126)					::String library2 = null();
HXDLIN( 126)					 ::meta::data::dependency::FNFSprite light1 = Dynamic( light->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + (((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/win",4d,af,6b,1f)) + 0)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library2),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 127)					light1->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE( 128)					light1->set_visible(false);
HXLINE( 129)					light1->setGraphicSize(::Std_obj::_hx_int((light1->get_width() * ((Float)0.85))),null());
HXLINE( 130)					light1->updateHitbox();
HXLINE( 131)					light1->set_antialiasing(true);
HXLINE( 132)					this->phillyCityLights->add(light1).StaticCast<  ::meta::data::dependency::FNFSprite >();
            				}
HXLINE( 125)				{
HXLINE( 126)					 ::meta::data::dependency::FNFSprite light2 =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,city1->x,null());
HXDLIN( 126)					::String library3 = null();
HXDLIN( 126)					 ::meta::data::dependency::FNFSprite light3 = Dynamic( light2->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + (((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/win",4d,af,6b,1f)) + 1)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library3),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 127)					light3->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE( 128)					light3->set_visible(false);
HXLINE( 129)					light3->setGraphicSize(::Std_obj::_hx_int((light3->get_width() * ((Float)0.85))),null());
HXLINE( 130)					light3->updateHitbox();
HXLINE( 131)					light3->set_antialiasing(true);
HXLINE( 132)					this->phillyCityLights->add(light3).StaticCast<  ::meta::data::dependency::FNFSprite >();
            				}
HXLINE( 125)				{
HXLINE( 126)					 ::meta::data::dependency::FNFSprite light4 =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,city1->x,null());
HXDLIN( 126)					::String library4 = null();
HXDLIN( 126)					 ::meta::data::dependency::FNFSprite light5 = Dynamic( light4->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + (((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/win",4d,af,6b,1f)) + 2)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library4),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 127)					light5->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE( 128)					light5->set_visible(false);
HXLINE( 129)					light5->setGraphicSize(::Std_obj::_hx_int((light5->get_width() * ((Float)0.85))),null());
HXLINE( 130)					light5->updateHitbox();
HXLINE( 131)					light5->set_antialiasing(true);
HXLINE( 132)					this->phillyCityLights->add(light5).StaticCast<  ::meta::data::dependency::FNFSprite >();
            				}
HXLINE( 125)				{
HXLINE( 126)					 ::meta::data::dependency::FNFSprite light6 =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,city1->x,null());
HXDLIN( 126)					::String library5 = null();
HXDLIN( 126)					 ::meta::data::dependency::FNFSprite light7 = Dynamic( light6->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + (((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/win",4d,af,6b,1f)) + 3)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library5),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 127)					light7->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE( 128)					light7->set_visible(false);
HXLINE( 129)					light7->setGraphicSize(::Std_obj::_hx_int((light7->get_width() * ((Float)0.85))),null());
HXLINE( 130)					light7->updateHitbox();
HXLINE( 131)					light7->set_antialiasing(true);
HXLINE( 132)					this->phillyCityLights->add(light7).StaticCast<  ::meta::data::dependency::FNFSprite >();
            				}
HXLINE( 125)				{
HXLINE( 126)					 ::meta::data::dependency::FNFSprite light8 =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,city1->x,null());
HXDLIN( 126)					::String library6 = null();
HXDLIN( 126)					 ::meta::data::dependency::FNFSprite light9 = Dynamic( light8->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + (((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/win",4d,af,6b,1f)) + 4)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library6),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 127)					light9->scrollFactor->set(((Float)0.3),((Float)0.3));
HXLINE( 128)					light9->set_visible(false);
HXLINE( 129)					light9->setGraphicSize(::Std_obj::_hx_int((light9->get_width() * ((Float)0.85))),null());
HXLINE( 130)					light9->updateHitbox();
HXLINE( 131)					light9->set_antialiasing(true);
HXLINE( 132)					this->phillyCityLights->add(light9).StaticCast<  ::meta::data::dependency::FNFSprite >();
            				}
            			}
HXLINE( 135)			 ::meta::data::dependency::FNFSprite streetBehind =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-40,50);
HXDLIN( 135)			::String library7 = null();
HXDLIN( 135)			 ::meta::data::dependency::FNFSprite streetBehind1 = Dynamic( streetBehind->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/behindTrain",df,10,a5,ef))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library7),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 136)			this->add(streetBehind1);
HXLINE( 138)			 ::meta::data::dependency::FNFSprite _hx_tmp =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,2000,360);
HXDLIN( 138)			::String library8 = null();
HXDLIN( 138)			this->phillyTrain = Dynamic( _hx_tmp->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/train",39,89,e5,e0))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library8),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 139)			this->add(this->phillyTrain);
HXLINE( 141)			 ::flixel::_hx_system::FlxSound _hx_tmp1 =  ::flixel::_hx_system::FlxSound_obj::__alloc( HX_CTX );
HXDLIN( 141)			this->trainSound = _hx_tmp1->loadEmbedded(::Paths_obj::sound(HX_("train_passes",56,da,5a,7f),null()),null(),null(),null());
HXLINE( 142)			::flixel::FlxG_obj::sound->list->add(this->trainSound).StaticCast<  ::flixel::_hx_system::FlxSound >();
HXLINE( 146)			 ::meta::data::dependency::FNFSprite street =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-40,streetBehind1->y);
HXDLIN( 146)			::String library9 = null();
HXDLIN( 146)			 ::meta::data::dependency::FNFSprite street1 = Dynamic( street->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/street",72,e5,9d,b3))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library9),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 147)			this->add(street1);
HXLINE( 108)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_1==HX_("school",74,b8,c8,40)) ){
HXLINE( 265)			curStage = HX_("school",74,b8,c8,40);
HXLINE( 269)			 ::meta::data::dependency::FNFSprite bgSky =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,null(),null());
HXDLIN( 269)			::String library = null();
HXDLIN( 269)			 ::meta::data::dependency::FNFSprite bgSky1 = Dynamic( bgSky->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/weebSky",67,71,47,9f))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 270)			bgSky1->scrollFactor->set(((Float)0.1),((Float)0.1));
HXLINE( 271)			this->add(bgSky1);
HXLINE( 273)			int repositionShit = -200;
HXLINE( 275)			 ::meta::data::dependency::FNFSprite bgSchool =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,repositionShit,0);
HXDLIN( 275)			::String library1 = null();
HXDLIN( 275)			 ::meta::data::dependency::FNFSprite bgSchool1 = Dynamic( bgSchool->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/weebSchool",ae,7f,2d,36))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 276)			bgSchool1->scrollFactor->set(((Float)0.6),((Float)0.90));
HXLINE( 277)			this->add(bgSchool1);
HXLINE( 279)			 ::meta::data::dependency::FNFSprite bgStreet =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,repositionShit,null());
HXDLIN( 279)			::String library2 = null();
HXDLIN( 279)			 ::meta::data::dependency::FNFSprite bgStreet1 = Dynamic( bgStreet->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/weebStreet",3d,df,91,06))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library2),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 280)			bgStreet1->scrollFactor->set(((Float)0.95),((Float)0.95));
HXLINE( 281)			this->add(bgStreet1);
HXLINE( 283)			 ::meta::data::dependency::FNFSprite fgTrees =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,(repositionShit + 170),130);
HXDLIN( 283)			::String library3 = null();
HXDLIN( 283)			 ::meta::data::dependency::FNFSprite fgTrees1 = Dynamic( fgTrees->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/weebTreesBack",22,67,c4,6b))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library3),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 284)			fgTrees1->scrollFactor->set(((Float)0.9),((Float)0.9));
HXLINE( 285)			this->add(fgTrees1);
HXLINE( 287)			 ::meta::data::dependency::FNFSprite bgTrees =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,(repositionShit - 380),-800);
HXLINE( 288)			::String key = ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/weebTrees",5b,17,0c,2d));
HXDLIN( 288)			::String library4 = null();
HXDLIN( 288)			::String treetex = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library4);
HXDLIN( 288)			 ::flixel::graphics::frames::FlxAtlasFrames treetex1 = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSpriteSheetPacker(treetex,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".txt",02,3f,c0,1e)),HX_("TEXT",ad,94,ba,37),library4));
HXLINE( 289)			bgTrees->set_frames(treetex1);
HXLINE( 290)			bgTrees->animation->add(HX_("treeLoop",e2,72,7f,2b),::Array_obj< int >::fromData( _hx_array_data_fa058032_3,19),12,null(),null(),null());
HXLINE( 291)			bgTrees->animation->play(HX_("treeLoop",e2,72,7f,2b),null(),null(),null());
HXLINE( 292)			bgTrees->scrollFactor->set(((Float)0.85),((Float)0.85));
HXLINE( 293)			this->add(bgTrees);
HXLINE( 295)			 ::meta::data::dependency::FNFSprite treeLeaves =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,repositionShit,-40);
HXLINE( 296)			::String key1 = ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/petals",18,87,d8,de));
HXDLIN( 296)			::String library5 = null();
HXDLIN( 296)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key1) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library5);
HXDLIN( 296)			treeLeaves->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key1) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library5))));
HXLINE( 297)			treeLeaves->animation->addByPrefix(HX_("leaves",9c,23,7b,96),HX_("PETALS ALL",0a,57,91,88),24,true,null(),null());
HXLINE( 298)			treeLeaves->animation->play(HX_("leaves",9c,23,7b,96),null(),null(),null());
HXLINE( 299)			treeLeaves->scrollFactor->set(((Float)0.85),((Float)0.85));
HXLINE( 300)			this->add(treeLeaves);
HXLINE( 302)			int widShit = ::Std_obj::_hx_int((bgSky1->get_width() * ( (Float)(6) )));
HXLINE( 304)			bgSky1->setGraphicSize(widShit,null());
HXLINE( 305)			bgSchool1->setGraphicSize(widShit,null());
HXLINE( 306)			bgStreet1->setGraphicSize(widShit,null());
HXLINE( 307)			bgTrees->setGraphicSize(::Std_obj::_hx_int((( (Float)(widShit) ) * ((Float)1.4))),null());
HXLINE( 308)			fgTrees1->setGraphicSize(::Std_obj::_hx_int((( (Float)(widShit) ) * ((Float)0.8))),null());
HXLINE( 309)			treeLeaves->setGraphicSize(widShit,null());
HXLINE( 311)			fgTrees1->updateHitbox();
HXLINE( 312)			bgSky1->updateHitbox();
HXLINE( 313)			bgSchool1->updateHitbox();
HXLINE( 314)			bgStreet1->updateHitbox();
HXLINE( 315)			bgTrees->updateHitbox();
HXLINE( 316)			treeLeaves->updateHitbox();
HXLINE( 318)			this->bgGirls =  ::gameObjects::background::BackgroundGirls_obj::__alloc( HX_CTX ,( (Float)(-100) ),( (Float)(190) ));
HXLINE( 319)			this->bgGirls->scrollFactor->set(((Float)0.9),((Float)0.9));
HXLINE( 321)			if ((( (::String)(::meta::state::PlayState_obj::SONG->__Field(HX_("song",d5,23,58,4c),::hx::paccDynamic)) ).toLowerCase() == HX_("roses",04,6c,64,ed))) {
HXLINE( 322)				this->bgGirls->getScared();
            			}
HXLINE( 324)			 ::gameObjects::background::BackgroundGirls _hx_tmp1 = this->bgGirls;
HXDLIN( 324)			Float _hx_tmp2 = this->bgGirls->get_width();
HXDLIN( 324)			_hx_tmp1->setGraphicSize(::Std_obj::_hx_int((_hx_tmp2 * this->daPixelZoom)),null());
HXLINE( 325)			this->bgGirls->updateHitbox();
HXLINE( 326)			this->add(this->bgGirls);
HXLINE( 264)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_1==HX_("schoolEvil",28,a1,f5,f7)) ){
HXLINE( 328)			int posX = 400;
HXLINE( 329)			int posY = 200;
HXLINE( 330)			 ::meta::data::dependency::FNFSprite bg =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,posX,posY);
HXLINE( 331)			::String key = ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/animatedEvilSchool",9a,be,ae,77));
HXDLIN( 331)			::String library = null();
HXDLIN( 331)			::String _hx_tmp = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 331)			bg->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library))));
HXLINE( 332)			bg->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("background 2",80,07,9d,17),24,null(),null(),null());
HXLINE( 333)			bg->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 334)			bg->scrollFactor->set(((Float)0.8),((Float)0.9));
HXLINE( 335)			bg->scale->set(6,6);
HXLINE( 336)			this->add(bg);
HXLINE( 327)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_1==HX_("spooky",eb,bd,9e,c1)) ){
HXLINE(  94)			curStage = HX_("spooky",eb,bd,9e,c1);
HXLINE(  97)			::String key = ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/halloween_bg",26,b1,80,69));
HXDLIN(  97)			::String library = null();
HXDLIN(  97)			::String hallowTex = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN(  97)			 ::flixel::graphics::frames::FlxAtlasFrames hallowTex1 = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(hallowTex,::sys::io::File_obj::getContent(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + key) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE(  99)			this->halloweenBG =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-200,-100);
HXLINE( 100)			this->halloweenBG->set_frames(hallowTex1);
HXLINE( 101)			this->halloweenBG->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("halloweem bg0",37,fc,3c,6c),null(),null(),null(),null());
HXLINE( 102)			this->halloweenBG->animation->addByPrefix(HX_("lightning",0a,39,4a,d7),HX_("halloweem bg lightning strike",af,54,50,5b),24,false,null(),null());
HXLINE( 103)			this->halloweenBG->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 104)			this->halloweenBG->set_antialiasing(true);
HXLINE( 105)			this->add(this->halloweenBG);
HXLINE(  93)			goto _hx_goto_1;
            		}
            		/* default */{
HXLINE( 339)			::meta::state::PlayState_obj::defaultCamZoom = ((Float)0.9);
HXLINE( 340)			curStage = HX_("stage",be,6a,0b,84);
HXLINE( 341)			 ::meta::data::dependency::FNFSprite bg =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-600,-200);
HXDLIN( 341)			::String library = null();
HXDLIN( 341)			 ::meta::data::dependency::FNFSprite bg1 = Dynamic( bg->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/stageback",d6,7d,e7,53))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 342)			bg1->set_antialiasing(true);
HXLINE( 343)			bg1->scrollFactor->set(((Float)0.9),((Float)0.9));
HXLINE( 344)			bg1->set_active(false);
HXLINE( 347)			this->add(bg1);
HXLINE( 349)			 ::meta::data::dependency::FNFSprite stageFront =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-650,600);
HXDLIN( 349)			::String library1 = null();
HXDLIN( 349)			 ::meta::data::dependency::FNFSprite stageFront1 = Dynamic( stageFront->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/stagefront",1a,ae,86,6f))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 350)			stageFront1->setGraphicSize(::Std_obj::_hx_int((stageFront1->get_width() * ((Float)1.1))),null());
HXLINE( 351)			stageFront1->updateHitbox();
HXLINE( 352)			stageFront1->set_antialiasing(true);
HXLINE( 353)			stageFront1->scrollFactor->set(((Float)0.9),((Float)0.9));
HXLINE( 354)			stageFront1->set_active(false);
HXLINE( 357)			this->add(stageFront1);
HXLINE( 359)			 ::meta::data::dependency::FNFSprite stageCurtains =  ::meta::data::dependency::FNFSprite_obj::__alloc( HX_CTX ,-500,-300);
HXDLIN( 359)			::String library2 = null();
HXDLIN( 359)			 ::meta::data::dependency::FNFSprite stageCurtains1 = Dynamic( stageCurtains->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + ((HX_("backgrounds/",ca,4f,9d,17) + curStage) + HX_("/stagecurtains",50,3b,ed,08))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library2),null(),null(),null(),null(),null())).StaticCast<  ::meta::data::dependency::FNFSprite >();
HXLINE( 360)			stageCurtains1->setGraphicSize(::Std_obj::_hx_int((stageCurtains1->get_width() * ((Float)0.9))),null());
HXLINE( 361)			stageCurtains1->updateHitbox();
HXLINE( 362)			stageCurtains1->set_antialiasing(true);
HXLINE( 363)			stageCurtains1->scrollFactor->set(((Float)1.3),((Float)1.3));
HXLINE( 364)			stageCurtains1->set_active(false);
HXLINE( 367)			this->add(stageCurtains1);
            		}
            		_hx_goto_1:;
            	}

Dynamic Stage_obj::__CreateEmpty() { return new Stage_obj; }

void *Stage_obj::_hx_vtable = 0;

Dynamic Stage_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Stage_obj > _hx_result = new Stage_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Stage_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x62817b24) {
		if (inClassId<=(int)0x22f577dc) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x22f577dc;
		} else {
			return inClassId==(int)0x62817b24;
		}
	} else {
		return inClassId==(int)0x7ccf8994;
	}
}

::String Stage_obj::returnGFtype(::String curStage){
            	HX_STACKFRAME(&_hx_pos_b126eb2a06196f4b_373_returnGFtype)
HXLINE( 374)		::String gfVersion = HX_("gf",1f,5a,00,00);
HXLINE( 376)		::String _hx_switch_0 = curStage;
            		if (  (_hx_switch_0==HX_("highway",0d,b3,8f,73)) ){
HXLINE( 379)			gfVersion = HX_("gf-car",a6,63,ab,07);
HXDLIN( 379)			goto _hx_goto_4;
            		}
            		if (  (_hx_switch_0==HX_("mall",d4,3a,56,48)) ||  (_hx_switch_0==HX_("mallEvil",88,d3,e3,a7)) ){
HXLINE( 381)			gfVersion = HX_("gf-christmas",94,26,b1,6d);
HXDLIN( 381)			goto _hx_goto_4;
            		}
            		if (  (_hx_switch_0==HX_("school",74,b8,c8,40)) ){
HXLINE( 383)			gfVersion = HX_("gf-pixel",98,3e,8c,55);
HXDLIN( 383)			goto _hx_goto_4;
            		}
            		if (  (_hx_switch_0==HX_("schoolEvil",28,a1,f5,f7)) ){
HXLINE( 385)			gfVersion = HX_("gf-pixel",98,3e,8c,55);
HXDLIN( 385)			goto _hx_goto_4;
            		}
            		_hx_goto_4:;
HXLINE( 388)		return gfVersion;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Stage_obj,returnGFtype,return )

void Stage_obj::dadPosition(::String curStage, ::gameObjects::Character dad, ::gameObjects::Character gf, ::flixel::math::FlxPoint camPos,::String songPlayer2){
            	HX_STACKFRAME(&_hx_pos_b126eb2a06196f4b_394_dadPosition)
HXDLIN( 394)		::String _hx_switch_0 = songPlayer2;
            		if (  (_hx_switch_0==HX_("dad",47,36,4c,00)) ){
HXLINE( 413)			 ::flixel::math::FlxPoint _g = camPos;
HXDLIN( 413)			_g->set_x((_g->x + 400));
HXDLIN( 413)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("gf",1f,5a,00,00)) ){
HXLINE( 397)			dad->setPosition(gf->x,gf->y);
HXLINE( 398)			gf->set_visible(false);
HXLINE( 396)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("monster",1a,54,b0,b8)) ){
HXLINE( 409)			 ::gameObjects::Character _g = dad;
HXDLIN( 409)			_g->set_y((_g->y + 100));
HXDLIN( 409)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("monster-christmas",4f,88,85,27)) ){
HXLINE( 411)			 ::gameObjects::Character _g = dad;
HXDLIN( 411)			_g->set_y((_g->y + 130));
HXDLIN( 411)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("parents-christmas",fe,94,c5,32)) ){
HXLINE( 418)			 ::gameObjects::Character _g = dad;
HXDLIN( 418)			_g->set_x((_g->x - ( (Float)(500) )));
HXDLIN( 418)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("pico",e5,e8,57,4a)) ){
HXLINE( 415)			{
HXLINE( 415)				 ::flixel::math::FlxPoint _g = camPos;
HXDLIN( 415)				_g->set_x((_g->x + 600));
            			}
HXLINE( 416)			{
HXLINE( 416)				 ::gameObjects::Character _g1 = dad;
HXDLIN( 416)				_g1->set_y((_g1->y + 300));
            			}
HXLINE( 414)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("senpai",3c,df,8d,6b)) ){
HXLINE( 420)			{
HXLINE( 420)				 ::gameObjects::Character _g = dad;
HXDLIN( 420)				_g->set_x((_g->x + 150));
            			}
HXLINE( 421)			{
HXLINE( 421)				 ::gameObjects::Character _g1 = dad;
HXDLIN( 421)				_g1->set_y((_g1->y + 360));
            			}
HXLINE( 422)			Float _hx_tmp = (dad->getGraphicMidpoint(null())->x + 300);
HXDLIN( 422)			camPos->set(_hx_tmp,dad->getGraphicMidpoint(null())->y);
HXLINE( 419)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("senpai-angry",10,7a,b8,25)) ){
HXLINE( 424)			{
HXLINE( 424)				 ::gameObjects::Character _g = dad;
HXDLIN( 424)				_g->set_x((_g->x + 150));
            			}
HXLINE( 425)			{
HXLINE( 425)				 ::gameObjects::Character _g1 = dad;
HXDLIN( 425)				_g1->set_y((_g1->y + 360));
            			}
HXLINE( 426)			Float _hx_tmp = (dad->getGraphicMidpoint(null())->x + 300);
HXDLIN( 426)			camPos->set(_hx_tmp,dad->getGraphicMidpoint(null())->y);
HXLINE( 423)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("spirit",31,bb,a9,bd)) ){
HXLINE( 428)			{
HXLINE( 428)				 ::gameObjects::Character _g = dad;
HXDLIN( 428)				_g->set_x((_g->x - ( (Float)(150) )));
            			}
HXLINE( 429)			{
HXLINE( 429)				 ::gameObjects::Character _g1 = dad;
HXDLIN( 429)				_g1->set_y((_g1->y + 100));
            			}
HXLINE( 430)			Float _hx_tmp = (dad->getGraphicMidpoint(null())->x + 300);
HXDLIN( 430)			camPos->set(_hx_tmp,dad->getGraphicMidpoint(null())->y);
HXLINE( 427)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("spooky",eb,bd,9e,c1)) ){
HXLINE( 407)			 ::gameObjects::Character _g = dad;
HXDLIN( 407)			_g->set_y((_g->y + 200));
HXDLIN( 407)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("tankman",f0,7d,78,3d)) ){
HXLINE( 432)			{
HXLINE( 432)				 ::gameObjects::Character _g = dad;
HXDLIN( 432)				_g->set_x((_g->x + 50));
            			}
HXLINE( 433)			{
HXLINE( 433)				 ::gameObjects::Character _g1 = dad;
HXDLIN( 433)				_g1->set_y((_g1->y + 200));
            			}
HXLINE( 431)			goto _hx_goto_6;
            		}
            		_hx_goto_6:;
            	}


HX_DEFINE_DYNAMIC_FUNC5(Stage_obj,dadPosition,(void))

void Stage_obj::repositionPlayers(::String curStage, ::gameObjects::Character boyfriend, ::gameObjects::Character dad, ::gameObjects::Character gf){
            	HX_STACKFRAME(&_hx_pos_b126eb2a06196f4b_440_repositionPlayers)
HXDLIN( 440)		::String _hx_switch_0 = curStage;
            		if (  (_hx_switch_0==HX_("highway",0d,b3,8f,73)) ){
HXLINE( 443)			{
HXLINE( 443)				 ::gameObjects::Character _g = boyfriend;
HXDLIN( 443)				_g->set_y((_g->y - ( (Float)(220) )));
            			}
HXLINE( 444)			{
HXLINE( 444)				 ::gameObjects::Character _g1 = boyfriend;
HXDLIN( 444)				_g1->set_x((_g1->x + 260));
            			}
HXLINE( 442)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("mall",d4,3a,56,48)) ){
HXLINE( 450)			 ::gameObjects::Character _g = boyfriend;
HXDLIN( 450)			_g->set_x((_g->x + 200));
HXDLIN( 450)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("mallEvil",88,d3,e3,a7)) ){
HXLINE( 453)			{
HXLINE( 453)				 ::gameObjects::Character _g = boyfriend;
HXDLIN( 453)				_g->set_x((_g->x + 320));
            			}
HXLINE( 454)			{
HXLINE( 454)				 ::gameObjects::Character _g1 = dad;
HXDLIN( 454)				_g1->set_y((_g1->y - ( (Float)(80) )));
            			}
HXLINE( 452)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("school",74,b8,c8,40)) ){
HXLINE( 456)			{
HXLINE( 456)				 ::gameObjects::Character _g = boyfriend;
HXDLIN( 456)				_g->set_x((_g->x + 200));
            			}
HXLINE( 457)			{
HXLINE( 457)				 ::gameObjects::Character _g1 = boyfriend;
HXDLIN( 457)				_g1->set_y((_g1->y + 220));
            			}
HXLINE( 458)			{
HXLINE( 458)				 ::gameObjects::Character _g2 = gf;
HXDLIN( 458)				_g2->set_x((_g2->x + 180));
            			}
HXLINE( 459)			{
HXLINE( 459)				 ::gameObjects::Character _g3 = gf;
HXDLIN( 459)				_g3->set_y((_g3->y + 300));
            			}
HXLINE( 455)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("schoolEvil",28,a1,f5,f7)) ){
HXLINE( 469)			{
HXLINE( 469)				 ::gameObjects::Character _g = boyfriend;
HXDLIN( 469)				_g->set_x((_g->x + 200));
            			}
HXLINE( 470)			{
HXLINE( 470)				 ::gameObjects::Character _g1 = boyfriend;
HXDLIN( 470)				_g1->set_y((_g1->y + 220));
            			}
HXLINE( 471)			{
HXLINE( 471)				 ::gameObjects::Character _g2 = gf;
HXDLIN( 471)				_g2->set_x((_g2->x + 180));
            			}
HXLINE( 472)			{
HXLINE( 472)				 ::gameObjects::Character _g3 = gf;
HXDLIN( 472)				_g3->set_y((_g3->y + 300));
            			}
HXLINE( 460)			goto _hx_goto_8;
            		}
            		_hx_goto_8:;
            	}


HX_DEFINE_DYNAMIC_FUNC4(Stage_obj,repositionPlayers,(void))

void Stage_obj::stageUpdate(int curBeat, ::gameObjects::Boyfriend boyfriend, ::gameObjects::Character gf, ::gameObjects::Character dadOpponent){
            	HX_STACKFRAME(&_hx_pos_b126eb2a06196f4b_488_stageUpdate)
HXDLIN( 488)		::String _hx_switch_0 = ::meta::state::PlayState_obj::curStage;
            		if (  (_hx_switch_0==HX_("highway",0d,b3,8f,73)) ){
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            			void _hx_run( ::gameObjects::background::BackgroundDancer dancer){
            				HX_STACKFRAME(&_hx_pos_b126eb2a06196f4b_494_stageUpdate)
HXLINE( 494)				dancer->dance();
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 492)			this->grpLimoDancers->forEach( ::Dynamic(new _hx_Closure_0()),null());
HXDLIN( 492)			goto _hx_goto_10;
            		}
            		if (  (_hx_switch_0==HX_("mall",d4,3a,56,48)) ){
HXLINE( 497)			this->upperBoppers->animation->play(HX_("bop",03,be,4a,00),true,null(),null());
HXLINE( 498)			this->bottomBoppers->animation->play(HX_("bop",03,be,4a,00),true,null(),null());
HXLINE( 499)			this->santa->animation->play(HX_("idle",14,a7,b3,45),true,null(),null());
HXLINE( 496)			goto _hx_goto_10;
            		}
            		if (  (_hx_switch_0==HX_("philly",28,77,5e,ef)) ){
HXLINE( 505)			if (!(this->trainMoving)) {
HXLINE( 506)				 ::gameObjects::Stage _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 506)				_hx_tmp->trainCooldown = (_hx_tmp->trainCooldown + 1);
            			}
HXLINE( 508)			if ((::hx::Mod(curBeat,4) == 0)) {
            				HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1,::Array< ::Dynamic>,lastLight) HXARGC(1)
            				void _hx_run( ::meta::data::dependency::FNFSprite light){
            					HX_STACKFRAME(&_hx_pos_b126eb2a06196f4b_513_stageUpdate)
HXLINE( 515)					if ((light->visible == true)) {
HXLINE( 516)						lastLight[0] = light;
            					}
HXLINE( 518)					light->set_visible(false);
            				}
            				HX_END_LOCAL_FUNC1((void))

HXLINE( 510)				::Array< ::Dynamic> lastLight = ::Array_obj< ::Dynamic>::__new(1)->init(0,Dynamic( this->phillyCityLights->members->__get(0)).StaticCast<  ::meta::data::dependency::FNFSprite >());
HXLINE( 512)				this->phillyCityLights->forEach( ::Dynamic(new _hx_Closure_1(lastLight)),null());
HXLINE( 522)				while(::hx::IsEq( lastLight->__get(0).StaticCast<  ::flixel::FlxSprite >(),Dynamic( this->phillyCityLights->members->__get(this->curLight)).StaticCast<  ::meta::data::dependency::FNFSprite >() )){
HXLINE( 524)					this->curLight = ::flixel::FlxG_obj::random->_hx_int(0,(this->phillyCityLights->length - 1),null());
            				}
HXLINE( 527)				Dynamic( this->phillyCityLights->members->__get(this->curLight)).StaticCast<  ::meta::data::dependency::FNFSprite >()->set_visible(true);
HXLINE( 528)				Dynamic( this->phillyCityLights->members->__get(this->curLight)).StaticCast<  ::meta::data::dependency::FNFSprite >()->set_alpha(( (Float)(1) ));
HXLINE( 530)				::flixel::tweens::FlxTween_obj::tween(Dynamic( this->phillyCityLights->members->__get(this->curLight)).StaticCast<  ::meta::data::dependency::FNFSprite >(), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("alpha",5e,a7,96,21),0)),(::meta::data::Conductor_obj::stepCrochet * ((Float).016)),null());
            			}
HXLINE( 533)			bool _hx_tmp;
HXDLIN( 533)			bool _hx_tmp1;
HXDLIN( 533)			bool _hx_tmp2;
HXDLIN( 533)			if ((::hx::Mod(curBeat,8) == 4)) {
HXLINE( 533)				_hx_tmp2 = (::flixel::FlxG_obj::random->_hx_float(0,100,null()) < 30);
            			}
            			else {
HXLINE( 533)				_hx_tmp2 = false;
            			}
HXDLIN( 533)			if (_hx_tmp2) {
HXLINE( 533)				_hx_tmp1 = !(this->trainMoving);
            			}
            			else {
HXLINE( 533)				_hx_tmp1 = false;
            			}
HXDLIN( 533)			if (_hx_tmp1) {
HXLINE( 533)				_hx_tmp = (this->trainCooldown > 8);
            			}
            			else {
HXLINE( 533)				_hx_tmp = false;
            			}
HXDLIN( 533)			if (_hx_tmp) {
HXLINE( 535)				this->trainCooldown = ::flixel::FlxG_obj::random->_hx_int(-4,0,null());
HXLINE( 536)				this->trainStart();
            			}
HXLINE( 504)			goto _hx_goto_10;
            		}
            		if (  (_hx_switch_0==HX_("school",74,b8,c8,40)) ){
HXLINE( 502)			this->bgGirls->dance();
HXDLIN( 502)			goto _hx_goto_10;
            		}
            		_hx_goto_10:;
            	}


HX_DEFINE_DYNAMIC_FUNC4(Stage_obj,stageUpdate,(void))

void Stage_obj::stageUpdateConstant(Float elapsed, ::gameObjects::Boyfriend boyfriend, ::gameObjects::Character gf, ::gameObjects::Character dadOpponent){
            	HX_STACKFRAME(&_hx_pos_b126eb2a06196f4b_543_stageUpdateConstant)
HXDLIN( 543)		if ((::meta::state::PlayState_obj::curStage == HX_("philly",28,77,5e,ef))) {
HXLINE( 546)			if (this->trainMoving) {
HXLINE( 548)				 ::gameObjects::Stage _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 548)				_hx_tmp->trainFrameTiming = (_hx_tmp->trainFrameTiming + elapsed);
HXLINE( 550)				if ((this->trainFrameTiming >= ((Float)0.041666666666666664))) {
HXLINE( 552)					this->updateTrainPos(gf);
HXLINE( 553)					this->trainFrameTiming = ( (Float)(0) );
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(Stage_obj,stageUpdateConstant,(void))

void Stage_obj::trainStart(){
            	HX_STACKFRAME(&_hx_pos_b126eb2a06196f4b_561_trainStart)
HXLINE( 562)		this->trainMoving = true;
HXLINE( 563)		if (::hx::IsNull( this->trainSound->_channel )) {
HXLINE( 564)			this->trainSound->play(true,null(),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Stage_obj,trainStart,(void))

void Stage_obj::updateTrainPos( ::gameObjects::Character gf){
            	HX_STACKFRAME(&_hx_pos_b126eb2a06196f4b_568_updateTrainPos)
HXLINE( 569)		if ((this->trainSound->_time >= 4700)) {
HXLINE( 571)			this->startedMoving = true;
HXLINE( 572)			gf->playAnim(HX_("hairBlow",b4,c9,39,c9),null(),null(),null());
            		}
HXLINE( 575)		if (this->startedMoving) {
HXLINE( 577)			{
HXLINE( 577)				 ::meta::data::dependency::FNFSprite _g = this->phillyTrain;
HXDLIN( 577)				_g->set_x((_g->x - ( (Float)(400) )));
            			}
HXLINE( 579)			bool _hx_tmp;
HXDLIN( 579)			if ((this->phillyTrain->x < -2000)) {
HXLINE( 579)				_hx_tmp = !(this->trainFinishing);
            			}
            			else {
HXLINE( 579)				_hx_tmp = false;
            			}
HXDLIN( 579)			if (_hx_tmp) {
HXLINE( 581)				this->phillyTrain->set_x(( (Float)(-1150) ));
HXLINE( 582)				 ::gameObjects::Stage _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 582)				_hx_tmp->trainCars = (_hx_tmp->trainCars - 1);
HXLINE( 584)				if ((this->trainCars <= 0)) {
HXLINE( 585)					this->trainFinishing = true;
            				}
            			}
HXLINE( 588)			bool _hx_tmp1;
HXDLIN( 588)			if ((this->phillyTrain->x < -4000)) {
HXLINE( 588)				_hx_tmp1 = this->trainFinishing;
            			}
            			else {
HXLINE( 588)				_hx_tmp1 = false;
            			}
HXDLIN( 588)			if (_hx_tmp1) {
HXLINE( 589)				this->trainReset(gf);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Stage_obj,updateTrainPos,(void))

void Stage_obj::trainReset( ::gameObjects::Character gf){
            	HX_STACKFRAME(&_hx_pos_b126eb2a06196f4b_594_trainReset)
HXLINE( 595)		gf->playAnim(HX_("hairFall",bd,48,d6,cb),null(),null(),null());
HXLINE( 596)		this->phillyTrain->set_x(( (Float)((::flixel::FlxG_obj::width + 200)) ));
HXLINE( 597)		this->trainMoving = false;
HXLINE( 600)		this->trainCars = 8;
HXLINE( 601)		this->trainFinishing = false;
HXLINE( 602)		this->startedMoving = false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Stage_obj,trainReset,(void))

 ::Dynamic Stage_obj::add( ::Dynamic _tmp_Object){
            	HX_STACKFRAME(&_hx_pos_b126eb2a06196f4b_606_add)
HXLINE( 607)		 ::flixel::FlxBasic Object = ( ( ::flixel::FlxBasic)(_tmp_Object) );
HXDLIN( 607)		bool _hx_tmp;
HXDLIN( 607)		if (( (bool)(::Init_obj::trueSettings->get(HX_("Disable Antialiasing",6c,04,2e,d8))) )) {
HXLINE( 607)			_hx_tmp = ::Std_obj::isOfType(Object,::hx::ClassOf< ::flixel::FlxSprite >());
            		}
            		else {
HXLINE( 607)			_hx_tmp = false;
            		}
HXDLIN( 607)		if (_hx_tmp) {
HXLINE( 608)			::hx::TCast<  ::flixel::FlxSprite >::cast(Object)->set_antialiasing(false);
            		}
HXLINE( 609)		return this->super::add(Object);
            	}



::hx::ObjectPtr< Stage_obj > Stage_obj::__new(::String curStage) {
	::hx::ObjectPtr< Stage_obj > __this = new Stage_obj();
	__this->__construct(curStage);
	return __this;
}

::hx::ObjectPtr< Stage_obj > Stage_obj::__alloc(::hx::Ctx *_hx_ctx,::String curStage) {
	Stage_obj *__this = (Stage_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Stage_obj), true, "gameObjects.Stage"));
	*(void **)__this = Stage_obj::_hx_vtable;
	__this->__construct(curStage);
	return __this;
}

Stage_obj::Stage_obj()
{
}

void Stage_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Stage);
	HX_MARK_MEMBER_NAME(halloweenBG,"halloweenBG");
	HX_MARK_MEMBER_NAME(phillyCityLights,"phillyCityLights");
	HX_MARK_MEMBER_NAME(phillyTrain,"phillyTrain");
	HX_MARK_MEMBER_NAME(trainSound,"trainSound");
	HX_MARK_MEMBER_NAME(limo,"limo");
	HX_MARK_MEMBER_NAME(grpLimoDancers,"grpLimoDancers");
	HX_MARK_MEMBER_NAME(fastCar,"fastCar");
	HX_MARK_MEMBER_NAME(upperBoppers,"upperBoppers");
	HX_MARK_MEMBER_NAME(bottomBoppers,"bottomBoppers");
	HX_MARK_MEMBER_NAME(santa,"santa");
	HX_MARK_MEMBER_NAME(bgGirls,"bgGirls");
	HX_MARK_MEMBER_NAME(curStage,"curStage");
	HX_MARK_MEMBER_NAME(daPixelZoom,"daPixelZoom");
	HX_MARK_MEMBER_NAME(foreground,"foreground");
	HX_MARK_MEMBER_NAME(curLight,"curLight");
	HX_MARK_MEMBER_NAME(trainMoving,"trainMoving");
	HX_MARK_MEMBER_NAME(trainFrameTiming,"trainFrameTiming");
	HX_MARK_MEMBER_NAME(trainCars,"trainCars");
	HX_MARK_MEMBER_NAME(trainFinishing,"trainFinishing");
	HX_MARK_MEMBER_NAME(trainCooldown,"trainCooldown");
	HX_MARK_MEMBER_NAME(startedMoving,"startedMoving");
	 ::flixel::group::FlxTypedGroup_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Stage_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(halloweenBG,"halloweenBG");
	HX_VISIT_MEMBER_NAME(phillyCityLights,"phillyCityLights");
	HX_VISIT_MEMBER_NAME(phillyTrain,"phillyTrain");
	HX_VISIT_MEMBER_NAME(trainSound,"trainSound");
	HX_VISIT_MEMBER_NAME(limo,"limo");
	HX_VISIT_MEMBER_NAME(grpLimoDancers,"grpLimoDancers");
	HX_VISIT_MEMBER_NAME(fastCar,"fastCar");
	HX_VISIT_MEMBER_NAME(upperBoppers,"upperBoppers");
	HX_VISIT_MEMBER_NAME(bottomBoppers,"bottomBoppers");
	HX_VISIT_MEMBER_NAME(santa,"santa");
	HX_VISIT_MEMBER_NAME(bgGirls,"bgGirls");
	HX_VISIT_MEMBER_NAME(curStage,"curStage");
	HX_VISIT_MEMBER_NAME(daPixelZoom,"daPixelZoom");
	HX_VISIT_MEMBER_NAME(foreground,"foreground");
	HX_VISIT_MEMBER_NAME(curLight,"curLight");
	HX_VISIT_MEMBER_NAME(trainMoving,"trainMoving");
	HX_VISIT_MEMBER_NAME(trainFrameTiming,"trainFrameTiming");
	HX_VISIT_MEMBER_NAME(trainCars,"trainCars");
	HX_VISIT_MEMBER_NAME(trainFinishing,"trainFinishing");
	HX_VISIT_MEMBER_NAME(trainCooldown,"trainCooldown");
	HX_VISIT_MEMBER_NAME(startedMoving,"startedMoving");
	 ::flixel::group::FlxTypedGroup_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val Stage_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return ::hx::Val( add_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"limo") ) { return ::hx::Val( limo ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"santa") ) { return ::hx::Val( santa ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"fastCar") ) { return ::hx::Val( fastCar ); }
		if (HX_FIELD_EQ(inName,"bgGirls") ) { return ::hx::Val( bgGirls ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"curStage") ) { return ::hx::Val( curStage ); }
		if (HX_FIELD_EQ(inName,"curLight") ) { return ::hx::Val( curLight ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"trainCars") ) { return ::hx::Val( trainCars ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"trainSound") ) { return ::hx::Val( trainSound ); }
		if (HX_FIELD_EQ(inName,"foreground") ) { return ::hx::Val( foreground ); }
		if (HX_FIELD_EQ(inName,"trainStart") ) { return ::hx::Val( trainStart_dyn() ); }
		if (HX_FIELD_EQ(inName,"trainReset") ) { return ::hx::Val( trainReset_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"halloweenBG") ) { return ::hx::Val( halloweenBG ); }
		if (HX_FIELD_EQ(inName,"phillyTrain") ) { return ::hx::Val( phillyTrain ); }
		if (HX_FIELD_EQ(inName,"daPixelZoom") ) { return ::hx::Val( daPixelZoom ); }
		if (HX_FIELD_EQ(inName,"dadPosition") ) { return ::hx::Val( dadPosition_dyn() ); }
		if (HX_FIELD_EQ(inName,"trainMoving") ) { return ::hx::Val( trainMoving ); }
		if (HX_FIELD_EQ(inName,"stageUpdate") ) { return ::hx::Val( stageUpdate_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"upperBoppers") ) { return ::hx::Val( upperBoppers ); }
		if (HX_FIELD_EQ(inName,"returnGFtype") ) { return ::hx::Val( returnGFtype_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"bottomBoppers") ) { return ::hx::Val( bottomBoppers ); }
		if (HX_FIELD_EQ(inName,"trainCooldown") ) { return ::hx::Val( trainCooldown ); }
		if (HX_FIELD_EQ(inName,"startedMoving") ) { return ::hx::Val( startedMoving ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"grpLimoDancers") ) { return ::hx::Val( grpLimoDancers ); }
		if (HX_FIELD_EQ(inName,"trainFinishing") ) { return ::hx::Val( trainFinishing ); }
		if (HX_FIELD_EQ(inName,"updateTrainPos") ) { return ::hx::Val( updateTrainPos_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"phillyCityLights") ) { return ::hx::Val( phillyCityLights ); }
		if (HX_FIELD_EQ(inName,"trainFrameTiming") ) { return ::hx::Val( trainFrameTiming ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"repositionPlayers") ) { return ::hx::Val( repositionPlayers_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"stageUpdateConstant") ) { return ::hx::Val( stageUpdateConstant_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Stage_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"limo") ) { limo=inValue.Cast<  ::meta::data::dependency::FNFSprite >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"santa") ) { santa=inValue.Cast<  ::meta::data::dependency::FNFSprite >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"fastCar") ) { fastCar=inValue.Cast<  ::meta::data::dependency::FNFSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"bgGirls") ) { bgGirls=inValue.Cast<  ::gameObjects::background::BackgroundGirls >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"curStage") ) { curStage=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"curLight") ) { curLight=inValue.Cast< int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"trainCars") ) { trainCars=inValue.Cast< int >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"trainSound") ) { trainSound=inValue.Cast<  ::flixel::_hx_system::FlxSound >(); return inValue; }
		if (HX_FIELD_EQ(inName,"foreground") ) { foreground=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"halloweenBG") ) { halloweenBG=inValue.Cast<  ::meta::data::dependency::FNFSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"phillyTrain") ) { phillyTrain=inValue.Cast<  ::meta::data::dependency::FNFSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"daPixelZoom") ) { daPixelZoom=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"trainMoving") ) { trainMoving=inValue.Cast< bool >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"upperBoppers") ) { upperBoppers=inValue.Cast<  ::meta::data::dependency::FNFSprite >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"bottomBoppers") ) { bottomBoppers=inValue.Cast<  ::meta::data::dependency::FNFSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"trainCooldown") ) { trainCooldown=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"startedMoving") ) { startedMoving=inValue.Cast< bool >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"grpLimoDancers") ) { grpLimoDancers=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		if (HX_FIELD_EQ(inName,"trainFinishing") ) { trainFinishing=inValue.Cast< bool >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"phillyCityLights") ) { phillyCityLights=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		if (HX_FIELD_EQ(inName,"trainFrameTiming") ) { trainFrameTiming=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Stage_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("halloweenBG",92,b2,88,5c));
	outFields->push(HX_("phillyCityLights",30,e0,12,1f));
	outFields->push(HX_("phillyTrain",80,9b,65,bb));
	outFields->push(HX_("trainSound",e7,b3,e5,da));
	outFields->push(HX_("limo",1f,17,b3,47));
	outFields->push(HX_("grpLimoDancers",70,18,93,51));
	outFields->push(HX_("fastCar",d8,f2,1f,de));
	outFields->push(HX_("upperBoppers",37,47,71,21));
	outFields->push(HX_("bottomBoppers",ce,2c,ba,6e));
	outFields->push(HX_("santa",8d,45,86,77));
	outFields->push(HX_("bgGirls",92,16,2b,41));
	outFields->push(HX_("curStage",1e,65,b9,cb));
	outFields->push(HX_("daPixelZoom",7c,81,6e,df));
	outFields->push(HX_("foreground",c3,18,ef,10));
	outFields->push(HX_("curLight",36,8b,aa,bc));
	outFields->push(HX_("trainMoving",76,00,99,48));
	outFields->push(HX_("trainFrameTiming",af,67,10,1b));
	outFields->push(HX_("trainCars",c7,61,9c,4d));
	outFields->push(HX_("trainFinishing",87,15,8c,24));
	outFields->push(HX_("trainCooldown",93,a3,58,0c));
	outFields->push(HX_("startedMoving",af,76,97,fb));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Stage_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::meta::data::dependency::FNFSprite */ ,(int)offsetof(Stage_obj,halloweenBG),HX_("halloweenBG",92,b2,88,5c)},
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(Stage_obj,phillyCityLights),HX_("phillyCityLights",30,e0,12,1f)},
	{::hx::fsObject /*  ::meta::data::dependency::FNFSprite */ ,(int)offsetof(Stage_obj,phillyTrain),HX_("phillyTrain",80,9b,65,bb)},
	{::hx::fsObject /*  ::flixel::_hx_system::FlxSound */ ,(int)offsetof(Stage_obj,trainSound),HX_("trainSound",e7,b3,e5,da)},
	{::hx::fsObject /*  ::meta::data::dependency::FNFSprite */ ,(int)offsetof(Stage_obj,limo),HX_("limo",1f,17,b3,47)},
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(Stage_obj,grpLimoDancers),HX_("grpLimoDancers",70,18,93,51)},
	{::hx::fsObject /*  ::meta::data::dependency::FNFSprite */ ,(int)offsetof(Stage_obj,fastCar),HX_("fastCar",d8,f2,1f,de)},
	{::hx::fsObject /*  ::meta::data::dependency::FNFSprite */ ,(int)offsetof(Stage_obj,upperBoppers),HX_("upperBoppers",37,47,71,21)},
	{::hx::fsObject /*  ::meta::data::dependency::FNFSprite */ ,(int)offsetof(Stage_obj,bottomBoppers),HX_("bottomBoppers",ce,2c,ba,6e)},
	{::hx::fsObject /*  ::meta::data::dependency::FNFSprite */ ,(int)offsetof(Stage_obj,santa),HX_("santa",8d,45,86,77)},
	{::hx::fsObject /*  ::gameObjects::background::BackgroundGirls */ ,(int)offsetof(Stage_obj,bgGirls),HX_("bgGirls",92,16,2b,41)},
	{::hx::fsString,(int)offsetof(Stage_obj,curStage),HX_("curStage",1e,65,b9,cb)},
	{::hx::fsFloat,(int)offsetof(Stage_obj,daPixelZoom),HX_("daPixelZoom",7c,81,6e,df)},
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(Stage_obj,foreground),HX_("foreground",c3,18,ef,10)},
	{::hx::fsInt,(int)offsetof(Stage_obj,curLight),HX_("curLight",36,8b,aa,bc)},
	{::hx::fsBool,(int)offsetof(Stage_obj,trainMoving),HX_("trainMoving",76,00,99,48)},
	{::hx::fsFloat,(int)offsetof(Stage_obj,trainFrameTiming),HX_("trainFrameTiming",af,67,10,1b)},
	{::hx::fsInt,(int)offsetof(Stage_obj,trainCars),HX_("trainCars",c7,61,9c,4d)},
	{::hx::fsBool,(int)offsetof(Stage_obj,trainFinishing),HX_("trainFinishing",87,15,8c,24)},
	{::hx::fsInt,(int)offsetof(Stage_obj,trainCooldown),HX_("trainCooldown",93,a3,58,0c)},
	{::hx::fsBool,(int)offsetof(Stage_obj,startedMoving),HX_("startedMoving",af,76,97,fb)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Stage_obj_sStaticStorageInfo = 0;
#endif

static ::String Stage_obj_sMemberFields[] = {
	HX_("halloweenBG",92,b2,88,5c),
	HX_("phillyCityLights",30,e0,12,1f),
	HX_("phillyTrain",80,9b,65,bb),
	HX_("trainSound",e7,b3,e5,da),
	HX_("limo",1f,17,b3,47),
	HX_("grpLimoDancers",70,18,93,51),
	HX_("fastCar",d8,f2,1f,de),
	HX_("upperBoppers",37,47,71,21),
	HX_("bottomBoppers",ce,2c,ba,6e),
	HX_("santa",8d,45,86,77),
	HX_("bgGirls",92,16,2b,41),
	HX_("curStage",1e,65,b9,cb),
	HX_("daPixelZoom",7c,81,6e,df),
	HX_("foreground",c3,18,ef,10),
	HX_("returnGFtype",09,75,2e,fe),
	HX_("dadPosition",10,b2,12,3e),
	HX_("repositionPlayers",f6,a5,e0,6f),
	HX_("curLight",36,8b,aa,bc),
	HX_("trainMoving",76,00,99,48),
	HX_("trainFrameTiming",af,67,10,1b),
	HX_("trainCars",c7,61,9c,4d),
	HX_("trainFinishing",87,15,8c,24),
	HX_("trainCooldown",93,a3,58,0c),
	HX_("startedMoving",af,76,97,fb),
	HX_("stageUpdate",67,07,ff,19),
	HX_("stageUpdateConstant",eb,c3,4e,a9),
	HX_("trainStart",7a,9b,24,de),
	HX_("updateTrainPos",d5,01,38,2b),
	HX_("trainReset",e7,70,e1,40),
	HX_("add",21,f2,49,00),
	::String(null()) };

::hx::Class Stage_obj::__mClass;

void Stage_obj::__register()
{
	Stage_obj _hx_dummy;
	Stage_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("gameObjects.Stage",32,80,05,fa);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Stage_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Stage_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Stage_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Stage_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace gameObjects
