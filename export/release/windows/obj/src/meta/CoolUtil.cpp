// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_lime_utils_Assets
#include <lime/utils/Assets.h>
#endif
#ifndef INCLUDED_meta_CoolUtil
#include <meta/CoolUtil.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <sys/FileSystem.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_5219dbffa78c3f46_20_difficultyFromNumber,"meta.CoolUtil","difficultyFromNumber",0x986b0248,"meta.CoolUtil.difficultyFromNumber","meta/CoolUtil.hx",20,0xec7a3689)
HX_LOCAL_STACK_FRAME(_hx_pos_5219dbffa78c3f46_25_dashToSpace,"meta.CoolUtil","dashToSpace",0xefbfe0ff,"meta.CoolUtil.dashToSpace","meta/CoolUtil.hx",25,0xec7a3689)
HX_LOCAL_STACK_FRAME(_hx_pos_5219dbffa78c3f46_30_spaceToDash,"meta.CoolUtil","spaceToDash",0xc79ca0b9,"meta.CoolUtil.spaceToDash","meta/CoolUtil.hx",30,0xec7a3689)
HX_LOCAL_STACK_FRAME(_hx_pos_5219dbffa78c3f46_35_swapSpaceDash,"meta.CoolUtil","swapSpaceDash",0xaa88408b,"meta.CoolUtil.swapSpaceDash","meta/CoolUtil.hx",35,0xec7a3689)
HX_LOCAL_STACK_FRAME(_hx_pos_5219dbffa78c3f46_39_coolTextFile,"meta.CoolUtil","coolTextFile",0x544f0c0c,"meta.CoolUtil.coolTextFile","meta/CoolUtil.hx",39,0xec7a3689)
HX_LOCAL_STACK_FRAME(_hx_pos_5219dbffa78c3f46_51_getOffsetsFromTxt,"meta.CoolUtil","getOffsetsFromTxt",0x9d4a7422,"meta.CoolUtil.getOffsetsFromTxt","meta/CoolUtil.hx",51,0xec7a3689)
HX_LOCAL_STACK_FRAME(_hx_pos_5219dbffa78c3f46_64_returnAssetsLibrary,"meta.CoolUtil","returnAssetsLibrary",0x0d1146ce,"meta.CoolUtil.returnAssetsLibrary","meta/CoolUtil.hx",64,0xec7a3689)
HX_LOCAL_STACK_FRAME(_hx_pos_5219dbffa78c3f46_82_getAnimsFromTxt,"meta.CoolUtil","getAnimsFromTxt",0x2f75f1a0,"meta.CoolUtil.getAnimsFromTxt","meta/CoolUtil.hx",82,0xec7a3689)
HX_LOCAL_STACK_FRAME(_hx_pos_5219dbffa78c3f46_97_numberArray,"meta.CoolUtil","numberArray",0x4f9224f6,"meta.CoolUtil.numberArray","meta/CoolUtil.hx",97,0xec7a3689)
HX_LOCAL_STACK_FRAME(_hx_pos_5219dbffa78c3f46_15_boot,"meta.CoolUtil","boot",0xe1b09c8c,"meta.CoolUtil.boot","meta/CoolUtil.hx",15,0xec7a3689)
static const ::String _hx_array_data_954a2654_15[] = {
	HX_("EASY",02,54,cd,2d),HX_("NORMAL",27,1e,ec,e2),HX_("HARD",eb,f6,c8,2f),
};
HX_LOCAL_STACK_FRAME(_hx_pos_5219dbffa78c3f46_16_boot,"meta.CoolUtil","boot",0xe1b09c8c,"meta.CoolUtil.boot","meta/CoolUtil.hx",16,0xec7a3689)
namespace meta{

void CoolUtil_obj::__construct() { }

Dynamic CoolUtil_obj::__CreateEmpty() { return new CoolUtil_obj; }

void *CoolUtil_obj::_hx_vtable = 0;

Dynamic CoolUtil_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CoolUtil_obj > _hx_result = new CoolUtil_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CoolUtil_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0eac5c10;
}

::Array< ::String > CoolUtil_obj::difficultyArray;

int CoolUtil_obj::difficultyLength;

::String CoolUtil_obj::difficultyFromNumber(int number){
            	HX_STACKFRAME(&_hx_pos_5219dbffa78c3f46_20_difficultyFromNumber)
HXDLIN(  20)		return ::meta::CoolUtil_obj::difficultyArray->__get(number);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CoolUtil_obj,difficultyFromNumber,return )

::String CoolUtil_obj::dashToSpace(::String string){
            	HX_STACKFRAME(&_hx_pos_5219dbffa78c3f46_25_dashToSpace)
HXDLIN(  25)		return ::StringTools_obj::replace(string,HX_("-",2d,00,00,00),HX_(" ",20,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CoolUtil_obj,dashToSpace,return )

::String CoolUtil_obj::spaceToDash(::String string){
            	HX_STACKFRAME(&_hx_pos_5219dbffa78c3f46_30_spaceToDash)
HXDLIN(  30)		return ::StringTools_obj::replace(string,HX_(" ",20,00,00,00),HX_("-",2d,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CoolUtil_obj,spaceToDash,return )

::String CoolUtil_obj::swapSpaceDash(::String string){
            	HX_STACKFRAME(&_hx_pos_5219dbffa78c3f46_35_swapSpaceDash)
HXDLIN(  35)		if ((string.indexOf(HX_("-",2d,00,00,00),null()) != -1)) {
HXDLIN(  35)			return ::meta::CoolUtil_obj::dashToSpace(string);
            		}
            		else {
HXDLIN(  35)			return ::meta::CoolUtil_obj::spaceToDash(string);
            		}
HXDLIN(  35)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CoolUtil_obj,swapSpaceDash,return )

::Array< ::String > CoolUtil_obj::coolTextFile(::String path){
            	HX_STACKFRAME(&_hx_pos_5219dbffa78c3f46_39_coolTextFile)
HXLINE(  40)		::Array< ::String > daList = ::StringTools_obj::trim(::lime::utils::Assets_obj::getText(path)).split(HX_("\n",0a,00,00,00));
HXLINE(  42)		{
HXLINE(  42)			int _g = 0;
HXDLIN(  42)			int _g1 = daList->length;
HXDLIN(  42)			while((_g < _g1)){
HXLINE(  42)				_g = (_g + 1);
HXDLIN(  42)				int i = (_g - 1);
HXLINE(  44)				daList[i] = ::StringTools_obj::trim(daList->__get(i));
            			}
            		}
HXLINE(  47)		return daList;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CoolUtil_obj,coolTextFile,return )

::Array< ::Dynamic> CoolUtil_obj::getOffsetsFromTxt(::String path){
            	HX_STACKFRAME(&_hx_pos_5219dbffa78c3f46_51_getOffsetsFromTxt)
HXLINE(  52)		::String fullText = ::lime::utils::Assets_obj::getText(path);
HXLINE(  54)		::Array< ::String > firstArray = fullText.split(HX_("\n",0a,00,00,00));
HXLINE(  55)		::Array< ::Dynamic> swagOffsets = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  57)		{
HXLINE(  57)			int _g = 0;
HXDLIN(  57)			while((_g < firstArray->length)){
HXLINE(  57)				::String i = firstArray->__get(_g);
HXDLIN(  57)				_g = (_g + 1);
HXLINE(  58)				swagOffsets->push(i.split(HX_(" ",20,00,00,00)));
            			}
            		}
HXLINE(  60)		return swagOffsets;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CoolUtil_obj,getOffsetsFromTxt,return )

::Array< ::String > CoolUtil_obj::returnAssetsLibrary(::String library,::String __o_subDir){
            		::String subDir = __o_subDir;
            		if (::hx::IsNull(__o_subDir)) subDir = HX_("assets/images",04,3c,49,a0);
            	HX_STACKFRAME(&_hx_pos_5219dbffa78c3f46_64_returnAssetsLibrary)
HXLINE(  66)		::Array< ::String > libraryArray = ::Array_obj< ::String >::__new(0);
HXLINE(  68)		::Array< ::String > unfilteredLibrary = ::sys::FileSystem_obj::readDirectory((((HX_("",00,00,00,00) + subDir) + HX_("/",2f,00,00,00)) + library));
HXLINE(  70)		{
HXLINE(  70)			int _g = 0;
HXDLIN(  70)			while((_g < unfilteredLibrary->length)){
HXLINE(  70)				::String folder = unfilteredLibrary->__get(_g);
HXDLIN(  70)				_g = (_g + 1);
HXLINE(  72)				if ((folder.indexOf(HX_(".",2e,00,00,00),null()) == -1)) {
HXLINE(  73)					libraryArray->push(folder);
            				}
            			}
            		}
HXLINE(  75)		::haxe::Log_obj::trace(libraryArray,::hx::SourceInfo(HX_("source/meta/CoolUtil.hx",7d,6d,a3,ad),75,HX_("meta.CoolUtil",54,26,4a,95),HX_("returnAssetsLibrary",e8,e9,3c,33)));
HXLINE(  78)		return libraryArray;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CoolUtil_obj,returnAssetsLibrary,return )

::Array< ::Dynamic> CoolUtil_obj::getAnimsFromTxt(::String path){
            	HX_STACKFRAME(&_hx_pos_5219dbffa78c3f46_82_getAnimsFromTxt)
HXLINE(  83)		::String fullText = ::lime::utils::Assets_obj::getText(path);
HXLINE(  85)		::Array< ::String > firstArray = fullText.split(HX_("\n",0a,00,00,00));
HXLINE(  86)		::Array< ::Dynamic> swagOffsets = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  88)		{
HXLINE(  88)			int _g = 0;
HXDLIN(  88)			while((_g < firstArray->length)){
HXLINE(  88)				::String i = firstArray->__get(_g);
HXDLIN(  88)				_g = (_g + 1);
HXLINE(  90)				swagOffsets->push(i.split(HX_("--",60,27,00,00)));
            			}
            		}
HXLINE(  93)		return swagOffsets;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CoolUtil_obj,getAnimsFromTxt,return )

::Array< int > CoolUtil_obj::numberArray(int max, ::Dynamic __o_min){
            		 ::Dynamic min = __o_min;
            		if (::hx::IsNull(__o_min)) min = 0;
            	HX_STACKFRAME(&_hx_pos_5219dbffa78c3f46_97_numberArray)
HXLINE(  98)		::Array< int > dumbArray = ::Array_obj< int >::__new(0);
HXLINE(  99)		{
HXLINE(  99)			int _g = ( (int)(min) );
HXDLIN(  99)			int _g1 = max;
HXDLIN(  99)			while((_g < _g1)){
HXLINE(  99)				_g = (_g + 1);
HXDLIN(  99)				int i = (_g - 1);
HXLINE( 101)				dumbArray->push(i);
            			}
            		}
HXLINE( 103)		return dumbArray;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CoolUtil_obj,numberArray,return )


CoolUtil_obj::CoolUtil_obj()
{
}

bool CoolUtil_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"dashToSpace") ) { outValue = dashToSpace_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"spaceToDash") ) { outValue = spaceToDash_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"numberArray") ) { outValue = numberArray_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"coolTextFile") ) { outValue = coolTextFile_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"swapSpaceDash") ) { outValue = swapSpaceDash_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"difficultyArray") ) { outValue = ( difficultyArray ); return true; }
		if (HX_FIELD_EQ(inName,"getAnimsFromTxt") ) { outValue = getAnimsFromTxt_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"difficultyLength") ) { outValue = ( difficultyLength ); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"getOffsetsFromTxt") ) { outValue = getOffsetsFromTxt_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"returnAssetsLibrary") ) { outValue = returnAssetsLibrary_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"difficultyFromNumber") ) { outValue = difficultyFromNumber_dyn(); return true; }
	}
	return false;
}

bool CoolUtil_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 15:
		if (HX_FIELD_EQ(inName,"difficultyArray") ) { difficultyArray=ioValue.Cast< ::Array< ::String > >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"difficultyLength") ) { difficultyLength=ioValue.Cast< int >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *CoolUtil_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo CoolUtil_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /* ::Array< ::String > */ ,(void *) &CoolUtil_obj::difficultyArray,HX_("difficultyArray",5e,19,a2,bb)},
	{::hx::fsInt,(void *) &CoolUtil_obj::difficultyLength,HX_("difficultyLength",81,35,4b,59)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void CoolUtil_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CoolUtil_obj::difficultyArray,"difficultyArray");
	HX_MARK_MEMBER_NAME(CoolUtil_obj::difficultyLength,"difficultyLength");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CoolUtil_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CoolUtil_obj::difficultyArray,"difficultyArray");
	HX_VISIT_MEMBER_NAME(CoolUtil_obj::difficultyLength,"difficultyLength");
};

#endif

::hx::Class CoolUtil_obj::__mClass;

static ::String CoolUtil_obj_sStaticFields[] = {
	HX_("difficultyArray",5e,19,a2,bb),
	HX_("difficultyLength",81,35,4b,59),
	HX_("difficultyFromNumber",ee,15,6e,d8),
	HX_("dashToSpace",19,da,45,4d),
	HX_("spaceToDash",d3,99,22,25),
	HX_("swapSpaceDash",25,34,52,f0),
	HX_("coolTextFile",b2,09,03,cc),
	HX_("getOffsetsFromTxt",bc,3c,3f,06),
	HX_("returnAssetsLibrary",e8,e9,3c,33),
	HX_("getAnimsFromTxt",ba,7f,57,f2),
	HX_("numberArray",10,1e,18,ad),
	::String(null())
};

void CoolUtil_obj::__register()
{
	CoolUtil_obj _hx_dummy;
	CoolUtil_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("meta.CoolUtil",54,26,4a,95);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CoolUtil_obj::__GetStatic;
	__mClass->mSetStaticField = &CoolUtil_obj::__SetStatic;
	__mClass->mMarkFunc = CoolUtil_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(CoolUtil_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< CoolUtil_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CoolUtil_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CoolUtil_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CoolUtil_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void CoolUtil_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_5219dbffa78c3f46_15_boot)
HXDLIN(  15)		difficultyArray = ::Array_obj< ::String >::fromData( _hx_array_data_954a2654_15,3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5219dbffa78c3f46_16_boot)
HXDLIN(  16)		difficultyLength = ::meta::CoolUtil_obj::difficultyArray->length;
            	}
}

} // end namespace meta
