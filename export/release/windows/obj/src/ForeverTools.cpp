// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_ForeverTools
#include <ForeverTools.h>
#endif
#ifndef INCLUDED_Init
#include <Init.h>
#endif
#ifndef INCLUDED_Paths
#include <Paths.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSound
#include <flixel/system/FlxSound.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSoundGroup
#include <flixel/system/FlxSoundGroup.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_SoundFrontEnd
#include <flixel/system/frontEnds/SoundFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_NumTween
#include <flixel/tweens/misc/NumTween.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_meta_data_Conductor
#include <meta/data/Conductor.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_media_SoundChannel
#include <openfl/media/SoundChannel.h>
#endif
#ifndef INCLUDED_openfl_utils_Assets
#include <openfl/utils/Assets.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_ef8989507f153633_18_resetMenuMusic,"ForeverTools","resetMenuMusic",0x61d7e7d1,"ForeverTools.resetMenuMusic","ForeverTools.hx",18,0x0300e52a)
HX_LOCAL_STACK_FRAME(_hx_pos_ef8989507f153633_32_returnSkinAsset,"ForeverTools","returnSkinAsset",0x320cf109,"ForeverTools.returnSkinAsset","ForeverTools.hx",32,0x0300e52a)
HX_LOCAL_STACK_FRAME(_hx_pos_ef8989507f153633_47_killMusic,"ForeverTools","killMusic",0x5b5d514d,"ForeverTools.killMusic","ForeverTools.hx",47,0x0300e52a)

void ForeverTools_obj::__construct() { }

Dynamic ForeverTools_obj::__CreateEmpty() { return new ForeverTools_obj; }

void *ForeverTools_obj::_hx_vtable = 0;

Dynamic ForeverTools_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ForeverTools_obj > _hx_result = new ForeverTools_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ForeverTools_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x03ea039c;
}

void ForeverTools_obj::resetMenuMusic(::hx::Null< bool >  __o_resetVolume){
            		bool resetVolume = __o_resetVolume.Default(false);
            	HX_STACKFRAME(&_hx_pos_ef8989507f153633_18_resetMenuMusic)
HXDLIN(  18)		bool _hx_tmp;
HXDLIN(  18)		bool _hx_tmp1;
HXDLIN(  18)		if (::hx::IsNotNull( ::flixel::FlxG_obj::sound->music )) {
HXDLIN(  18)			_hx_tmp1 = ::hx::IsNull( ::flixel::FlxG_obj::sound->music->_channel );
            		}
            		else {
HXDLIN(  18)			_hx_tmp1 = false;
            		}
HXDLIN(  18)		if (!(_hx_tmp1)) {
HXDLIN(  18)			_hx_tmp = ::hx::IsNull( ::flixel::FlxG_obj::sound->music );
            		}
            		else {
HXDLIN(  18)			_hx_tmp = true;
            		}
HXDLIN(  18)		if (_hx_tmp) {
HXLINE(  20)			::String song;
HXDLIN(  20)			if (( (bool)(::Init_obj::trueSettings->get(HX_("Custom Titlescreen",15,d0,ce,87))) )) {
HXLINE(  20)				::String library = null();
HXDLIN(  20)				song = ::Paths_obj::getPath((((HX_("music/",ea,bf,1b,3f) + HX_("foreverMenu",e6,3f,21,9d)) + HX_(".",2e,00,00,00)) + HX_("ogg",4f,94,54,00)),HX_("MUSIC",85,08,49,8e),library);
            			}
            			else {
HXLINE(  20)				::String library = null();
HXDLIN(  20)				song = ::Paths_obj::getPath((((HX_("music/",ea,bf,1b,3f) + HX_("freakyMenu",15,c9,93,86)) + HX_(".",2e,00,00,00)) + HX_("ogg",4f,94,54,00)),HX_("MUSIC",85,08,49,8e),library);
            			}
HXLINE(  21)			Float _hx_tmp;
HXDLIN(  21)			if (resetVolume) {
HXLINE(  21)				_hx_tmp = ( (Float)(0) );
            			}
            			else {
HXLINE(  21)				_hx_tmp = ((Float)0.7);
            			}
HXDLIN(  21)			::flixel::FlxG_obj::sound->playMusic(song,_hx_tmp,null(),null());
HXLINE(  22)			if (resetVolume) {
HXLINE(  23)				 ::flixel::_hx_system::FlxSound _this = ::flixel::FlxG_obj::sound->music;
HXDLIN(  23)				 ::Dynamic onComplete = null();
HXDLIN(  23)				if (::hx::IsNull( _this->_channel )) {
HXLINE(  23)					_this->play(null(),null(),null());
            				}
HXDLIN(  23)				if (::hx::IsNotNull( _this->fadeTween )) {
HXLINE(  23)					_this->fadeTween->cancel();
            				}
HXDLIN(  23)				_this->fadeTween = ::flixel::tweens::FlxTween_obj::num(( (Float)(0) ),((Float)0.7),4, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("onComplete",f8,d4,7e,5d),onComplete)),_this->volumeTween_dyn());
            			}
HXLINE(  25)			::meta::data::Conductor_obj::changeBPM(( (Float)(102) ),null());
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ForeverTools_obj,resetMenuMusic,(void))

::String ForeverTools_obj::returnSkinAsset(::String asset,::String __o_assetModifier,::String __o_changeableSkin,::String baseLibrary,::String __o_defaultChangeableSkin,::String __o_defaultBaseAsset){
            		::String assetModifier = __o_assetModifier;
            		if (::hx::IsNull(__o_assetModifier)) assetModifier = HX_("base",11,e8,10,41);
            		::String changeableSkin = __o_changeableSkin;
            		if (::hx::IsNull(__o_changeableSkin)) changeableSkin = HX_("default",c1,d8,c3,9b);
            		::String defaultChangeableSkin = __o_defaultChangeableSkin;
            		if (::hx::IsNull(__o_defaultChangeableSkin)) defaultChangeableSkin = HX_("default",c1,d8,c3,9b);
            		::String defaultBaseAsset = __o_defaultBaseAsset;
            		if (::hx::IsNull(__o_defaultBaseAsset)) defaultBaseAsset = HX_("base",11,e8,10,41);
            	HX_STACKFRAME(&_hx_pos_ef8989507f153633_32_returnSkinAsset)
HXLINE(  33)		::String realAsset = (((((((HX_("",00,00,00,00) + baseLibrary) + HX_("/",2f,00,00,00)) + changeableSkin) + HX_("/",2f,00,00,00)) + assetModifier) + HX_("/",2f,00,00,00)) + asset);
HXLINE(  34)		::String library = null();
HXDLIN(  34)		if (!(::openfl::utils::Assets_obj::exists(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + realAsset) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null()))) {
HXLINE(  36)			realAsset = (((((((HX_("",00,00,00,00) + baseLibrary) + HX_("/",2f,00,00,00)) + defaultChangeableSkin) + HX_("/",2f,00,00,00)) + assetModifier) + HX_("/",2f,00,00,00)) + asset);
HXLINE(  37)			::String library = null();
HXDLIN(  37)			if (!(::openfl::utils::Assets_obj::exists(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + realAsset) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null()))) {
HXLINE(  38)				realAsset = (((((((HX_("",00,00,00,00) + baseLibrary) + HX_("/",2f,00,00,00)) + defaultChangeableSkin) + HX_("/",2f,00,00,00)) + defaultBaseAsset) + HX_("/",2f,00,00,00)) + asset);
            			}
            		}
HXLINE(  41)		return realAsset;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(ForeverTools_obj,returnSkinAsset,return )

void ForeverTools_obj::killMusic(::Array< ::Dynamic> songsArray){
            	HX_STACKFRAME(&_hx_pos_ef8989507f153633_47_killMusic)
HXDLIN(  47)		int _g = 0;
HXDLIN(  47)		int _g1 = songsArray->length;
HXDLIN(  47)		while((_g < _g1)){
HXDLIN(  47)			_g = (_g + 1);
HXDLIN(  47)			int i = (_g - 1);
HXLINE(  50)			{
HXLINE(  50)				 ::flixel::_hx_system::FlxSound _this = songsArray->__get(i).StaticCast<  ::flixel::_hx_system::FlxSound >();
HXDLIN(  50)				_this->cleanup(_this->autoDestroy,true);
            			}
HXLINE(  51)			songsArray->__get(i).StaticCast<  ::flixel::_hx_system::FlxSound >()->destroy();
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ForeverTools_obj,killMusic,(void))


ForeverTools_obj::ForeverTools_obj()
{
}

bool ForeverTools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"killMusic") ) { outValue = killMusic_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"resetMenuMusic") ) { outValue = resetMenuMusic_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"returnSkinAsset") ) { outValue = returnSkinAsset_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ForeverTools_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *ForeverTools_obj_sStaticStorageInfo = 0;
#endif

::hx::Class ForeverTools_obj::__mClass;

static ::String ForeverTools_obj_sStaticFields[] = {
	HX_("resetMenuMusic",b7,9e,a3,05),
	HX_("returnSkinAsset",63,43,81,e0),
	HX_("killMusic",27,04,b9,fd),
	::String(null())
};

void ForeverTools_obj::__register()
{
	ForeverTools_obj _hx_dummy;
	ForeverTools_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ForeverTools",14,e2,73,b6);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ForeverTools_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ForeverTools_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< ForeverTools_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ForeverTools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ForeverTools_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

