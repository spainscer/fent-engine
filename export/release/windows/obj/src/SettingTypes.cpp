// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_SettingTypes
#include <SettingTypes.h>
#endif

::SettingTypes SettingTypes_obj::Checkmark;

::SettingTypes SettingTypes_obj::Selector;

bool SettingTypes_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Checkmark",b5,bc,2f,53)) { outValue = SettingTypes_obj::Checkmark; return true; }
	if (inName==HX_("Selector",3f,ef,1e,8b)) { outValue = SettingTypes_obj::Selector; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(SettingTypes_obj)

int SettingTypes_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Checkmark",b5,bc,2f,53)) return 0;
	if (inName==HX_("Selector",3f,ef,1e,8b)) return 1;
	return super::__FindIndex(inName);
}

int SettingTypes_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Checkmark",b5,bc,2f,53)) return 0;
	if (inName==HX_("Selector",3f,ef,1e,8b)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val SettingTypes_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Checkmark",b5,bc,2f,53)) return Checkmark;
	if (inName==HX_("Selector",3f,ef,1e,8b)) return Selector;
	return super::__Field(inName,inCallProp);
}

static ::String SettingTypes_obj_sStaticFields[] = {
	HX_("Checkmark",b5,bc,2f,53),
	HX_("Selector",3f,ef,1e,8b),
	::String(null())
};

::hx::Class SettingTypes_obj::__mClass;

Dynamic __Create_SettingTypes_obj() { return new SettingTypes_obj; }

void SettingTypes_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("SettingTypes",e9,a0,97,10), ::hx::TCanCast< SettingTypes_obj >,SettingTypes_obj_sStaticFields,0,
	&__Create_SettingTypes_obj, &__Create,
	&super::__SGetClass(), &CreateSettingTypes_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &SettingTypes_obj::__GetStatic;
}

void SettingTypes_obj::__boot()
{
Checkmark = ::hx::CreateConstEnum< SettingTypes_obj >(HX_("Checkmark",b5,bc,2f,53),0);
Selector = ::hx::CreateConstEnum< SettingTypes_obj >(HX_("Selector",3f,ef,1e,8b),1);
}


