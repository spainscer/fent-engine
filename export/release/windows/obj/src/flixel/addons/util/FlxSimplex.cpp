// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_addons_util_FlxSimplex
#include <flixel/addons/util/FlxSimplex.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_331c5b38a3cfaeb4_73_simplexTiles,"flixel.addons.util.FlxSimplex","simplexTiles",0x18e4a756,"flixel.addons.util.FlxSimplex.simplexTiles","flixel/addons/util/FlxSimplex.hx",73,0x2a6e6586)
HX_LOCAL_STACK_FRAME(_hx_pos_331c5b38a3cfaeb4_113_simplexOctaves,"flixel.addons.util.FlxSimplex","simplexOctaves",0xfb609594,"flixel.addons.util.FlxSimplex.simplexOctaves","flixel/addons/util/FlxSimplex.hx",113,0x2a6e6586)
HX_LOCAL_STACK_FRAME(_hx_pos_331c5b38a3cfaeb4_138_simplex,"flixel.addons.util.FlxSimplex","simplex",0x67aa0baf,"flixel.addons.util.FlxSimplex.simplex","flixel/addons/util/FlxSimplex.hx",138,0x2a6e6586)
HX_LOCAL_STACK_FRAME(_hx_pos_331c5b38a3cfaeb4_182_getCornerNoise,"flixel.addons.util.FlxSimplex","getCornerNoise",0x5ebae206,"flixel.addons.util.FlxSimplex.getCornerNoise","flixel/addons/util/FlxSimplex.hx",182,0x2a6e6586)
HX_LOCAL_STACK_FRAME(_hx_pos_331c5b38a3cfaeb4_221_simplex4D,"flixel.addons.util.FlxSimplex","simplex4D",0x2f07c2ff,"flixel.addons.util.FlxSimplex.simplex4D","flixel/addons/util/FlxSimplex.hx",221,0x2a6e6586)
HX_LOCAL_STACK_FRAME(_hx_pos_331c5b38a3cfaeb4_272_getCornerNoise4D,"flixel.addons.util.FlxSimplex","getCornerNoise4D",0xacbc1d16,"flixel.addons.util.FlxSimplex.getCornerNoise4D","flixel/addons/util/FlxSimplex.hx",272,0x2a6e6586)
HX_LOCAL_STACK_FRAME(_hx_pos_331c5b38a3cfaeb4_10_boot,"flixel.addons.util.FlxSimplex","boot",0x5c852ce9,"flixel.addons.util.FlxSimplex.boot","flixel/addons/util/FlxSimplex.hx",10,0x2a6e6586)
HX_LOCAL_STACK_FRAME(_hx_pos_331c5b38a3cfaeb4_11_boot,"flixel.addons.util.FlxSimplex","boot",0x5c852ce9,"flixel.addons.util.FlxSimplex.boot","flixel/addons/util/FlxSimplex.hx",11,0x2a6e6586)
HX_LOCAL_STACK_FRAME(_hx_pos_331c5b38a3cfaeb4_13_boot,"flixel.addons.util.FlxSimplex","boot",0x5c852ce9,"flixel.addons.util.FlxSimplex.boot","flixel/addons/util/FlxSimplex.hx",13,0x2a6e6586)
HX_LOCAL_STACK_FRAME(_hx_pos_331c5b38a3cfaeb4_14_boot,"flixel.addons.util.FlxSimplex","boot",0x5c852ce9,"flixel.addons.util.FlxSimplex.boot","flixel/addons/util/FlxSimplex.hx",14,0x2a6e6586)
HX_LOCAL_STACK_FRAME(_hx_pos_331c5b38a3cfaeb4_16_boot,"flixel.addons.util.FlxSimplex","boot",0x5c852ce9,"flixel.addons.util.FlxSimplex.boot","flixel/addons/util/FlxSimplex.hx",16,0x2a6e6586)
static const int _hx_array_data_c3197317_13[] = {
	(int)151,(int)160,(int)137,(int)91,(int)90,(int)15,(int)131,(int)13,(int)201,(int)95,(int)96,(int)53,(int)194,(int)233,(int)7,(int)225,(int)140,(int)36,(int)103,(int)30,(int)69,(int)142,(int)8,(int)99,(int)37,(int)240,(int)21,(int)10,(int)23,(int)190,(int)6,(int)148,(int)247,(int)120,(int)234,(int)75,(int)0,(int)26,(int)197,(int)62,(int)94,(int)252,(int)219,(int)203,(int)117,(int)35,(int)11,(int)32,(int)57,(int)177,(int)33,(int)88,(int)237,(int)149,(int)56,(int)87,(int)174,(int)20,(int)125,(int)136,(int)171,(int)168,(int)68,(int)175,(int)74,(int)165,(int)71,(int)134,(int)139,(int)48,(int)27,(int)166,(int)77,(int)146,(int)158,(int)231,(int)83,(int)111,(int)229,(int)122,(int)60,(int)211,(int)133,(int)230,(int)220,(int)105,(int)92,(int)41,(int)55,(int)46,(int)245,(int)40,(int)244,(int)102,(int)143,(int)54,(int)65,(int)25,(int)63,(int)161,(int)1,(int)216,(int)80,(int)73,(int)209,(int)76,(int)132,(int)187,(int)208,(int)89,(int)18,(int)169,(int)200,(int)196,(int)135,(int)130,(int)116,(int)188,(int)159,(int)86,(int)164,(int)100,(int)109,(int)198,(int)173,(int)186,(int)3,(int)64,(int)52,(int)217,(int)226,(int)250,(int)124,(int)123,(int)5,(int)202,(int)38,(int)147,(int)118,(int)126,(int)255,(int)82,(int)85,(int)212,(int)207,(int)206,(int)59,(int)227,(int)47,(int)16,(int)58,(int)17,(int)182,(int)189,(int)28,(int)42,(int)223,(int)183,(int)170,(int)213,(int)119,(int)248,(int)152,(int)2,(int)44,(int)154,(int)163,(int)70,(int)221,(int)153,(int)101,(int)155,(int)167,(int)43,(int)172,(int)9,(int)129,(int)22,(int)39,(int)253,(int)19,(int)98,(int)108,(int)110,(int)79,(int)113,(int)224,(int)232,(int)178,(int)185,(int)112,(int)104,(int)218,(int)246,(int)97,(int)228,(int)251,(int)34,(int)242,(int)193,(int)238,(int)210,(int)144,(int)12,(int)191,(int)179,(int)162,(int)241,(int)81,(int)51,(int)145,(int)235,(int)249,(int)14,(int)239,(int)107,(int)49,(int)192,(int)214,(int)31,(int)181,(int)199,(int)106,(int)157,(int)184,(int)84,(int)204,(int)176,(int)115,(int)121,(int)50,(int)45,(int)127,(int)4,(int)150,(int)254,(int)138,(int)236,(int)205,(int)93,(int)222,(int)114,(int)67,(int)29,(int)24,(int)72,(int)243,(int)141,(int)128,(int)195,(int)78,(int)66,(int)215,(int)61,(int)156,(int)180,(int)151,(int)160,(int)137,(int)91,(int)90,(int)15,(int)131,(int)13,(int)201,(int)95,(int)96,(int)53,(int)194,(int)233,(int)7,(int)225,(int)140,(int)36,(int)103,(int)30,(int)69,(int)142,(int)8,(int)99,(int)37,(int)240,(int)21,(int)10,(int)23,(int)190,(int)6,(int)148,(int)247,(int)120,(int)234,(int)75,(int)0,(int)26,(int)197,(int)62,(int)94,(int)252,(int)219,(int)203,(int)117,(int)35,(int)11,(int)32,(int)57,(int)177,(int)33,(int)88,(int)237,(int)149,(int)56,(int)87,(int)174,(int)20,(int)125,(int)136,(int)171,(int)168,(int)68,(int)175,(int)74,(int)165,(int)71,(int)134,(int)139,(int)48,(int)27,(int)166,(int)77,(int)146,(int)158,(int)231,(int)83,(int)111,(int)229,(int)122,(int)60,(int)211,(int)133,(int)230,(int)220,(int)105,(int)92,(int)41,(int)55,(int)46,(int)245,(int)40,(int)244,(int)102,(int)143,(int)54,(int)65,(int)25,(int)63,(int)161,(int)1,(int)216,(int)80,(int)73,(int)209,(int)76,(int)132,(int)187,(int)208,(int)89,(int)18,(int)169,(int)200,(int)196,(int)135,(int)130,(int)116,(int)188,(int)159,(int)86,(int)164,(int)100,(int)109,(int)198,(int)173,(int)186,(int)3,(int)64,(int)52,(int)217,(int)226,(int)250,(int)124,(int)123,(int)5,(int)202,(int)38,(int)147,(int)118,(int)126,(int)255,(int)82,(int)85,(int)212,(int)207,(int)206,(int)59,(int)227,(int)47,(int)16,(int)58,(int)17,(int)182,(int)189,(int)28,(int)42,(int)223,(int)183,(int)170,(int)213,(int)119,(int)248,(int)152,(int)2,(int)44,(int)154,(int)163,(int)70,(int)221,(int)153,(int)101,(int)155,(int)167,(int)43,(int)172,(int)9,(int)129,(int)22,(int)39,(int)253,(int)19,(int)98,(int)108,(int)110,(int)79,(int)113,(int)224,(int)232,(int)178,(int)185,(int)112,(int)104,(int)218,(int)246,(int)97,(int)228,(int)251,(int)34,(int)242,(int)193,(int)238,(int)210,(int)144,(int)12,(int)191,(int)179,(int)162,(int)241,(int)81,(int)51,(int)145,(int)235,(int)249,(int)14,(int)239,(int)107,(int)49,(int)192,(int)214,(int)31,(int)181,(int)199,(int)106,(int)157,(int)184,(int)84,(int)204,(int)176,(int)115,(int)121,(int)50,(int)45,(int)127,(int)4,(int)150,(int)254,(int)138,(int)236,(int)205,(int)93,(int)222,(int)114,(int)67,(int)29,(int)24,(int)72,(int)243,(int)141,(int)128,(int)195,(int)78,(int)66,(int)215,(int)61,(int)156,(int)180,
};
HX_LOCAL_STACK_FRAME(_hx_pos_331c5b38a3cfaeb4_35_boot,"flixel.addons.util.FlxSimplex","boot",0x5c852ce9,"flixel.addons.util.FlxSimplex.boot","flixel/addons/util/FlxSimplex.hx",35,0x2a6e6586)
static const int _hx_array_data_c3197317_15[] = {
	(int)3,(int)2,(int)1,(int)0,
};
static const int _hx_array_data_c3197317_16[] = {
	(int)2,(int)3,(int)1,(int)0,
};
static const int _hx_array_data_c3197317_17[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_18[] = {
	(int)2,(int)1,(int)3,(int)0,
};
static const int _hx_array_data_c3197317_19[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_20[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_21[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_22[] = {
	(int)2,(int)1,(int)0,(int)3,
};
static const int _hx_array_data_c3197317_23[] = {
	(int)3,(int)1,(int)2,(int)0,
};
static const int _hx_array_data_c3197317_24[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_25[] = {
	(int)1,(int)3,(int)2,(int)0,
};
static const int _hx_array_data_c3197317_26[] = {
	(int)1,(int)2,(int)3,(int)0,
};
static const int _hx_array_data_c3197317_27[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_28[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_29[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_30[] = {
	(int)1,(int)2,(int)0,(int)3,
};
static const int _hx_array_data_c3197317_31[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_32[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_33[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_34[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_35[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_36[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_37[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_38[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_39[] = {
	(int)3,(int)1,(int)0,(int)2,
};
static const int _hx_array_data_c3197317_40[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_41[] = {
	(int)1,(int)3,(int)0,(int)2,
};
static const int _hx_array_data_c3197317_42[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_43[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_44[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_45[] = {
	(int)1,(int)0,(int)3,(int)2,
};
static const int _hx_array_data_c3197317_46[] = {
	(int)1,(int)0,(int)2,(int)3,
};
static const int _hx_array_data_c3197317_47[] = {
	(int)3,(int)2,(int)0,(int)1,
};
static const int _hx_array_data_c3197317_48[] = {
	(int)2,(int)3,(int)0,(int)1,
};
static const int _hx_array_data_c3197317_49[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_50[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_51[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_52[] = {
	(int)2,(int)0,(int)3,(int)1,
};
static const int _hx_array_data_c3197317_53[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_54[] = {
	(int)2,(int)0,(int)1,(int)3,
};
static const int _hx_array_data_c3197317_55[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_56[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_57[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_58[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_59[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_60[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_61[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_62[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_63[] = {
	(int)3,(int)0,(int)2,(int)1,
};
static const int _hx_array_data_c3197317_64[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_65[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_66[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_67[] = {
	(int)0,(int)3,(int)2,(int)1,
};
static const int _hx_array_data_c3197317_68[] = {
	(int)0,(int)2,(int)3,(int)1,
};
static const int _hx_array_data_c3197317_69[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_70[] = {
	(int)0,(int)2,(int)1,(int)3,
};
static const int _hx_array_data_c3197317_71[] = {
	(int)3,(int)0,(int)1,(int)2,
};
static const int _hx_array_data_c3197317_72[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_73[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_74[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_75[] = {
	(int)0,(int)3,(int)1,(int)2,
};
static const int _hx_array_data_c3197317_76[] = {
	(int)0,(int)0,(int)0,(int)0,
};
static const int _hx_array_data_c3197317_77[] = {
	(int)0,(int)1,(int)3,(int)2,
};
static const int _hx_array_data_c3197317_78[] = {
	(int)0,(int)1,(int)2,(int)3,
};
HX_LOCAL_STACK_FRAME(_hx_pos_331c5b38a3cfaeb4_56_boot,"flixel.addons.util.FlxSimplex","boot",0x5c852ce9,"flixel.addons.util.FlxSimplex.boot","flixel/addons/util/FlxSimplex.hx",56,0x2a6e6586)
static const int _hx_array_data_c3197317_80[] = {
	(int)0,(int)0,(int)0,(int)0,
};
namespace flixel{
namespace addons{
namespace util{

void FlxSimplex_obj::__construct() { }

Dynamic FlxSimplex_obj::__CreateEmpty() { return new FlxSimplex_obj; }

void *FlxSimplex_obj::_hx_vtable = 0;

Dynamic FlxSimplex_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FlxSimplex_obj > _hx_result = new FlxSimplex_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FlxSimplex_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5e39a0e5;
}

Float FlxSimplex_obj::SKEW;

Float FlxSimplex_obj::UNSKEW;

Float FlxSimplex_obj::SKEW_4D;

Float FlxSimplex_obj::UNSKEW_4D;

::Array< int > FlxSimplex_obj::p;

::Array< ::Dynamic> FlxSimplex_obj::cells4D;

int FlxSimplex_obj::i;

int FlxSimplex_obj::j;

int FlxSimplex_obj::k;

int FlxSimplex_obj::l;

Float FlxSimplex_obj::x0;

Float FlxSimplex_obj::y0;

Float FlxSimplex_obj::z0;

Float FlxSimplex_obj::w0;

::Array< int > FlxSimplex_obj::A2;

Float FlxSimplex_obj::simplexTiles(Float x,Float y,Float baseX,Float baseY,Float seed,::hx::Null< Float >  __o_scale,::hx::Null< Float >  __o_persistence,::hx::Null< int >  __o_octaves){
            		Float scale = __o_scale.Default(1);
            		Float persistence = __o_persistence.Default(1);
            		int octaves = __o_octaves.Default(1);
            	HX_STACKFRAME(&_hx_pos_331c5b38a3cfaeb4_73_simplexTiles)
HXLINE(  74)		bool _hx_tmp;
HXDLIN(  74)		if (!((baseX <= 0))) {
HXLINE(  74)			_hx_tmp = (baseY <= 0);
            		}
            		else {
HXLINE(  74)			_hx_tmp = true;
            		}
HXDLIN(  74)		if (_hx_tmp) {
HXLINE(  75)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("baseX and baseY must be greater than 0.",57,20,e0,c1)));
            		}
HXLINE(  77)		if ((octaves < 1)) {
HXLINE(  78)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("The number of octaves must be greater than 0.",53,4b,87,a6)));
            		}
HXLINE(  80)		Float xx = (((x / baseX) * ( (Float)(2) )) * ::Math_obj::PI);
HXDLIN(  80)		Float yy = (((y / baseY) * ( (Float)(2) )) * ::Math_obj::PI);
HXLINE(  81)		Float xtile = (( (Float)(::Std_obj::_hx_int((x / baseX))) ) * baseX);
HXLINE(  82)		Float ytile = (( (Float)(::Std_obj::_hx_int((y / baseY))) ) * baseY);
HXLINE(  84)		Float nx = ((::Math_obj::cos(xx) * baseX) / ::Math_obj::PI);
HXLINE(  85)		Float ny = ((::Math_obj::cos(yy) * baseY) / ::Math_obj::PI);
HXLINE(  86)		Float nz = ((::Math_obj::sin(xx) * baseX) / ::Math_obj::PI);
HXLINE(  87)		Float nw = ((::Math_obj::sin(yy) * baseY) / ::Math_obj::PI);
HXLINE(  89)		Float max = ( (Float)(0) );
HXDLIN(  89)		Float amp = ( (Float)(1) );
HXDLIN(  89)		Float n = ( (Float)(0) );
HXLINE(  91)		{
HXLINE(  91)			int _g = 0;
HXDLIN(  91)			int _g1 = octaves;
HXDLIN(  91)			while((_g < _g1)){
HXLINE(  91)				_g = (_g + 1);
HXDLIN(  91)				int i = (_g - 1);
HXLINE(  93)				Float x = (seed + (nx * scale));
HXDLIN(  93)				Float y = (seed + (ny * scale));
HXDLIN(  93)				Float z = (seed + (nz * scale));
HXDLIN(  93)				Float w = (seed + (nw * scale));
HXDLIN(  93)				Float t = ((((x + y) + z) + w) * ((Float)0.309016994));
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::i = ::Math_obj::floor((x + t));
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::j = ::Math_obj::floor((y + t));
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::k = ::Math_obj::floor((z + t));
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::l = ::Math_obj::floor((w + t));
HXDLIN(  93)				t = (( (Float)((((::flixel::addons::util::FlxSimplex_obj::i + ::flixel::addons::util::FlxSimplex_obj::j) + ::flixel::addons::util::FlxSimplex_obj::k) + ::flixel::addons::util::FlxSimplex_obj::l)) ) * ((Float)0.138196601));
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::x0 = ((x - ( (Float)(::flixel::addons::util::FlxSimplex_obj::i) )) + t);
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::y0 = ((y - ( (Float)(::flixel::addons::util::FlxSimplex_obj::j) )) + t);
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::z0 = ((z - ( (Float)(::flixel::addons::util::FlxSimplex_obj::k) )) + t);
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::w0 = ((w - ( (Float)(::flixel::addons::util::FlxSimplex_obj::l) )) + t);
HXDLIN(  93)				int c0;
HXDLIN(  93)				if ((::flixel::addons::util::FlxSimplex_obj::x0 > ::flixel::addons::util::FlxSimplex_obj::y0)) {
HXLINE(  93)					c0 = 32;
            				}
            				else {
HXLINE(  93)					c0 = 0;
            				}
HXDLIN(  93)				int c1;
HXDLIN(  93)				if ((::flixel::addons::util::FlxSimplex_obj::x0 > ::flixel::addons::util::FlxSimplex_obj::z0)) {
HXLINE(  93)					c1 = 16;
            				}
            				else {
HXLINE(  93)					c1 = 0;
            				}
HXDLIN(  93)				int c2;
HXDLIN(  93)				if ((::flixel::addons::util::FlxSimplex_obj::y0 > ::flixel::addons::util::FlxSimplex_obj::z0)) {
HXLINE(  93)					c2 = 8;
            				}
            				else {
HXLINE(  93)					c2 = 0;
            				}
HXDLIN(  93)				int c3;
HXDLIN(  93)				if ((::flixel::addons::util::FlxSimplex_obj::x0 > ::flixel::addons::util::FlxSimplex_obj::w0)) {
HXLINE(  93)					c3 = 4;
            				}
            				else {
HXLINE(  93)					c3 = 0;
            				}
HXDLIN(  93)				int c4;
HXDLIN(  93)				if ((::flixel::addons::util::FlxSimplex_obj::y0 > ::flixel::addons::util::FlxSimplex_obj::w0)) {
HXLINE(  93)					c4 = 2;
            				}
            				else {
HXLINE(  93)					c4 = 0;
            				}
HXDLIN(  93)				int c5;
HXDLIN(  93)				if ((::flixel::addons::util::FlxSimplex_obj::z0 > ::flixel::addons::util::FlxSimplex_obj::w0)) {
HXLINE(  93)					c5 = 1;
            				}
            				else {
HXLINE(  93)					c5 = 0;
            				}
HXDLIN(  93)				::Array< int > cell = ::flixel::addons::util::FlxSimplex_obj::cells4D->__get((((((c0 + c1) + c2) + c3) + c4) + c5)).StaticCast< ::Array< int > >();
HXDLIN(  93)				{
HXLINE(  93)					int i1 = (::flixel::addons::util::FlxSimplex_obj::A2[3] = 0);
HXDLIN(  93)					int i2 = (::flixel::addons::util::FlxSimplex_obj::A2[2] = i1);
HXDLIN(  93)					int i3 = (::flixel::addons::util::FlxSimplex_obj::A2[1] = i2);
HXDLIN(  93)					::flixel::addons::util::FlxSimplex_obj::A2[0] = i3;
            				}
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::i = (::flixel::addons::util::FlxSimplex_obj::i & 255);
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::j = (::flixel::addons::util::FlxSimplex_obj::j & 255);
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::k = (::flixel::addons::util::FlxSimplex_obj::k & 255);
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::l = (::flixel::addons::util::FlxSimplex_obj::l & 255);
HXDLIN(  93)				Float s = (( (Float)((((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(3))) ) * ((Float)0.138196601));
HXDLIN(  93)				Float x1 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s);
HXDLIN(  93)				Float y1 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s);
HXDLIN(  93)				Float z1 = ((::flixel::addons::util::FlxSimplex_obj::z0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) )) + s);
HXDLIN(  93)				Float w1 = ((::flixel::addons::util::FlxSimplex_obj::w0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(3)) )) + s);
HXDLIN(  93)				Float t1 = ((((((Float).6) - (x1 * x1)) - (y1 * y1)) - (z1 * z1)) - (w1 * w1));
HXDLIN(  93)				int a2x = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN(  93)				int a2y = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN(  93)				int a2z = ::flixel::addons::util::FlxSimplex_obj::A2->__get(2);
HXDLIN(  93)				int a2w = ::flixel::addons::util::FlxSimplex_obj::A2->__get(3);
HXDLIN(  93)				int cell1 = cell->__get(0);
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::A2[cell1]++;
HXDLIN(  93)				Float out;
HXDLIN(  93)				if ((t1 < 0)) {
HXLINE(  93)					out = ( (Float)(0) );
            				}
            				else {
HXLINE(  93)					t1 = (t1 * t1);
HXDLIN(  93)					int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::j + a2y) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::k + a2z) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::l + a2w)))))))),32);
HXDLIN(  93)					bool b4 = (((h >> 4) & 1) == 1);
HXDLIN(  93)					bool b3 = (((h >> 3) & 1) == 1);
HXDLIN(  93)					bool b2 = (((h >> 2) & 1) == 1);
HXDLIN(  93)					bool b1 = (((h >> 1) & 1) == 1);
HXDLIN(  93)					bool b0 = ((h & 1) == 1);
HXDLIN(  93)					if (!(b3)) {
HXLINE(  93)						x1 = ( (Float)(0) );
            					}
            					else {
HXLINE(  93)						if (b2) {
HXLINE(  93)							x1 = -(x1);
            						}
            					}
HXDLIN(  93)					if (!(b4)) {
HXLINE(  93)						if (b3) {
HXLINE(  93)							y1 = ( (Float)(0) );
            						}
            						else {
HXLINE(  93)							if (b2) {
HXLINE(  93)								y1 = -(y1);
            							}
            						}
            					}
            					else {
HXLINE(  93)						if (b1) {
HXLINE(  93)							y1 = -(y1);
            						}
            					}
HXDLIN(  93)					if (b4) {
HXLINE(  93)						if (!(b3)) {
HXLINE(  93)							z1 = ( (Float)(0) );
            						}
            						else {
HXLINE(  93)							if (b0) {
HXLINE(  93)								z1 = -(z1);
            							}
            						}
            					}
            					else {
HXLINE(  93)						if (b1) {
HXLINE(  93)							z1 = -(z1);
            						}
            					}
HXDLIN(  93)					bool w;
HXDLIN(  93)					if (b4) {
HXLINE(  93)						w = b3;
            					}
            					else {
HXLINE(  93)						w = false;
            					}
HXDLIN(  93)					if (w) {
HXLINE(  93)						w1 = ( (Float)(0) );
            					}
            					else {
HXLINE(  93)						if (b0) {
HXLINE(  93)							w1 = -(w1);
            						}
            					}
HXDLIN(  93)					out = ((t1 * t1) * (((x1 + y1) + z1) + w1));
            				}
HXDLIN(  93)				Float s1 = (( (Float)((((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(3))) ) * ((Float)0.138196601));
HXDLIN(  93)				Float x2 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s1);
HXDLIN(  93)				Float y2 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s1);
HXDLIN(  93)				Float z2 = ((::flixel::addons::util::FlxSimplex_obj::z0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) )) + s1);
HXDLIN(  93)				Float w2 = ((::flixel::addons::util::FlxSimplex_obj::w0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(3)) )) + s1);
HXDLIN(  93)				Float t2 = ((((((Float).6) - (x2 * x2)) - (y2 * y2)) - (z2 * z2)) - (w2 * w2));
HXDLIN(  93)				int a2x1 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN(  93)				int a2y1 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN(  93)				int a2z1 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(2);
HXDLIN(  93)				int a2w1 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(3);
HXDLIN(  93)				int cell2 = cell->__get(1);
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::A2[cell2]++;
HXDLIN(  93)				Float out1;
HXDLIN(  93)				if ((t2 < 0)) {
HXLINE(  93)					out1 = ( (Float)(0) );
            				}
            				else {
HXLINE(  93)					t2 = (t2 * t2);
HXDLIN(  93)					int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x1) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::j + a2y1) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::k + a2z1) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::l + a2w1)))))))),32);
HXDLIN(  93)					bool b4 = (((h >> 4) & 1) == 1);
HXDLIN(  93)					bool b3 = (((h >> 3) & 1) == 1);
HXDLIN(  93)					bool b2 = (((h >> 2) & 1) == 1);
HXDLIN(  93)					bool b1 = (((h >> 1) & 1) == 1);
HXDLIN(  93)					bool b0 = ((h & 1) == 1);
HXDLIN(  93)					if (!(b3)) {
HXLINE(  93)						x2 = ( (Float)(0) );
            					}
            					else {
HXLINE(  93)						if (b2) {
HXLINE(  93)							x2 = -(x2);
            						}
            					}
HXDLIN(  93)					if (!(b4)) {
HXLINE(  93)						if (b3) {
HXLINE(  93)							y2 = ( (Float)(0) );
            						}
            						else {
HXLINE(  93)							if (b2) {
HXLINE(  93)								y2 = -(y2);
            							}
            						}
            					}
            					else {
HXLINE(  93)						if (b1) {
HXLINE(  93)							y2 = -(y2);
            						}
            					}
HXDLIN(  93)					if (b4) {
HXLINE(  93)						if (!(b3)) {
HXLINE(  93)							z2 = ( (Float)(0) );
            						}
            						else {
HXLINE(  93)							if (b0) {
HXLINE(  93)								z2 = -(z2);
            							}
            						}
            					}
            					else {
HXLINE(  93)						if (b1) {
HXLINE(  93)							z2 = -(z2);
            						}
            					}
HXDLIN(  93)					bool w;
HXDLIN(  93)					if (b4) {
HXLINE(  93)						w = b3;
            					}
            					else {
HXLINE(  93)						w = false;
            					}
HXDLIN(  93)					if (w) {
HXLINE(  93)						w2 = ( (Float)(0) );
            					}
            					else {
HXLINE(  93)						if (b0) {
HXLINE(  93)							w2 = -(w2);
            						}
            					}
HXDLIN(  93)					out1 = ((t2 * t2) * (((x2 + y2) + z2) + w2));
            				}
HXDLIN(  93)				Float s2 = (( (Float)((((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(3))) ) * ((Float)0.138196601));
HXDLIN(  93)				Float x3 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s2);
HXDLIN(  93)				Float y3 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s2);
HXDLIN(  93)				Float z3 = ((::flixel::addons::util::FlxSimplex_obj::z0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) )) + s2);
HXDLIN(  93)				Float w3 = ((::flixel::addons::util::FlxSimplex_obj::w0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(3)) )) + s2);
HXDLIN(  93)				Float t3 = ((((((Float).6) - (x3 * x3)) - (y3 * y3)) - (z3 * z3)) - (w3 * w3));
HXDLIN(  93)				int a2x2 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN(  93)				int a2y2 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN(  93)				int a2z2 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(2);
HXDLIN(  93)				int a2w2 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(3);
HXDLIN(  93)				int cell3 = cell->__get(2);
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::A2[cell3]++;
HXDLIN(  93)				Float out2;
HXDLIN(  93)				if ((t3 < 0)) {
HXLINE(  93)					out2 = ( (Float)(0) );
            				}
            				else {
HXLINE(  93)					t3 = (t3 * t3);
HXDLIN(  93)					int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x2) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::j + a2y2) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::k + a2z2) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::l + a2w2)))))))),32);
HXDLIN(  93)					bool b4 = (((h >> 4) & 1) == 1);
HXDLIN(  93)					bool b3 = (((h >> 3) & 1) == 1);
HXDLIN(  93)					bool b2 = (((h >> 2) & 1) == 1);
HXDLIN(  93)					bool b1 = (((h >> 1) & 1) == 1);
HXDLIN(  93)					bool b0 = ((h & 1) == 1);
HXDLIN(  93)					if (!(b3)) {
HXLINE(  93)						x3 = ( (Float)(0) );
            					}
            					else {
HXLINE(  93)						if (b2) {
HXLINE(  93)							x3 = -(x3);
            						}
            					}
HXDLIN(  93)					if (!(b4)) {
HXLINE(  93)						if (b3) {
HXLINE(  93)							y3 = ( (Float)(0) );
            						}
            						else {
HXLINE(  93)							if (b2) {
HXLINE(  93)								y3 = -(y3);
            							}
            						}
            					}
            					else {
HXLINE(  93)						if (b1) {
HXLINE(  93)							y3 = -(y3);
            						}
            					}
HXDLIN(  93)					if (b4) {
HXLINE(  93)						if (!(b3)) {
HXLINE(  93)							z3 = ( (Float)(0) );
            						}
            						else {
HXLINE(  93)							if (b0) {
HXLINE(  93)								z3 = -(z3);
            							}
            						}
            					}
            					else {
HXLINE(  93)						if (b1) {
HXLINE(  93)							z3 = -(z3);
            						}
            					}
HXDLIN(  93)					bool w;
HXDLIN(  93)					if (b4) {
HXLINE(  93)						w = b3;
            					}
            					else {
HXLINE(  93)						w = false;
            					}
HXDLIN(  93)					if (w) {
HXLINE(  93)						w3 = ( (Float)(0) );
            					}
            					else {
HXLINE(  93)						if (b0) {
HXLINE(  93)							w3 = -(w3);
            						}
            					}
HXDLIN(  93)					out2 = ((t3 * t3) * (((x3 + y3) + z3) + w3));
            				}
HXDLIN(  93)				Float s3 = (( (Float)((((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(3))) ) * ((Float)0.138196601));
HXDLIN(  93)				Float x4 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s3);
HXDLIN(  93)				Float y4 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s3);
HXDLIN(  93)				Float z4 = ((::flixel::addons::util::FlxSimplex_obj::z0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) )) + s3);
HXDLIN(  93)				Float w4 = ((::flixel::addons::util::FlxSimplex_obj::w0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(3)) )) + s3);
HXDLIN(  93)				Float t4 = ((((((Float).6) - (x4 * x4)) - (y4 * y4)) - (z4 * z4)) - (w4 * w4));
HXDLIN(  93)				int a2x3 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN(  93)				int a2y3 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN(  93)				int a2z3 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(2);
HXDLIN(  93)				int a2w3 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(3);
HXDLIN(  93)				int cell4 = cell->__get(3);
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::A2[cell4]++;
HXDLIN(  93)				Float out3;
HXDLIN(  93)				if ((t4 < 0)) {
HXLINE(  93)					out3 = ( (Float)(0) );
            				}
            				else {
HXLINE(  93)					t4 = (t4 * t4);
HXDLIN(  93)					int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x3) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::j + a2y3) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::k + a2z3) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::l + a2w3)))))))),32);
HXDLIN(  93)					bool b4 = (((h >> 4) & 1) == 1);
HXDLIN(  93)					bool b3 = (((h >> 3) & 1) == 1);
HXDLIN(  93)					bool b2 = (((h >> 2) & 1) == 1);
HXDLIN(  93)					bool b1 = (((h >> 1) & 1) == 1);
HXDLIN(  93)					bool b0 = ((h & 1) == 1);
HXDLIN(  93)					if (!(b3)) {
HXLINE(  93)						x4 = ( (Float)(0) );
            					}
            					else {
HXLINE(  93)						if (b2) {
HXLINE(  93)							x4 = -(x4);
            						}
            					}
HXDLIN(  93)					if (!(b4)) {
HXLINE(  93)						if (b3) {
HXLINE(  93)							y4 = ( (Float)(0) );
            						}
            						else {
HXLINE(  93)							if (b2) {
HXLINE(  93)								y4 = -(y4);
            							}
            						}
            					}
            					else {
HXLINE(  93)						if (b1) {
HXLINE(  93)							y4 = -(y4);
            						}
            					}
HXDLIN(  93)					if (b4) {
HXLINE(  93)						if (!(b3)) {
HXLINE(  93)							z4 = ( (Float)(0) );
            						}
            						else {
HXLINE(  93)							if (b0) {
HXLINE(  93)								z4 = -(z4);
            							}
            						}
            					}
            					else {
HXLINE(  93)						if (b1) {
HXLINE(  93)							z4 = -(z4);
            						}
            					}
HXDLIN(  93)					bool w;
HXDLIN(  93)					if (b4) {
HXLINE(  93)						w = b3;
            					}
            					else {
HXLINE(  93)						w = false;
            					}
HXDLIN(  93)					if (w) {
HXLINE(  93)						w4 = ( (Float)(0) );
            					}
            					else {
HXLINE(  93)						if (b0) {
HXLINE(  93)							w4 = -(w4);
            						}
            					}
HXDLIN(  93)					out3 = ((t4 * t4) * (((x4 + y4) + z4) + w4));
            				}
HXDLIN(  93)				Float s4 = (( (Float)((((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(3))) ) * ((Float)0.138196601));
HXDLIN(  93)				Float x5 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s4);
HXDLIN(  93)				Float y5 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s4);
HXDLIN(  93)				Float z5 = ((::flixel::addons::util::FlxSimplex_obj::z0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) )) + s4);
HXDLIN(  93)				Float w5 = ((::flixel::addons::util::FlxSimplex_obj::w0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(3)) )) + s4);
HXDLIN(  93)				Float t5 = ((((((Float).6) - (x5 * x5)) - (y5 * y5)) - (z5 * z5)) - (w5 * w5));
HXDLIN(  93)				int a2x4 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN(  93)				int a2y4 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN(  93)				int a2z4 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(2);
HXDLIN(  93)				int a2w4 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(3);
HXDLIN(  93)				::flixel::addons::util::FlxSimplex_obj::A2[0]++;
HXDLIN(  93)				Float out4;
HXDLIN(  93)				if ((t5 < 0)) {
HXLINE(  93)					out4 = ( (Float)(0) );
            				}
            				else {
HXLINE(  93)					t5 = (t5 * t5);
HXDLIN(  93)					int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x4) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::j + a2y4) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::k + a2z4) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::l + a2w4)))))))),32);
HXDLIN(  93)					bool b4 = (((h >> 4) & 1) == 1);
HXDLIN(  93)					bool b3 = (((h >> 3) & 1) == 1);
HXDLIN(  93)					bool b2 = (((h >> 2) & 1) == 1);
HXDLIN(  93)					bool b1 = (((h >> 1) & 1) == 1);
HXDLIN(  93)					bool b0 = ((h & 1) == 1);
HXDLIN(  93)					if (!(b3)) {
HXLINE(  93)						x5 = ( (Float)(0) );
            					}
            					else {
HXLINE(  93)						if (b2) {
HXLINE(  93)							x5 = -(x5);
            						}
            					}
HXDLIN(  93)					if (!(b4)) {
HXLINE(  93)						if (b3) {
HXLINE(  93)							y5 = ( (Float)(0) );
            						}
            						else {
HXLINE(  93)							if (b2) {
HXLINE(  93)								y5 = -(y5);
            							}
            						}
            					}
            					else {
HXLINE(  93)						if (b1) {
HXLINE(  93)							y5 = -(y5);
            						}
            					}
HXDLIN(  93)					if (b4) {
HXLINE(  93)						if (!(b3)) {
HXLINE(  93)							z5 = ( (Float)(0) );
            						}
            						else {
HXLINE(  93)							if (b0) {
HXLINE(  93)								z5 = -(z5);
            							}
            						}
            					}
            					else {
HXLINE(  93)						if (b1) {
HXLINE(  93)							z5 = -(z5);
            						}
            					}
HXDLIN(  93)					bool w;
HXDLIN(  93)					if (b4) {
HXLINE(  93)						w = b3;
            					}
            					else {
HXLINE(  93)						w = false;
            					}
HXDLIN(  93)					if (w) {
HXLINE(  93)						w5 = ( (Float)(0) );
            					}
            					else {
HXLINE(  93)						if (b0) {
HXLINE(  93)							w5 = -(w5);
            						}
            					}
HXDLIN(  93)					out4 = ((t5 * t5) * (((x5 + y5) + z5) + w5));
            				}
HXDLIN(  93)				Float out5 = (( (Float)(27) ) * ((((out + out1) + out2) + out3) + out4));
HXDLIN(  93)				Float n1;
HXDLIN(  93)				if ((out5 < -1)) {
HXLINE(  93)					n1 = ( (Float)(-1) );
            				}
            				else {
HXLINE(  93)					if ((out5 > 1)) {
HXLINE(  93)						n1 = ( (Float)(1) );
            					}
            					else {
HXLINE(  93)						n1 = out5;
            					}
            				}
HXDLIN(  93)				n = (n + (n1 * amp));
HXLINE(  94)				max = (max + amp);
HXLINE(  95)				amp = (amp * persistence);
HXLINE(  96)				scale = (scale * ( (Float)(2) ));
            			}
            		}
HXLINE(  99)		return (n / max);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(FlxSimplex_obj,simplexTiles,return )

Float FlxSimplex_obj::simplexOctaves(Float x,Float y,::hx::Null< Float >  __o_scale,::hx::Null< Float >  __o_persistence,::hx::Null< int >  __o_octaves){
            		Float scale = __o_scale.Default(1);
            		Float persistence = __o_persistence.Default(1);
            		int octaves = __o_octaves.Default(1);
            	HX_STACKFRAME(&_hx_pos_331c5b38a3cfaeb4_113_simplexOctaves)
HXLINE( 114)		if ((octaves < 1)) {
HXLINE( 115)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("The number of octaves must be greater than 0.",53,4b,87,a6)));
            		}
HXLINE( 117)		Float max = ( (Float)(0) );
HXDLIN( 117)		Float amp = ( (Float)(1) );
HXDLIN( 117)		Float n = ( (Float)(0) );
HXLINE( 119)		{
HXLINE( 119)			int _g = 0;
HXDLIN( 119)			int _g1 = octaves;
HXDLIN( 119)			while((_g < _g1)){
HXLINE( 119)				_g = (_g + 1);
HXDLIN( 119)				int i = (_g - 1);
HXLINE( 121)				Float x1 = (x * scale);
HXDLIN( 121)				Float y1 = (y * scale);
HXDLIN( 121)				Float t = ((x1 + y1) * ((Float)0.3660254037));
HXDLIN( 121)				::flixel::addons::util::FlxSimplex_obj::i = ::Math_obj::floor((x1 + t));
HXDLIN( 121)				::flixel::addons::util::FlxSimplex_obj::j = ::Math_obj::floor((y1 + t));
HXDLIN( 121)				t = (( (Float)((::flixel::addons::util::FlxSimplex_obj::i + ::flixel::addons::util::FlxSimplex_obj::j)) ) * ((Float)0.2113248654));
HXDLIN( 121)				::flixel::addons::util::FlxSimplex_obj::x0 = ((x1 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::i) )) + t);
HXDLIN( 121)				::flixel::addons::util::FlxSimplex_obj::y0 = ((y1 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::j) )) + t);
HXDLIN( 121)				int hi;
HXDLIN( 121)				int lo;
HXDLIN( 121)				if ((::flixel::addons::util::FlxSimplex_obj::x0 > ::flixel::addons::util::FlxSimplex_obj::y0)) {
HXLINE( 121)					hi = 1;
HXDLIN( 121)					lo = 0;
            				}
            				else {
HXLINE( 121)					hi = 0;
HXDLIN( 121)					lo = 1;
            				}
HXDLIN( 121)				{
HXLINE( 121)					int i1 = (::flixel::addons::util::FlxSimplex_obj::A2[1] = 0);
HXDLIN( 121)					::flixel::addons::util::FlxSimplex_obj::A2[0] = i1;
            				}
HXDLIN( 121)				::flixel::addons::util::FlxSimplex_obj::i = (::flixel::addons::util::FlxSimplex_obj::i & 255);
HXDLIN( 121)				::flixel::addons::util::FlxSimplex_obj::j = (::flixel::addons::util::FlxSimplex_obj::j & 255);
HXDLIN( 121)				Float s = (( (Float)((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1))) ) * ((Float)0.2113248654));
HXDLIN( 121)				Float x2 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s);
HXDLIN( 121)				Float y2 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s);
HXDLIN( 121)				Float t1 = ((((Float).5) - (x2 * x2)) - (y2 * y2));
HXDLIN( 121)				int a2x = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN( 121)				int a2y = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN( 121)				::flixel::addons::util::FlxSimplex_obj::A2[lo]++;
HXDLIN( 121)				Float out;
HXDLIN( 121)				if ((t1 < 0)) {
HXLINE( 121)					out = ( (Float)(0) );
            				}
            				else {
HXLINE( 121)					t1 = (t1 * t1);
HXDLIN( 121)					int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::j + a2y)))),12);
HXDLIN( 121)					bool b3 = (((h >> 3) & 1) == 1);
HXDLIN( 121)					bool b2 = (((h >> 2) & 1) == 1);
HXDLIN( 121)					bool b1 = (((h >> 1) & 1) == 1);
HXDLIN( 121)					bool b0 = ((h & 1) == 1);
HXDLIN( 121)					if (!(b3)) {
HXLINE( 121)						if (b0) {
HXLINE( 121)							x2 = -(x2);
            						}
            					}
            					else {
HXLINE( 121)						x2 = ( (Float)(0) );
            					}
HXDLIN( 121)					if (!(b3)) {
HXLINE( 121)						if (!(b2)) {
HXLINE( 121)							if (b1) {
HXLINE( 121)								y2 = -(y2);
            							}
            						}
            						else {
HXLINE( 121)							y2 = ( (Float)(0) );
            						}
            					}
            					else {
HXLINE( 121)						if (b0) {
HXLINE( 121)							y2 = -(y2);
            						}
            					}
HXDLIN( 121)					out = ((t1 * t1) * (x2 + y2));
            				}
HXDLIN( 121)				Float s1 = (( (Float)((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1))) ) * ((Float)0.2113248654));
HXDLIN( 121)				Float x3 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s1);
HXDLIN( 121)				Float y3 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s1);
HXDLIN( 121)				Float t2 = ((((Float).5) - (x3 * x3)) - (y3 * y3));
HXDLIN( 121)				int a2x1 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN( 121)				int a2y1 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN( 121)				::flixel::addons::util::FlxSimplex_obj::A2[hi]++;
HXDLIN( 121)				Float out1;
HXDLIN( 121)				if ((t2 < 0)) {
HXLINE( 121)					out1 = ( (Float)(0) );
            				}
            				else {
HXLINE( 121)					t2 = (t2 * t2);
HXDLIN( 121)					int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x1) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::j + a2y1)))),12);
HXDLIN( 121)					bool b3 = (((h >> 3) & 1) == 1);
HXDLIN( 121)					bool b2 = (((h >> 2) & 1) == 1);
HXDLIN( 121)					bool b1 = (((h >> 1) & 1) == 1);
HXDLIN( 121)					bool b0 = ((h & 1) == 1);
HXDLIN( 121)					if (!(b3)) {
HXLINE( 121)						if (b0) {
HXLINE( 121)							x3 = -(x3);
            						}
            					}
            					else {
HXLINE( 121)						x3 = ( (Float)(0) );
            					}
HXDLIN( 121)					if (!(b3)) {
HXLINE( 121)						if (!(b2)) {
HXLINE( 121)							if (b1) {
HXLINE( 121)								y3 = -(y3);
            							}
            						}
            						else {
HXLINE( 121)							y3 = ( (Float)(0) );
            						}
            					}
            					else {
HXLINE( 121)						if (b0) {
HXLINE( 121)							y3 = -(y3);
            						}
            					}
HXDLIN( 121)					out1 = ((t2 * t2) * (x3 + y3));
            				}
HXDLIN( 121)				Float s2 = (( (Float)((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1))) ) * ((Float)0.2113248654));
HXDLIN( 121)				Float x4 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s2);
HXDLIN( 121)				Float y4 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s2);
HXDLIN( 121)				Float t3 = ((((Float).5) - (x4 * x4)) - (y4 * y4));
HXDLIN( 121)				int a2x2 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN( 121)				int a2y2 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN( 121)				::flixel::addons::util::FlxSimplex_obj::A2[0]++;
HXDLIN( 121)				Float out2;
HXDLIN( 121)				if ((t3 < 0)) {
HXLINE( 121)					out2 = ( (Float)(0) );
            				}
            				else {
HXLINE( 121)					t3 = (t3 * t3);
HXDLIN( 121)					int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x2) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::j + a2y2)))),12);
HXDLIN( 121)					bool b3 = (((h >> 3) & 1) == 1);
HXDLIN( 121)					bool b2 = (((h >> 2) & 1) == 1);
HXDLIN( 121)					bool b1 = (((h >> 1) & 1) == 1);
HXDLIN( 121)					bool b0 = ((h & 1) == 1);
HXDLIN( 121)					if (!(b3)) {
HXLINE( 121)						if (b0) {
HXLINE( 121)							x4 = -(x4);
            						}
            					}
            					else {
HXLINE( 121)						x4 = ( (Float)(0) );
            					}
HXDLIN( 121)					if (!(b3)) {
HXLINE( 121)						if (!(b2)) {
HXLINE( 121)							if (b1) {
HXLINE( 121)								y4 = -(y4);
            							}
            						}
            						else {
HXLINE( 121)							y4 = ( (Float)(0) );
            						}
            					}
            					else {
HXLINE( 121)						if (b0) {
HXLINE( 121)							y4 = -(y4);
            						}
            					}
HXDLIN( 121)					out2 = ((t3 * t3) * (x4 + y4));
            				}
HXDLIN( 121)				Float out3 = (( (Float)(70) ) * ((out + out1) + out2));
HXDLIN( 121)				Float n1;
HXDLIN( 121)				if ((out3 < -1)) {
HXLINE( 121)					n1 = ( (Float)(-1) );
            				}
            				else {
HXLINE( 121)					if ((out3 > 1)) {
HXLINE( 121)						n1 = ( (Float)(1) );
            					}
            					else {
HXLINE( 121)						n1 = out3;
            					}
            				}
HXDLIN( 121)				n = (n + (n1 * amp));
HXLINE( 122)				max = (max + amp);
HXLINE( 123)				amp = (amp * persistence);
HXLINE( 124)				scale = (scale * ( (Float)(2) ));
            			}
            		}
HXLINE( 127)		return (n / max);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(FlxSimplex_obj,simplexOctaves,return )

Float FlxSimplex_obj::simplex(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_331c5b38a3cfaeb4_138_simplex)
HXLINE( 139)		Float t = ((x + y) * ((Float)0.3660254037));
HXLINE( 141)		::flixel::addons::util::FlxSimplex_obj::i = ::Math_obj::floor((x + t));
HXLINE( 142)		::flixel::addons::util::FlxSimplex_obj::j = ::Math_obj::floor((y + t));
HXLINE( 144)		t = (( (Float)((::flixel::addons::util::FlxSimplex_obj::i + ::flixel::addons::util::FlxSimplex_obj::j)) ) * ((Float)0.2113248654));
HXLINE( 146)		::flixel::addons::util::FlxSimplex_obj::x0 = ((x - ( (Float)(::flixel::addons::util::FlxSimplex_obj::i) )) + t);
HXLINE( 147)		::flixel::addons::util::FlxSimplex_obj::y0 = ((y - ( (Float)(::flixel::addons::util::FlxSimplex_obj::j) )) + t);
HXLINE( 149)		int hi;
HXDLIN( 149)		int lo;
HXLINE( 150)		if ((::flixel::addons::util::FlxSimplex_obj::x0 > ::flixel::addons::util::FlxSimplex_obj::y0)) {
HXLINE( 152)			hi = 1;
HXLINE( 153)			lo = 0;
            		}
            		else {
HXLINE( 157)			hi = 0;
HXLINE( 158)			lo = 1;
            		}
HXLINE( 161)		{
HXLINE( 161)			int i = (::flixel::addons::util::FlxSimplex_obj::A2[1] = 0);
HXDLIN( 161)			::flixel::addons::util::FlxSimplex_obj::A2[0] = i;
            		}
HXLINE( 163)		::flixel::addons::util::FlxSimplex_obj::i = (::flixel::addons::util::FlxSimplex_obj::i & 255);
HXLINE( 164)		::flixel::addons::util::FlxSimplex_obj::j = (::flixel::addons::util::FlxSimplex_obj::j & 255);
HXLINE( 166)		Float s = (( (Float)((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1))) ) * ((Float)0.2113248654));
HXDLIN( 166)		Float x1 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s);
HXDLIN( 166)		Float y1 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s);
HXDLIN( 166)		Float t1 = ((((Float).5) - (x1 * x1)) - (y1 * y1));
HXDLIN( 166)		int a2x = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN( 166)		int a2y = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN( 166)		::flixel::addons::util::FlxSimplex_obj::A2[lo]++;
HXDLIN( 166)		Float out;
HXDLIN( 166)		if ((t1 < 0)) {
HXLINE( 166)			out = ( (Float)(0) );
            		}
            		else {
HXLINE( 166)			t1 = (t1 * t1);
HXDLIN( 166)			int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::j + a2y)))),12);
HXDLIN( 166)			bool b3 = (((h >> 3) & 1) == 1);
HXDLIN( 166)			bool b2 = (((h >> 2) & 1) == 1);
HXDLIN( 166)			bool b1 = (((h >> 1) & 1) == 1);
HXDLIN( 166)			bool b0 = ((h & 1) == 1);
HXDLIN( 166)			if (!(b3)) {
HXLINE( 166)				if (b0) {
HXLINE( 166)					x1 = -(x1);
            				}
            			}
            			else {
HXLINE( 166)				x1 = ( (Float)(0) );
            			}
HXDLIN( 166)			if (!(b3)) {
HXLINE( 166)				if (!(b2)) {
HXLINE( 166)					if (b1) {
HXLINE( 166)						y1 = -(y1);
            					}
            				}
            				else {
HXLINE( 166)					y1 = ( (Float)(0) );
            				}
            			}
            			else {
HXLINE( 166)				if (b0) {
HXLINE( 166)					y1 = -(y1);
            				}
            			}
HXDLIN( 166)			out = ((t1 * t1) * (x1 + y1));
            		}
HXDLIN( 166)		Float s1 = (( (Float)((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1))) ) * ((Float)0.2113248654));
HXDLIN( 166)		Float x2 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s1);
HXDLIN( 166)		Float y2 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s1);
HXDLIN( 166)		Float t2 = ((((Float).5) - (x2 * x2)) - (y2 * y2));
HXDLIN( 166)		int a2x1 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN( 166)		int a2y1 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN( 166)		::flixel::addons::util::FlxSimplex_obj::A2[hi]++;
HXDLIN( 166)		Float out1;
HXDLIN( 166)		if ((t2 < 0)) {
HXLINE( 166)			out1 = ( (Float)(0) );
            		}
            		else {
HXLINE( 166)			t2 = (t2 * t2);
HXDLIN( 166)			int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x1) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::j + a2y1)))),12);
HXDLIN( 166)			bool b3 = (((h >> 3) & 1) == 1);
HXDLIN( 166)			bool b2 = (((h >> 2) & 1) == 1);
HXDLIN( 166)			bool b1 = (((h >> 1) & 1) == 1);
HXDLIN( 166)			bool b0 = ((h & 1) == 1);
HXDLIN( 166)			if (!(b3)) {
HXLINE( 166)				if (b0) {
HXLINE( 166)					x2 = -(x2);
            				}
            			}
            			else {
HXLINE( 166)				x2 = ( (Float)(0) );
            			}
HXDLIN( 166)			if (!(b3)) {
HXLINE( 166)				if (!(b2)) {
HXLINE( 166)					if (b1) {
HXLINE( 166)						y2 = -(y2);
            					}
            				}
            				else {
HXLINE( 166)					y2 = ( (Float)(0) );
            				}
            			}
            			else {
HXLINE( 166)				if (b0) {
HXLINE( 166)					y2 = -(y2);
            				}
            			}
HXDLIN( 166)			out1 = ((t2 * t2) * (x2 + y2));
            		}
HXDLIN( 166)		Float s2 = (( (Float)((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1))) ) * ((Float)0.2113248654));
HXDLIN( 166)		Float x3 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s2);
HXDLIN( 166)		Float y3 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s2);
HXDLIN( 166)		Float t3 = ((((Float).5) - (x3 * x3)) - (y3 * y3));
HXDLIN( 166)		int a2x2 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN( 166)		int a2y2 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN( 166)		::flixel::addons::util::FlxSimplex_obj::A2[0]++;
HXDLIN( 166)		Float out2;
HXDLIN( 166)		if ((t3 < 0)) {
HXLINE( 166)			out2 = ( (Float)(0) );
            		}
            		else {
HXLINE( 166)			t3 = (t3 * t3);
HXDLIN( 166)			int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x2) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::j + a2y2)))),12);
HXDLIN( 166)			bool b3 = (((h >> 3) & 1) == 1);
HXDLIN( 166)			bool b2 = (((h >> 2) & 1) == 1);
HXDLIN( 166)			bool b1 = (((h >> 1) & 1) == 1);
HXDLIN( 166)			bool b0 = ((h & 1) == 1);
HXDLIN( 166)			if (!(b3)) {
HXLINE( 166)				if (b0) {
HXLINE( 166)					x3 = -(x3);
            				}
            			}
            			else {
HXLINE( 166)				x3 = ( (Float)(0) );
            			}
HXDLIN( 166)			if (!(b3)) {
HXLINE( 166)				if (!(b2)) {
HXLINE( 166)					if (b1) {
HXLINE( 166)						y3 = -(y3);
            					}
            				}
            				else {
HXLINE( 166)					y3 = ( (Float)(0) );
            				}
            			}
            			else {
HXLINE( 166)				if (b0) {
HXLINE( 166)					y3 = -(y3);
            				}
            			}
HXDLIN( 166)			out2 = ((t3 * t3) * (x3 + y3));
            		}
HXDLIN( 166)		Float out3 = (( (Float)(70) ) * ((out + out1) + out2));
HXLINE( 168)		if ((out3 < -1)) {
HXLINE( 169)			return ( (Float)(-1) );
            		}
HXLINE( 170)		if ((out3 > 1)) {
HXLINE( 171)			return ( (Float)(1) );
            		}
HXLINE( 172)		return out3;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FlxSimplex_obj,simplex,return )

Float FlxSimplex_obj::getCornerNoise(int a){
            	HX_STACKFRAME(&_hx_pos_331c5b38a3cfaeb4_182_getCornerNoise)
HXLINE( 183)		Float s = (( (Float)((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1))) ) * ((Float)0.2113248654));
HXLINE( 184)		Float x = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s);
HXLINE( 185)		Float y = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s);
HXLINE( 186)		Float t = ((((Float).5) - (x * x)) - (y * y));
HXLINE( 188)		int a2x = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN( 188)		int a2y = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXLINE( 190)		::flixel::addons::util::FlxSimplex_obj::A2[a]++;
HXLINE( 192)		if ((t < 0)) {
HXLINE( 193)			return ( (Float)(0) );
            		}
HXLINE( 195)		t = (t * t);
HXLINE( 197)		int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::j + a2y)))),12);
HXLINE( 199)		bool b3 = (((h >> 3) & 1) == 1);
HXLINE( 200)		bool b2 = (((h >> 2) & 1) == 1);
HXLINE( 201)		bool b1 = (((h >> 1) & 1) == 1);
HXLINE( 202)		bool b0 = ((h & 1) == 1);
HXLINE( 204)		if (!(b3)) {
HXLINE( 204)			if (b0) {
HXLINE( 204)				x = -(x);
            			}
            		}
            		else {
HXLINE( 204)			x = ( (Float)(0) );
            		}
HXLINE( 205)		if (!(b3)) {
HXLINE( 205)			if (!(b2)) {
HXLINE( 205)				if (b1) {
HXLINE( 205)					y = -(y);
            				}
            			}
            			else {
HXLINE( 205)				y = ( (Float)(0) );
            			}
            		}
            		else {
HXLINE( 205)			if (b0) {
HXLINE( 205)				y = -(y);
            			}
            		}
HXLINE( 207)		return ((t * t) * (x + y));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxSimplex_obj,getCornerNoise,return )

Float FlxSimplex_obj::simplex4D(Float x,Float y,Float z,Float w){
            	HX_STACKFRAME(&_hx_pos_331c5b38a3cfaeb4_221_simplex4D)
HXLINE( 222)		Float t = ((((x + y) + z) + w) * ((Float)0.309016994));
HXLINE( 224)		::flixel::addons::util::FlxSimplex_obj::i = ::Math_obj::floor((x + t));
HXLINE( 225)		::flixel::addons::util::FlxSimplex_obj::j = ::Math_obj::floor((y + t));
HXLINE( 226)		::flixel::addons::util::FlxSimplex_obj::k = ::Math_obj::floor((z + t));
HXLINE( 227)		::flixel::addons::util::FlxSimplex_obj::l = ::Math_obj::floor((w + t));
HXLINE( 229)		t = (( (Float)((((::flixel::addons::util::FlxSimplex_obj::i + ::flixel::addons::util::FlxSimplex_obj::j) + ::flixel::addons::util::FlxSimplex_obj::k) + ::flixel::addons::util::FlxSimplex_obj::l)) ) * ((Float)0.138196601));
HXLINE( 231)		::flixel::addons::util::FlxSimplex_obj::x0 = ((x - ( (Float)(::flixel::addons::util::FlxSimplex_obj::i) )) + t);
HXLINE( 232)		::flixel::addons::util::FlxSimplex_obj::y0 = ((y - ( (Float)(::flixel::addons::util::FlxSimplex_obj::j) )) + t);
HXLINE( 233)		::flixel::addons::util::FlxSimplex_obj::z0 = ((z - ( (Float)(::flixel::addons::util::FlxSimplex_obj::k) )) + t);
HXLINE( 234)		::flixel::addons::util::FlxSimplex_obj::w0 = ((w - ( (Float)(::flixel::addons::util::FlxSimplex_obj::l) )) + t);
HXLINE( 236)		int c0;
HXDLIN( 236)		if ((::flixel::addons::util::FlxSimplex_obj::x0 > ::flixel::addons::util::FlxSimplex_obj::y0)) {
HXLINE( 236)			c0 = 32;
            		}
            		else {
HXLINE( 236)			c0 = 0;
            		}
HXLINE( 237)		int c1;
HXDLIN( 237)		if ((::flixel::addons::util::FlxSimplex_obj::x0 > ::flixel::addons::util::FlxSimplex_obj::z0)) {
HXLINE( 237)			c1 = 16;
            		}
            		else {
HXLINE( 237)			c1 = 0;
            		}
HXLINE( 238)		int c2;
HXDLIN( 238)		if ((::flixel::addons::util::FlxSimplex_obj::y0 > ::flixel::addons::util::FlxSimplex_obj::z0)) {
HXLINE( 238)			c2 = 8;
            		}
            		else {
HXLINE( 238)			c2 = 0;
            		}
HXLINE( 239)		int c3;
HXDLIN( 239)		if ((::flixel::addons::util::FlxSimplex_obj::x0 > ::flixel::addons::util::FlxSimplex_obj::w0)) {
HXLINE( 239)			c3 = 4;
            		}
            		else {
HXLINE( 239)			c3 = 0;
            		}
HXLINE( 240)		int c4;
HXDLIN( 240)		if ((::flixel::addons::util::FlxSimplex_obj::y0 > ::flixel::addons::util::FlxSimplex_obj::w0)) {
HXLINE( 240)			c4 = 2;
            		}
            		else {
HXLINE( 240)			c4 = 0;
            		}
HXLINE( 241)		int c5;
HXDLIN( 241)		if ((::flixel::addons::util::FlxSimplex_obj::z0 > ::flixel::addons::util::FlxSimplex_obj::w0)) {
HXLINE( 241)			c5 = 1;
            		}
            		else {
HXLINE( 241)			c5 = 0;
            		}
HXLINE( 243)		::Array< int > cell = ::flixel::addons::util::FlxSimplex_obj::cells4D->__get((((((c0 + c1) + c2) + c3) + c4) + c5)).StaticCast< ::Array< int > >();
HXLINE( 245)		{
HXLINE( 245)			int i = (::flixel::addons::util::FlxSimplex_obj::A2[3] = 0);
HXDLIN( 245)			int i1 = (::flixel::addons::util::FlxSimplex_obj::A2[2] = i);
HXDLIN( 245)			int i2 = (::flixel::addons::util::FlxSimplex_obj::A2[1] = i1);
HXDLIN( 245)			::flixel::addons::util::FlxSimplex_obj::A2[0] = i2;
            		}
HXLINE( 247)		::flixel::addons::util::FlxSimplex_obj::i = (::flixel::addons::util::FlxSimplex_obj::i & 255);
HXLINE( 248)		::flixel::addons::util::FlxSimplex_obj::j = (::flixel::addons::util::FlxSimplex_obj::j & 255);
HXLINE( 249)		::flixel::addons::util::FlxSimplex_obj::k = (::flixel::addons::util::FlxSimplex_obj::k & 255);
HXLINE( 250)		::flixel::addons::util::FlxSimplex_obj::l = (::flixel::addons::util::FlxSimplex_obj::l & 255);
HXLINE( 252)		Float s = (( (Float)((((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(3))) ) * ((Float)0.138196601));
HXDLIN( 252)		Float x1 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s);
HXDLIN( 252)		Float y1 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s);
HXDLIN( 252)		Float z1 = ((::flixel::addons::util::FlxSimplex_obj::z0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) )) + s);
HXDLIN( 252)		Float w1 = ((::flixel::addons::util::FlxSimplex_obj::w0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(3)) )) + s);
HXDLIN( 252)		Float t1 = ((((((Float).6) - (x1 * x1)) - (y1 * y1)) - (z1 * z1)) - (w1 * w1));
HXDLIN( 252)		int a2x = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN( 252)		int a2y = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN( 252)		int a2z = ::flixel::addons::util::FlxSimplex_obj::A2->__get(2);
HXDLIN( 252)		int a2w = ::flixel::addons::util::FlxSimplex_obj::A2->__get(3);
HXDLIN( 252)		int cell1 = cell->__get(0);
HXDLIN( 252)		::flixel::addons::util::FlxSimplex_obj::A2[cell1]++;
HXDLIN( 252)		Float out;
HXDLIN( 252)		if ((t1 < 0)) {
HXLINE( 252)			out = ( (Float)(0) );
            		}
            		else {
HXLINE( 252)			t1 = (t1 * t1);
HXDLIN( 252)			int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::j + a2y) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::k + a2z) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::l + a2w)))))))),32);
HXDLIN( 252)			bool b4 = (((h >> 4) & 1) == 1);
HXDLIN( 252)			bool b3 = (((h >> 3) & 1) == 1);
HXDLIN( 252)			bool b2 = (((h >> 2) & 1) == 1);
HXDLIN( 252)			bool b1 = (((h >> 1) & 1) == 1);
HXDLIN( 252)			bool b0 = ((h & 1) == 1);
HXDLIN( 252)			if (!(b3)) {
HXLINE( 252)				x1 = ( (Float)(0) );
            			}
            			else {
HXLINE( 252)				if (b2) {
HXLINE( 252)					x1 = -(x1);
            				}
            			}
HXDLIN( 252)			if (!(b4)) {
HXLINE( 252)				if (b3) {
HXLINE( 252)					y1 = ( (Float)(0) );
            				}
            				else {
HXLINE( 252)					if (b2) {
HXLINE( 252)						y1 = -(y1);
            					}
            				}
            			}
            			else {
HXLINE( 252)				if (b1) {
HXLINE( 252)					y1 = -(y1);
            				}
            			}
HXDLIN( 252)			if (b4) {
HXLINE( 252)				if (!(b3)) {
HXLINE( 252)					z1 = ( (Float)(0) );
            				}
            				else {
HXLINE( 252)					if (b0) {
HXLINE( 252)						z1 = -(z1);
            					}
            				}
            			}
            			else {
HXLINE( 252)				if (b1) {
HXLINE( 252)					z1 = -(z1);
            				}
            			}
HXDLIN( 252)			bool w;
HXDLIN( 252)			if (b4) {
HXLINE( 252)				w = b3;
            			}
            			else {
HXLINE( 252)				w = false;
            			}
HXDLIN( 252)			if (w) {
HXLINE( 252)				w1 = ( (Float)(0) );
            			}
            			else {
HXLINE( 252)				if (b0) {
HXLINE( 252)					w1 = -(w1);
            				}
            			}
HXDLIN( 252)			out = ((t1 * t1) * (((x1 + y1) + z1) + w1));
            		}
HXLINE( 253)		Float s1 = (( (Float)((((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(3))) ) * ((Float)0.138196601));
HXDLIN( 253)		Float x2 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s1);
HXDLIN( 253)		Float y2 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s1);
HXDLIN( 253)		Float z2 = ((::flixel::addons::util::FlxSimplex_obj::z0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) )) + s1);
HXDLIN( 253)		Float w2 = ((::flixel::addons::util::FlxSimplex_obj::w0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(3)) )) + s1);
HXDLIN( 253)		Float t2 = ((((((Float).6) - (x2 * x2)) - (y2 * y2)) - (z2 * z2)) - (w2 * w2));
HXDLIN( 253)		int a2x1 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN( 253)		int a2y1 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN( 253)		int a2z1 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(2);
HXDLIN( 253)		int a2w1 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(3);
HXDLIN( 253)		int cell2 = cell->__get(1);
HXDLIN( 253)		::flixel::addons::util::FlxSimplex_obj::A2[cell2]++;
HXDLIN( 253)		Float out1;
HXDLIN( 253)		if ((t2 < 0)) {
HXLINE( 253)			out1 = ( (Float)(0) );
            		}
            		else {
HXLINE( 253)			t2 = (t2 * t2);
HXDLIN( 253)			int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x1) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::j + a2y1) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::k + a2z1) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::l + a2w1)))))))),32);
HXDLIN( 253)			bool b4 = (((h >> 4) & 1) == 1);
HXDLIN( 253)			bool b3 = (((h >> 3) & 1) == 1);
HXDLIN( 253)			bool b2 = (((h >> 2) & 1) == 1);
HXDLIN( 253)			bool b1 = (((h >> 1) & 1) == 1);
HXDLIN( 253)			bool b0 = ((h & 1) == 1);
HXDLIN( 253)			if (!(b3)) {
HXLINE( 253)				x2 = ( (Float)(0) );
            			}
            			else {
HXLINE( 253)				if (b2) {
HXLINE( 253)					x2 = -(x2);
            				}
            			}
HXDLIN( 253)			if (!(b4)) {
HXLINE( 253)				if (b3) {
HXLINE( 253)					y2 = ( (Float)(0) );
            				}
            				else {
HXLINE( 253)					if (b2) {
HXLINE( 253)						y2 = -(y2);
            					}
            				}
            			}
            			else {
HXLINE( 253)				if (b1) {
HXLINE( 253)					y2 = -(y2);
            				}
            			}
HXDLIN( 253)			if (b4) {
HXLINE( 253)				if (!(b3)) {
HXLINE( 253)					z2 = ( (Float)(0) );
            				}
            				else {
HXLINE( 253)					if (b0) {
HXLINE( 253)						z2 = -(z2);
            					}
            				}
            			}
            			else {
HXLINE( 253)				if (b1) {
HXLINE( 253)					z2 = -(z2);
            				}
            			}
HXDLIN( 253)			bool w;
HXDLIN( 253)			if (b4) {
HXLINE( 253)				w = b3;
            			}
            			else {
HXLINE( 253)				w = false;
            			}
HXDLIN( 253)			if (w) {
HXLINE( 253)				w2 = ( (Float)(0) );
            			}
            			else {
HXLINE( 253)				if (b0) {
HXLINE( 253)					w2 = -(w2);
            				}
            			}
HXDLIN( 253)			out1 = ((t2 * t2) * (((x2 + y2) + z2) + w2));
            		}
HXLINE( 254)		Float s2 = (( (Float)((((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(3))) ) * ((Float)0.138196601));
HXDLIN( 254)		Float x3 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s2);
HXDLIN( 254)		Float y3 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s2);
HXDLIN( 254)		Float z3 = ((::flixel::addons::util::FlxSimplex_obj::z0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) )) + s2);
HXDLIN( 254)		Float w3 = ((::flixel::addons::util::FlxSimplex_obj::w0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(3)) )) + s2);
HXDLIN( 254)		Float t3 = ((((((Float).6) - (x3 * x3)) - (y3 * y3)) - (z3 * z3)) - (w3 * w3));
HXDLIN( 254)		int a2x2 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN( 254)		int a2y2 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN( 254)		int a2z2 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(2);
HXDLIN( 254)		int a2w2 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(3);
HXDLIN( 254)		int cell3 = cell->__get(2);
HXDLIN( 254)		::flixel::addons::util::FlxSimplex_obj::A2[cell3]++;
HXDLIN( 254)		Float out2;
HXDLIN( 254)		if ((t3 < 0)) {
HXLINE( 254)			out2 = ( (Float)(0) );
            		}
            		else {
HXLINE( 254)			t3 = (t3 * t3);
HXDLIN( 254)			int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x2) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::j + a2y2) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::k + a2z2) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::l + a2w2)))))))),32);
HXDLIN( 254)			bool b4 = (((h >> 4) & 1) == 1);
HXDLIN( 254)			bool b3 = (((h >> 3) & 1) == 1);
HXDLIN( 254)			bool b2 = (((h >> 2) & 1) == 1);
HXDLIN( 254)			bool b1 = (((h >> 1) & 1) == 1);
HXDLIN( 254)			bool b0 = ((h & 1) == 1);
HXDLIN( 254)			if (!(b3)) {
HXLINE( 254)				x3 = ( (Float)(0) );
            			}
            			else {
HXLINE( 254)				if (b2) {
HXLINE( 254)					x3 = -(x3);
            				}
            			}
HXDLIN( 254)			if (!(b4)) {
HXLINE( 254)				if (b3) {
HXLINE( 254)					y3 = ( (Float)(0) );
            				}
            				else {
HXLINE( 254)					if (b2) {
HXLINE( 254)						y3 = -(y3);
            					}
            				}
            			}
            			else {
HXLINE( 254)				if (b1) {
HXLINE( 254)					y3 = -(y3);
            				}
            			}
HXDLIN( 254)			if (b4) {
HXLINE( 254)				if (!(b3)) {
HXLINE( 254)					z3 = ( (Float)(0) );
            				}
            				else {
HXLINE( 254)					if (b0) {
HXLINE( 254)						z3 = -(z3);
            					}
            				}
            			}
            			else {
HXLINE( 254)				if (b1) {
HXLINE( 254)					z3 = -(z3);
            				}
            			}
HXDLIN( 254)			bool w;
HXDLIN( 254)			if (b4) {
HXLINE( 254)				w = b3;
            			}
            			else {
HXLINE( 254)				w = false;
            			}
HXDLIN( 254)			if (w) {
HXLINE( 254)				w3 = ( (Float)(0) );
            			}
            			else {
HXLINE( 254)				if (b0) {
HXLINE( 254)					w3 = -(w3);
            				}
            			}
HXDLIN( 254)			out2 = ((t3 * t3) * (((x3 + y3) + z3) + w3));
            		}
HXLINE( 255)		Float s3 = (( (Float)((((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(3))) ) * ((Float)0.138196601));
HXDLIN( 255)		Float x4 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s3);
HXDLIN( 255)		Float y4 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s3);
HXDLIN( 255)		Float z4 = ((::flixel::addons::util::FlxSimplex_obj::z0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) )) + s3);
HXDLIN( 255)		Float w4 = ((::flixel::addons::util::FlxSimplex_obj::w0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(3)) )) + s3);
HXDLIN( 255)		Float t4 = ((((((Float).6) - (x4 * x4)) - (y4 * y4)) - (z4 * z4)) - (w4 * w4));
HXDLIN( 255)		int a2x3 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN( 255)		int a2y3 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN( 255)		int a2z3 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(2);
HXDLIN( 255)		int a2w3 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(3);
HXDLIN( 255)		int cell4 = cell->__get(3);
HXDLIN( 255)		::flixel::addons::util::FlxSimplex_obj::A2[cell4]++;
HXDLIN( 255)		Float out3;
HXDLIN( 255)		if ((t4 < 0)) {
HXLINE( 255)			out3 = ( (Float)(0) );
            		}
            		else {
HXLINE( 255)			t4 = (t4 * t4);
HXDLIN( 255)			int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x3) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::j + a2y3) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::k + a2z3) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::l + a2w3)))))))),32);
HXDLIN( 255)			bool b4 = (((h >> 4) & 1) == 1);
HXDLIN( 255)			bool b3 = (((h >> 3) & 1) == 1);
HXDLIN( 255)			bool b2 = (((h >> 2) & 1) == 1);
HXDLIN( 255)			bool b1 = (((h >> 1) & 1) == 1);
HXDLIN( 255)			bool b0 = ((h & 1) == 1);
HXDLIN( 255)			if (!(b3)) {
HXLINE( 255)				x4 = ( (Float)(0) );
            			}
            			else {
HXLINE( 255)				if (b2) {
HXLINE( 255)					x4 = -(x4);
            				}
            			}
HXDLIN( 255)			if (!(b4)) {
HXLINE( 255)				if (b3) {
HXLINE( 255)					y4 = ( (Float)(0) );
            				}
            				else {
HXLINE( 255)					if (b2) {
HXLINE( 255)						y4 = -(y4);
            					}
            				}
            			}
            			else {
HXLINE( 255)				if (b1) {
HXLINE( 255)					y4 = -(y4);
            				}
            			}
HXDLIN( 255)			if (b4) {
HXLINE( 255)				if (!(b3)) {
HXLINE( 255)					z4 = ( (Float)(0) );
            				}
            				else {
HXLINE( 255)					if (b0) {
HXLINE( 255)						z4 = -(z4);
            					}
            				}
            			}
            			else {
HXLINE( 255)				if (b1) {
HXLINE( 255)					z4 = -(z4);
            				}
            			}
HXDLIN( 255)			bool w;
HXDLIN( 255)			if (b4) {
HXLINE( 255)				w = b3;
            			}
            			else {
HXLINE( 255)				w = false;
            			}
HXDLIN( 255)			if (w) {
HXLINE( 255)				w4 = ( (Float)(0) );
            			}
            			else {
HXLINE( 255)				if (b0) {
HXLINE( 255)					w4 = -(w4);
            				}
            			}
HXDLIN( 255)			out3 = ((t4 * t4) * (((x4 + y4) + z4) + w4));
            		}
HXLINE( 256)		Float s4 = (( (Float)((((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(3))) ) * ((Float)0.138196601));
HXDLIN( 256)		Float x5 = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s4);
HXDLIN( 256)		Float y5 = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s4);
HXDLIN( 256)		Float z5 = ((::flixel::addons::util::FlxSimplex_obj::z0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) )) + s4);
HXDLIN( 256)		Float w5 = ((::flixel::addons::util::FlxSimplex_obj::w0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(3)) )) + s4);
HXDLIN( 256)		Float t5 = ((((((Float).6) - (x5 * x5)) - (y5 * y5)) - (z5 * z5)) - (w5 * w5));
HXDLIN( 256)		int a2x4 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN( 256)		int a2y4 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN( 256)		int a2z4 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(2);
HXDLIN( 256)		int a2w4 = ::flixel::addons::util::FlxSimplex_obj::A2->__get(3);
HXDLIN( 256)		::flixel::addons::util::FlxSimplex_obj::A2[0]++;
HXDLIN( 256)		Float out4;
HXDLIN( 256)		if ((t5 < 0)) {
HXLINE( 256)			out4 = ( (Float)(0) );
            		}
            		else {
HXLINE( 256)			t5 = (t5 * t5);
HXDLIN( 256)			int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x4) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::j + a2y4) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::k + a2z4) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::l + a2w4)))))))),32);
HXDLIN( 256)			bool b4 = (((h >> 4) & 1) == 1);
HXDLIN( 256)			bool b3 = (((h >> 3) & 1) == 1);
HXDLIN( 256)			bool b2 = (((h >> 2) & 1) == 1);
HXDLIN( 256)			bool b1 = (((h >> 1) & 1) == 1);
HXDLIN( 256)			bool b0 = ((h & 1) == 1);
HXDLIN( 256)			if (!(b3)) {
HXLINE( 256)				x5 = ( (Float)(0) );
            			}
            			else {
HXLINE( 256)				if (b2) {
HXLINE( 256)					x5 = -(x5);
            				}
            			}
HXDLIN( 256)			if (!(b4)) {
HXLINE( 256)				if (b3) {
HXLINE( 256)					y5 = ( (Float)(0) );
            				}
            				else {
HXLINE( 256)					if (b2) {
HXLINE( 256)						y5 = -(y5);
            					}
            				}
            			}
            			else {
HXLINE( 256)				if (b1) {
HXLINE( 256)					y5 = -(y5);
            				}
            			}
HXDLIN( 256)			if (b4) {
HXLINE( 256)				if (!(b3)) {
HXLINE( 256)					z5 = ( (Float)(0) );
            				}
            				else {
HXLINE( 256)					if (b0) {
HXLINE( 256)						z5 = -(z5);
            					}
            				}
            			}
            			else {
HXLINE( 256)				if (b1) {
HXLINE( 256)					z5 = -(z5);
            				}
            			}
HXDLIN( 256)			bool w;
HXDLIN( 256)			if (b4) {
HXLINE( 256)				w = b3;
            			}
            			else {
HXLINE( 256)				w = false;
            			}
HXDLIN( 256)			if (w) {
HXLINE( 256)				w5 = ( (Float)(0) );
            			}
            			else {
HXLINE( 256)				if (b0) {
HXLINE( 256)					w5 = -(w5);
            				}
            			}
HXDLIN( 256)			out4 = ((t5 * t5) * (((x5 + y5) + z5) + w5));
            		}
HXLINE( 252)		Float out5 = (( (Float)(27) ) * ((((out + out1) + out2) + out3) + out4));
HXLINE( 258)		if ((out5 < -1)) {
HXLINE( 259)			return ( (Float)(-1) );
            		}
HXLINE( 260)		if ((out5 > 1)) {
HXLINE( 261)			return ( (Float)(1) );
            		}
HXLINE( 262)		return out5;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(FlxSimplex_obj,simplex4D,return )

Float FlxSimplex_obj::getCornerNoise4D(int a){
            	HX_STACKFRAME(&_hx_pos_331c5b38a3cfaeb4_272_getCornerNoise4D)
HXLINE( 273)		Float s = (( (Float)((((::flixel::addons::util::FlxSimplex_obj::A2->__get(0) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) + ::flixel::addons::util::FlxSimplex_obj::A2->__get(3))) ) * ((Float)0.138196601));
HXLINE( 274)		Float x = ((::flixel::addons::util::FlxSimplex_obj::x0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(0)) )) + s);
HXLINE( 275)		Float y = ((::flixel::addons::util::FlxSimplex_obj::y0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(1)) )) + s);
HXLINE( 276)		Float z = ((::flixel::addons::util::FlxSimplex_obj::z0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(2)) )) + s);
HXLINE( 277)		Float w = ((::flixel::addons::util::FlxSimplex_obj::w0 - ( (Float)(::flixel::addons::util::FlxSimplex_obj::A2->__get(3)) )) + s);
HXLINE( 278)		Float t = ((((((Float).6) - (x * x)) - (y * y)) - (z * z)) - (w * w));
HXLINE( 280)		int a2x = ::flixel::addons::util::FlxSimplex_obj::A2->__get(0);
HXDLIN( 280)		int a2y = ::flixel::addons::util::FlxSimplex_obj::A2->__get(1);
HXDLIN( 280)		int a2z = ::flixel::addons::util::FlxSimplex_obj::A2->__get(2);
HXDLIN( 280)		int a2w = ::flixel::addons::util::FlxSimplex_obj::A2->__get(3);
HXLINE( 282)		::flixel::addons::util::FlxSimplex_obj::A2[a]++;
HXLINE( 284)		if ((t < 0)) {
HXLINE( 285)			return ( (Float)(0) );
            		}
HXLINE( 287)		t = (t * t);
HXLINE( 289)		int h = ::hx::Mod(::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::i + a2x) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::j + a2y) + ::flixel::addons::util::FlxSimplex_obj::p->__get(((::flixel::addons::util::FlxSimplex_obj::k + a2z) + ::flixel::addons::util::FlxSimplex_obj::p->__get((::flixel::addons::util::FlxSimplex_obj::l + a2w)))))))),32);
HXLINE( 291)		bool b4 = (((h >> 4) & 1) == 1);
HXLINE( 292)		bool b3 = (((h >> 3) & 1) == 1);
HXLINE( 293)		bool b2 = (((h >> 2) & 1) == 1);
HXLINE( 294)		bool b1 = (((h >> 1) & 1) == 1);
HXLINE( 295)		bool b0 = ((h & 1) == 1);
HXLINE( 297)		if (!(b3)) {
HXLINE( 297)			x = ( (Float)(0) );
            		}
            		else {
HXLINE( 297)			if (b2) {
HXLINE( 297)				x = -(x);
            			}
            		}
HXLINE( 298)		if (!(b4)) {
HXLINE( 298)			if (b3) {
HXLINE( 298)				y = ( (Float)(0) );
            			}
            			else {
HXLINE( 298)				if (b2) {
HXLINE( 298)					y = -(y);
            				}
            			}
            		}
            		else {
HXLINE( 298)			if (b1) {
HXLINE( 298)				y = -(y);
            			}
            		}
HXLINE( 299)		if (b4) {
HXLINE( 299)			if (!(b3)) {
HXLINE( 299)				z = ( (Float)(0) );
            			}
            			else {
HXLINE( 299)				if (b0) {
HXLINE( 299)					z = -(z);
            				}
            			}
            		}
            		else {
HXLINE( 299)			if (b1) {
HXLINE( 299)				z = -(z);
            			}
            		}
HXLINE( 300)		bool w1;
HXDLIN( 300)		if (b4) {
HXLINE( 300)			w1 = b3;
            		}
            		else {
HXLINE( 300)			w1 = false;
            		}
HXDLIN( 300)		if (w1) {
HXLINE( 300)			w = ( (Float)(0) );
            		}
            		else {
HXLINE( 300)			if (b0) {
HXLINE( 300)				w = -(w);
            			}
            		}
HXLINE( 302)		return ((t * t) * (((x + y) + z) + w));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxSimplex_obj,getCornerNoise4D,return )


FlxSimplex_obj::FlxSimplex_obj()
{
}

bool FlxSimplex_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"p") ) { outValue = ( p ); return true; }
		if (HX_FIELD_EQ(inName,"i") ) { outValue = ( i ); return true; }
		if (HX_FIELD_EQ(inName,"j") ) { outValue = ( j ); return true; }
		if (HX_FIELD_EQ(inName,"k") ) { outValue = ( k ); return true; }
		if (HX_FIELD_EQ(inName,"l") ) { outValue = ( l ); return true; }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"x0") ) { outValue = ( x0 ); return true; }
		if (HX_FIELD_EQ(inName,"y0") ) { outValue = ( y0 ); return true; }
		if (HX_FIELD_EQ(inName,"z0") ) { outValue = ( z0 ); return true; }
		if (HX_FIELD_EQ(inName,"w0") ) { outValue = ( w0 ); return true; }
		if (HX_FIELD_EQ(inName,"A2") ) { outValue = ( A2 ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"cells4D") ) { outValue = ( cells4D ); return true; }
		if (HX_FIELD_EQ(inName,"simplex") ) { outValue = simplex_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"simplex4D") ) { outValue = simplex4D_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"simplexTiles") ) { outValue = simplexTiles_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"simplexOctaves") ) { outValue = simplexOctaves_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getCornerNoise") ) { outValue = getCornerNoise_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"getCornerNoise4D") ) { outValue = getCornerNoise4D_dyn(); return true; }
	}
	return false;
}

bool FlxSimplex_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"p") ) { p=ioValue.Cast< ::Array< int > >(); return true; }
		if (HX_FIELD_EQ(inName,"i") ) { i=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"j") ) { j=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"k") ) { k=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"l") ) { l=ioValue.Cast< int >(); return true; }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"x0") ) { x0=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"y0") ) { y0=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"z0") ) { z0=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"w0") ) { w0=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"A2") ) { A2=ioValue.Cast< ::Array< int > >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"cells4D") ) { cells4D=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *FlxSimplex_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo FlxSimplex_obj_sStaticStorageInfo[] = {
	{::hx::fsFloat,(void *) &FlxSimplex_obj::SKEW,HX_("SKEW",0a,db,15,37)},
	{::hx::fsFloat,(void *) &FlxSimplex_obj::UNSKEW,HX_("UNSKEW",e3,c5,ac,1c)},
	{::hx::fsFloat,(void *) &FlxSimplex_obj::SKEW_4D,HX_("SKEW_4D",e5,6a,a9,6c)},
	{::hx::fsFloat,(void *) &FlxSimplex_obj::UNSKEW_4D,HX_("UNSKEW_4D",ac,0d,30,e4)},
	{::hx::fsObject /* ::Array< int > */ ,(void *) &FlxSimplex_obj::p,HX_("p",70,00,00,00)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(void *) &FlxSimplex_obj::cells4D,HX_("cells4D",61,80,d9,ed)},
	{::hx::fsInt,(void *) &FlxSimplex_obj::i,HX_("i",69,00,00,00)},
	{::hx::fsInt,(void *) &FlxSimplex_obj::j,HX_("j",6a,00,00,00)},
	{::hx::fsInt,(void *) &FlxSimplex_obj::k,HX_("k",6b,00,00,00)},
	{::hx::fsInt,(void *) &FlxSimplex_obj::l,HX_("l",6c,00,00,00)},
	{::hx::fsFloat,(void *) &FlxSimplex_obj::x0,HX_("x0",b8,68,00,00)},
	{::hx::fsFloat,(void *) &FlxSimplex_obj::y0,HX_("y0",97,69,00,00)},
	{::hx::fsFloat,(void *) &FlxSimplex_obj::z0,HX_("z0",76,6a,00,00)},
	{::hx::fsFloat,(void *) &FlxSimplex_obj::w0,HX_("w0",d9,67,00,00)},
	{::hx::fsObject /* ::Array< int > */ ,(void *) &FlxSimplex_obj::A2,HX_("A2",d1,38,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void FlxSimplex_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxSimplex_obj::SKEW,"SKEW");
	HX_MARK_MEMBER_NAME(FlxSimplex_obj::UNSKEW,"UNSKEW");
	HX_MARK_MEMBER_NAME(FlxSimplex_obj::SKEW_4D,"SKEW_4D");
	HX_MARK_MEMBER_NAME(FlxSimplex_obj::UNSKEW_4D,"UNSKEW_4D");
	HX_MARK_MEMBER_NAME(FlxSimplex_obj::p,"p");
	HX_MARK_MEMBER_NAME(FlxSimplex_obj::cells4D,"cells4D");
	HX_MARK_MEMBER_NAME(FlxSimplex_obj::i,"i");
	HX_MARK_MEMBER_NAME(FlxSimplex_obj::j,"j");
	HX_MARK_MEMBER_NAME(FlxSimplex_obj::k,"k");
	HX_MARK_MEMBER_NAME(FlxSimplex_obj::l,"l");
	HX_MARK_MEMBER_NAME(FlxSimplex_obj::x0,"x0");
	HX_MARK_MEMBER_NAME(FlxSimplex_obj::y0,"y0");
	HX_MARK_MEMBER_NAME(FlxSimplex_obj::z0,"z0");
	HX_MARK_MEMBER_NAME(FlxSimplex_obj::w0,"w0");
	HX_MARK_MEMBER_NAME(FlxSimplex_obj::A2,"A2");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxSimplex_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxSimplex_obj::SKEW,"SKEW");
	HX_VISIT_MEMBER_NAME(FlxSimplex_obj::UNSKEW,"UNSKEW");
	HX_VISIT_MEMBER_NAME(FlxSimplex_obj::SKEW_4D,"SKEW_4D");
	HX_VISIT_MEMBER_NAME(FlxSimplex_obj::UNSKEW_4D,"UNSKEW_4D");
	HX_VISIT_MEMBER_NAME(FlxSimplex_obj::p,"p");
	HX_VISIT_MEMBER_NAME(FlxSimplex_obj::cells4D,"cells4D");
	HX_VISIT_MEMBER_NAME(FlxSimplex_obj::i,"i");
	HX_VISIT_MEMBER_NAME(FlxSimplex_obj::j,"j");
	HX_VISIT_MEMBER_NAME(FlxSimplex_obj::k,"k");
	HX_VISIT_MEMBER_NAME(FlxSimplex_obj::l,"l");
	HX_VISIT_MEMBER_NAME(FlxSimplex_obj::x0,"x0");
	HX_VISIT_MEMBER_NAME(FlxSimplex_obj::y0,"y0");
	HX_VISIT_MEMBER_NAME(FlxSimplex_obj::z0,"z0");
	HX_VISIT_MEMBER_NAME(FlxSimplex_obj::w0,"w0");
	HX_VISIT_MEMBER_NAME(FlxSimplex_obj::A2,"A2");
};

#endif

::hx::Class FlxSimplex_obj::__mClass;

static ::String FlxSimplex_obj_sStaticFields[] = {
	HX_("SKEW",0a,db,15,37),
	HX_("UNSKEW",e3,c5,ac,1c),
	HX_("SKEW_4D",e5,6a,a9,6c),
	HX_("UNSKEW_4D",ac,0d,30,e4),
	HX_("p",70,00,00,00),
	HX_("cells4D",61,80,d9,ed),
	HX_("i",69,00,00,00),
	HX_("j",6a,00,00,00),
	HX_("k",6b,00,00,00),
	HX_("l",6c,00,00,00),
	HX_("x0",b8,68,00,00),
	HX_("y0",97,69,00,00),
	HX_("z0",76,6a,00,00),
	HX_("w0",d9,67,00,00),
	HX_("A2",d1,38,00,00),
	HX_("simplexTiles",9f,ef,00,b5),
	HX_("simplexOctaves",1d,42,56,0d),
	HX_("simplex",06,a8,a4,b6),
	HX_("getCornerNoise",8f,8e,b0,70),
	HX_("simplex4D",16,63,23,27),
	HX_("getCornerNoise4D",df,bd,dc,68),
	::String(null())
};

void FlxSimplex_obj::__register()
{
	FlxSimplex_obj _hx_dummy;
	FlxSimplex_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.addons.util.FlxSimplex",17,73,19,c3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FlxSimplex_obj::__GetStatic;
	__mClass->mSetStaticField = &FlxSimplex_obj::__SetStatic;
	__mClass->mMarkFunc = FlxSimplex_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(FlxSimplex_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< FlxSimplex_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxSimplex_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxSimplex_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxSimplex_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void FlxSimplex_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_331c5b38a3cfaeb4_10_boot)
HXDLIN(  10)		SKEW = ((Float)0.3660254037);
            	}
{
            	HX_STACKFRAME(&_hx_pos_331c5b38a3cfaeb4_11_boot)
HXDLIN(  11)		UNSKEW = ((Float)0.2113248654);
            	}
{
            	HX_STACKFRAME(&_hx_pos_331c5b38a3cfaeb4_13_boot)
HXDLIN(  13)		SKEW_4D = ((Float)0.309016994);
            	}
{
            	HX_STACKFRAME(&_hx_pos_331c5b38a3cfaeb4_14_boot)
HXDLIN(  14)		UNSKEW_4D = ((Float)0.138196601);
            	}
{
            	HX_STACKFRAME(&_hx_pos_331c5b38a3cfaeb4_16_boot)
HXDLIN(  16)		p = ::Array_obj< int >::fromData( _hx_array_data_c3197317_13,512);
            	}
{
            	HX_STACKFRAME(&_hx_pos_331c5b38a3cfaeb4_35_boot)
HXDLIN(  35)		cells4D = ::Array_obj< ::Dynamic>::__new(64)->init(0,::Array_obj< int >::fromData( _hx_array_data_c3197317_15,4))->init(1,::Array_obj< int >::fromData( _hx_array_data_c3197317_16,4))->init(2,::Array_obj< int >::fromData( _hx_array_data_c3197317_17,4))->init(3,::Array_obj< int >::fromData( _hx_array_data_c3197317_18,4))->init(4,::Array_obj< int >::fromData( _hx_array_data_c3197317_19,4))->init(5,::Array_obj< int >::fromData( _hx_array_data_c3197317_20,4))->init(6,::Array_obj< int >::fromData( _hx_array_data_c3197317_21,4))->init(7,::Array_obj< int >::fromData( _hx_array_data_c3197317_22,4))->init(8,::Array_obj< int >::fromData( _hx_array_data_c3197317_23,4))->init(9,::Array_obj< int >::fromData( _hx_array_data_c3197317_24,4))->init(10,::Array_obj< int >::fromData( _hx_array_data_c3197317_25,4))->init(11,::Array_obj< int >::fromData( _hx_array_data_c3197317_26,4))->init(12,::Array_obj< int >::fromData( _hx_array_data_c3197317_27,4))->init(13,::Array_obj< int >::fromData( _hx_array_data_c3197317_28,4))->init(14,::Array_obj< int >::fromData( _hx_array_data_c3197317_29,4))->init(15,::Array_obj< int >::fromData( _hx_array_data_c3197317_30,4))->init(16,::Array_obj< int >::fromData( _hx_array_data_c3197317_31,4))->init(17,::Array_obj< int >::fromData( _hx_array_data_c3197317_32,4))->init(18,::Array_obj< int >::fromData( _hx_array_data_c3197317_33,4))->init(19,::Array_obj< int >::fromData( _hx_array_data_c3197317_34,4))->init(20,::Array_obj< int >::fromData( _hx_array_data_c3197317_35,4))->init(21,::Array_obj< int >::fromData( _hx_array_data_c3197317_36,4))->init(22,::Array_obj< int >::fromData( _hx_array_data_c3197317_37,4))->init(23,::Array_obj< int >::fromData( _hx_array_data_c3197317_38,4))->init(24,::Array_obj< int >::fromData( _hx_array_data_c3197317_39,4))->init(25,::Array_obj< int >::fromData( _hx_array_data_c3197317_40,4))->init(26,::Array_obj< int >::fromData( _hx_array_data_c3197317_41,4))->init(27,::Array_obj< int >::fromData( _hx_array_data_c3197317_42,4))->init(28,::Array_obj< int >::fromData( _hx_array_data_c3197317_43,4))->init(29,::Array_obj< int >::fromData( _hx_array_data_c3197317_44,4))->init(30,::Array_obj< int >::fromData( _hx_array_data_c3197317_45,4))->init(31,::Array_obj< int >::fromData( _hx_array_data_c3197317_46,4))->init(32,::Array_obj< int >::fromData( _hx_array_data_c3197317_47,4))->init(33,::Array_obj< int >::fromData( _hx_array_data_c3197317_48,4))->init(34,::Array_obj< int >::fromData( _hx_array_data_c3197317_49,4))->init(35,::Array_obj< int >::fromData( _hx_array_data_c3197317_50,4))->init(36,::Array_obj< int >::fromData( _hx_array_data_c3197317_51,4))->init(37,::Array_obj< int >::fromData( _hx_array_data_c3197317_52,4))->init(38,::Array_obj< int >::fromData( _hx_array_data_c3197317_53,4))->init(39,::Array_obj< int >::fromData( _hx_array_data_c3197317_54,4))->init(40,::Array_obj< int >::fromData( _hx_array_data_c3197317_55,4))->init(41,::Array_obj< int >::fromData( _hx_array_data_c3197317_56,4))->init(42,::Array_obj< int >::fromData( _hx_array_data_c3197317_57,4))->init(43,::Array_obj< int >::fromData( _hx_array_data_c3197317_58,4))->init(44,::Array_obj< int >::fromData( _hx_array_data_c3197317_59,4))->init(45,::Array_obj< int >::fromData( _hx_array_data_c3197317_60,4))->init(46,::Array_obj< int >::fromData( _hx_array_data_c3197317_61,4))->init(47,::Array_obj< int >::fromData( _hx_array_data_c3197317_62,4))->init(48,::Array_obj< int >::fromData( _hx_array_data_c3197317_63,4))->init(49,::Array_obj< int >::fromData( _hx_array_data_c3197317_64,4))->init(50,::Array_obj< int >::fromData( _hx_array_data_c3197317_65,4))->init(51,::Array_obj< int >::fromData( _hx_array_data_c3197317_66,4))->init(52,::Array_obj< int >::fromData( _hx_array_data_c3197317_67,4))->init(53,::Array_obj< int >::fromData( _hx_array_data_c3197317_68,4))->init(54,::Array_obj< int >::fromData( _hx_array_data_c3197317_69,4))->init(55,::Array_obj< int >::fromData( _hx_array_data_c3197317_70,4))->init(56,::Array_obj< int >::fromData( _hx_array_data_c3197317_71,4))->init(57,::Array_obj< int >::fromData( _hx_array_data_c3197317_72,4))->init(58,::Array_obj< int >::fromData( _hx_array_data_c3197317_73,4))->init(59,::Array_obj< int >::fromData( _hx_array_data_c3197317_74,4))->init(60,::Array_obj< int >::fromData( _hx_array_data_c3197317_75,4))->init(61,::Array_obj< int >::fromData( _hx_array_data_c3197317_76,4))->init(62,::Array_obj< int >::fromData( _hx_array_data_c3197317_77,4))->init(63,::Array_obj< int >::fromData( _hx_array_data_c3197317_78,4));
            	}
{
            	HX_STACKFRAME(&_hx_pos_331c5b38a3cfaeb4_56_boot)
HXDLIN(  56)		A2 = ::Array_obj< int >::fromData( _hx_array_data_c3197317_80,4);
            	}
}

} // end namespace flixel
} // end namespace addons
} // end namespace util
