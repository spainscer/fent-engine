// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_display_shapes_FlxShape
#include <flixel/addons/display/shapes/FlxShape.h>
#endif
#ifndef INCLUDED_flixel_addons_display_shapes_FlxShapeBox
#include <flixel/addons/display/shapes/FlxShapeBox.h>
#endif
#ifndef INCLUDED_flixel_addons_display_shapes_FlxShapeType
#include <flixel/addons/display/shapes/FlxShapeType.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSpriteUtil
#include <flixel/util/FlxSpriteUtil.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_openfl_geom_Matrix
#include <openfl/geom/Matrix.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7c3c2d6eb00547e8_13_new,"flixel.addons.display.shapes.FlxShapeBox","new",0xcf34fac7,"flixel.addons.display.shapes.FlxShapeBox.new","flixel/addons/display/shapes/FlxShapeBox.hx",13,0x82ef1e89)
HX_LOCAL_STACK_FRAME(_hx_pos_7c3c2d6eb00547e8_21_update,"flixel.addons.display.shapes.FlxShapeBox","update",0x81cf9602,"flixel.addons.display.shapes.FlxShapeBox.update","flixel/addons/display/shapes/FlxShapeBox.hx",21,0x82ef1e89)
HX_LOCAL_STACK_FRAME(_hx_pos_7c3c2d6eb00547e8_26_drawSpecificShape,"flixel.addons.display.shapes.FlxShapeBox","drawSpecificShape",0x546d2f12,"flixel.addons.display.shapes.FlxShapeBox.drawSpecificShape","flixel/addons/display/shapes/FlxShapeBox.hx",26,0x82ef1e89)
namespace flixel{
namespace addons{
namespace display{
namespace shapes{

void FlxShapeBox_obj::__construct(Float X,Float Y,Float W,Float H, ::Dynamic LineStyle_,int FillColor){
            	HX_STACKFRAME(&_hx_pos_7c3c2d6eb00547e8_13_new)
HXLINE(  14)		super::__construct(X,Y,0,0,LineStyle_,FillColor,W,H);
HXLINE(  16)		this->shape_id = ::flixel::addons::display::shapes::FlxShapeType_obj::BOX_dyn();
            	}

Dynamic FlxShapeBox_obj::__CreateEmpty() { return new FlxShapeBox_obj; }

void *FlxShapeBox_obj::_hx_vtable = 0;

Dynamic FlxShapeBox_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FlxShapeBox_obj > _hx_result = new FlxShapeBox_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5]);
	return _hx_result;
}

bool FlxShapeBox_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x5cb61737) {
		if (inClassId<=(int)0x2c01639b) {
			if (inClassId<=(int)0x159bd734) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x159bd734;
			} else {
				return inClassId==(int)0x2c01639b;
			}
		} else {
			return inClassId==(int)0x5cb61737;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}

void FlxShapeBox_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_7c3c2d6eb00547e8_21_update)
HXDLIN(  21)		this->super::update(elapsed);
            	}


void FlxShapeBox_obj::drawSpecificShape( ::openfl::geom::Matrix matrix){
            	HX_STACKFRAME(&_hx_pos_7c3c2d6eb00547e8_26_drawSpecificShape)
HXDLIN(  26)		::flixel::util::FlxSpriteUtil_obj::drawRect(::hx::ObjectPtr<OBJ_>(this),(( (Float)(this->lineStyle->__Field(HX_("thickness",74,f1,66,5a),::hx::paccDynamic)) ) / ( (Float)(2) )),(( (Float)(this->lineStyle->__Field(HX_("thickness",74,f1,66,5a),::hx::paccDynamic)) ) / ( (Float)(2) )),this->shapeWidth,this->shapeHeight,this->fillColor,this->lineStyle,null());
            	}



::hx::ObjectPtr< FlxShapeBox_obj > FlxShapeBox_obj::__new(Float X,Float Y,Float W,Float H, ::Dynamic LineStyle_,int FillColor) {
	::hx::ObjectPtr< FlxShapeBox_obj > __this = new FlxShapeBox_obj();
	__this->__construct(X,Y,W,H,LineStyle_,FillColor);
	return __this;
}

::hx::ObjectPtr< FlxShapeBox_obj > FlxShapeBox_obj::__alloc(::hx::Ctx *_hx_ctx,Float X,Float Y,Float W,Float H, ::Dynamic LineStyle_,int FillColor) {
	FlxShapeBox_obj *__this = (FlxShapeBox_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FlxShapeBox_obj), true, "flixel.addons.display.shapes.FlxShapeBox"));
	*(void **)__this = FlxShapeBox_obj::_hx_vtable;
	__this->__construct(X,Y,W,H,LineStyle_,FillColor);
	return __this;
}

FlxShapeBox_obj::FlxShapeBox_obj()
{
}

::hx::Val FlxShapeBox_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"drawSpecificShape") ) { return ::hx::Val( drawSpecificShape_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *FlxShapeBox_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *FlxShapeBox_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxShapeBox_obj_sMemberFields[] = {
	HX_("update",09,86,05,87),
	HX_("drawSpecificShape",6b,3e,59,64),
	::String(null()) };

::hx::Class FlxShapeBox_obj::__mClass;

void FlxShapeBox_obj::__register()
{
	FlxShapeBox_obj _hx_dummy;
	FlxShapeBox_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.addons.display.shapes.FlxShapeBox",55,8b,c8,08);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FlxShapeBox_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FlxShapeBox_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxShapeBox_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxShapeBox_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace addons
} // end namespace display
} // end namespace shapes
